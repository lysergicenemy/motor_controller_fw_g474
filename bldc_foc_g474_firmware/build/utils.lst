ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"utils.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.sys_lock_cnt,"aw",%nobits
  18              		.align	2
  21              	sys_lock_cnt:
  22 0000 00000000 		.space	4
  23              		.section	.text.utils_step_towards,"ax",%progbits
  24              		.align	1
  25              		.global	utils_step_towards
  26              		.arch armv7e-m
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	utils_step_towards:
  33              	.LFB5:
  34              		.file 1 "Src/utils.c"
   1:Src/utils.c   **** /*
   2:Src/utils.c   **** 	Copyright 2016 - 2019 Benjamin Vedder	benjamin@vedder.se
   3:Src/utils.c   **** 
   4:Src/utils.c   **** 	This file is part of the VESC firmware.
   5:Src/utils.c   **** 
   6:Src/utils.c   **** 	The VESC firmware is free software: you can redistribute it and/or modify
   7:Src/utils.c   ****     it under the terms of the GNU General Public License as published by
   8:Src/utils.c   ****     the Free Software Foundation, either version 3 of the License, or
   9:Src/utils.c   ****     (at your option) any later version.
  10:Src/utils.c   **** 
  11:Src/utils.c   ****     The VESC firmware is distributed in the hope that it will be useful,
  12:Src/utils.c   ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:Src/utils.c   ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:Src/utils.c   ****     GNU General Public License for more details.
  15:Src/utils.c   **** 
  16:Src/utils.c   ****     You should have received a copy of the GNU General Public License
  17:Src/utils.c   ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:Src/utils.c   ****     */
  19:Src/utils.c   **** 
  20:Src/utils.c   **** #include "utils.h"
  21:Src/utils.c   **** //#include <math.h>
  22:Src/utils.c   **** #include <string.h>
  23:Src/utils.c   **** #include <stdlib.h>
  24:Src/utils.c   **** 
  25:Src/utils.c   **** // Private variables
  26:Src/utils.c   **** static volatile int sys_lock_cnt = 0;
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 2


  27:Src/utils.c   **** 
  28:Src/utils.c   **** void utils_step_towards(float *value, float goal, float step)
  29:Src/utils.c   **** {
  35              		.loc 1 29 1
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 16
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  40 0000 80B4     		push	{r7}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 7, -4
  44 0002 85B0     		sub	sp, sp, #20
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  50 0006 F860     		str	r0, [r7, #12]
  51 0008 87ED020A 		vstr.32	s0, [r7, #8]
  52 000c C7ED010A 		vstr.32	s1, [r7, #4]
  30:Src/utils.c   **** 	if (*value < goal)
  53              		.loc 1 30 6
  54 0010 FB68     		ldr	r3, [r7, #12]
  55 0012 D3ED007A 		vldr.32	s15, [r3]
  56              		.loc 1 30 5
  57 0016 97ED027A 		vldr.32	s14, [r7, #8]
  58 001a B4EEE77A 		vcmpe.f32	s14, s15
  59 001e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  60 0022 1CDD     		ble	.L15
  31:Src/utils.c   **** 	{
  32:Src/utils.c   **** 		if ((*value + step) < goal)
  61              		.loc 1 32 8
  62 0024 FB68     		ldr	r3, [r7, #12]
  63 0026 93ED007A 		vldr.32	s14, [r3]
  64              		.loc 1 32 15
  65 002a D7ED017A 		vldr.32	s15, [r7, #4]
  66 002e 77EE277A 		vadd.f32	s15, s14, s15
  67              		.loc 1 32 6
  68 0032 97ED027A 		vldr.32	s14, [r7, #8]
  69 0036 B4EEE77A 		vcmpe.f32	s14, s15
  70 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  71 003e 0ADD     		ble	.L16
  33:Src/utils.c   **** 		{
  34:Src/utils.c   **** 			*value += step;
  72              		.loc 1 34 11
  73 0040 FB68     		ldr	r3, [r7, #12]
  74 0042 93ED007A 		vldr.32	s14, [r3]
  75 0046 D7ED017A 		vldr.32	s15, [r7, #4]
  76 004a 77EE277A 		vadd.f32	s15, s14, s15
  77 004e FB68     		ldr	r3, [r7, #12]
  78 0050 C3ED007A 		vstr.32	s15, [r3]
  35:Src/utils.c   **** 		}
  36:Src/utils.c   **** 		else
  37:Src/utils.c   **** 		{
  38:Src/utils.c   **** 			*value = goal;
  39:Src/utils.c   **** 		}
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 3


  40:Src/utils.c   **** 	}
  41:Src/utils.c   **** 	else if (*value > goal)
  42:Src/utils.c   **** 	{
  43:Src/utils.c   **** 		if ((*value - step) > goal)
  44:Src/utils.c   **** 		{
  45:Src/utils.c   **** 			*value -= step;
  46:Src/utils.c   **** 		}
  47:Src/utils.c   **** 		else
  48:Src/utils.c   **** 		{
  49:Src/utils.c   **** 			*value = goal;
  50:Src/utils.c   **** 		}
  51:Src/utils.c   **** 	}
  52:Src/utils.c   **** }
  79              		.loc 1 52 1
  80 0054 2AE0     		b	.L18
  81              	.L16:
  38:Src/utils.c   **** 		}
  82              		.loc 1 38 11
  83 0056 FB68     		ldr	r3, [r7, #12]
  84 0058 BA68     		ldr	r2, [r7, #8]	@ float
  85 005a 1A60     		str	r2, [r3]	@ float
  86              		.loc 1 52 1
  87 005c 26E0     		b	.L18
  88              	.L15:
  41:Src/utils.c   **** 	{
  89              		.loc 1 41 11
  90 005e FB68     		ldr	r3, [r7, #12]
  91 0060 D3ED007A 		vldr.32	s15, [r3]
  41:Src/utils.c   **** 	{
  92              		.loc 1 41 10
  93 0064 97ED027A 		vldr.32	s14, [r7, #8]
  94 0068 B4EEE77A 		vcmpe.f32	s14, s15
  95 006c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  96 0070 00D4     		bmi	.L13
  97              		.loc 1 52 1
  98 0072 1BE0     		b	.L18
  99              	.L13:
  43:Src/utils.c   **** 		{
 100              		.loc 1 43 8
 101 0074 FB68     		ldr	r3, [r7, #12]
 102 0076 93ED007A 		vldr.32	s14, [r3]
  43:Src/utils.c   **** 		{
 103              		.loc 1 43 15
 104 007a D7ED017A 		vldr.32	s15, [r7, #4]
 105 007e 77EE677A 		vsub.f32	s15, s14, s15
  43:Src/utils.c   **** 		{
 106              		.loc 1 43 6
 107 0082 97ED027A 		vldr.32	s14, [r7, #8]
 108 0086 B4EEE77A 		vcmpe.f32	s14, s15
 109 008a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 110 008e 0AD5     		bpl	.L17
  45:Src/utils.c   **** 		}
 111              		.loc 1 45 11
 112 0090 FB68     		ldr	r3, [r7, #12]
 113 0092 93ED007A 		vldr.32	s14, [r3]
 114 0096 D7ED017A 		vldr.32	s15, [r7, #4]
 115 009a 77EE677A 		vsub.f32	s15, s14, s15
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 4


 116 009e FB68     		ldr	r3, [r7, #12]
 117 00a0 C3ED007A 		vstr.32	s15, [r3]
 118              		.loc 1 52 1
 119 00a4 02E0     		b	.L18
 120              	.L17:
  49:Src/utils.c   **** 		}
 121              		.loc 1 49 11
 122 00a6 FB68     		ldr	r3, [r7, #12]
 123 00a8 BA68     		ldr	r2, [r7, #8]	@ float
 124 00aa 1A60     		str	r2, [r3]	@ float
 125              	.L18:
 126              		.loc 1 52 1
 127 00ac 00BF     		nop
 128 00ae 1437     		adds	r7, r7, #20
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 4
 131 00b0 BD46     		mov	sp, r7
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 00b2 5DF8047B 		ldr	r7, [sp], #4
 136              	.LCFI5:
 137              		.cfi_restore 7
 138              		.cfi_def_cfa_offset 0
 139 00b6 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE5:
 143              		.section	.text.utils_calc_ratio,"ax",%progbits
 144              		.align	1
 145              		.global	utils_calc_ratio
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	utils_calc_ratio:
 152              	.LFB6:
  53:Src/utils.c   **** 
  54:Src/utils.c   **** float utils_calc_ratio(float low, float high, float val)
  55:Src/utils.c   **** {
 153              		.loc 1 55 1
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 16
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              	.LCFI6:
 160              		.cfi_def_cfa_offset 4
 161              		.cfi_offset 7, -4
 162 0002 85B0     		sub	sp, sp, #20
 163              	.LCFI7:
 164              		.cfi_def_cfa_offset 24
 165 0004 00AF     		add	r7, sp, #0
 166              	.LCFI8:
 167              		.cfi_def_cfa_register 7
 168 0006 87ED030A 		vstr.32	s0, [r7, #12]
 169 000a C7ED020A 		vstr.32	s1, [r7, #8]
 170 000e 87ED011A 		vstr.32	s2, [r7, #4]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 5


  56:Src/utils.c   **** 	return (val - low) / (high - low);
 171              		.loc 1 56 14
 172 0012 97ED017A 		vldr.32	s14, [r7, #4]
 173 0016 D7ED037A 		vldr.32	s15, [r7, #12]
 174 001a 37EE677A 		vsub.f32	s14, s14, s15
 175              		.loc 1 56 29
 176 001e D7ED026A 		vldr.32	s13, [r7, #8]
 177 0022 D7ED037A 		vldr.32	s15, [r7, #12]
 178 0026 76EEE77A 		vsub.f32	s15, s13, s15
 179              		.loc 1 56 21
 180 002a C7EE276A 		vdiv.f32	s13, s14, s15
 181 002e F0EE667A 		vmov.f32	s15, s13
  57:Src/utils.c   **** }
 182              		.loc 1 57 1
 183 0032 B0EE670A 		vmov.f32	s0, s15
 184 0036 1437     		adds	r7, r7, #20
 185              	.LCFI9:
 186              		.cfi_def_cfa_offset 4
 187 0038 BD46     		mov	sp, r7
 188              	.LCFI10:
 189              		.cfi_def_cfa_register 13
 190              		@ sp needed
 191 003a 5DF8047B 		ldr	r7, [sp], #4
 192              	.LCFI11:
 193              		.cfi_restore 7
 194              		.cfi_def_cfa_offset 0
 195 003e 7047     		bx	lr
 196              		.cfi_endproc
 197              	.LFE6:
 199              		.section	.text.utils_norm_angle,"ax",%progbits
 200              		.align	1
 201              		.global	utils_norm_angle
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv4-sp-d16
 207              	utils_norm_angle:
 208              	.LFB7:
  58:Src/utils.c   **** 
  59:Src/utils.c   **** /**
  60:Src/utils.c   ****  * Make sure that 0 <= angle < 360
  61:Src/utils.c   ****  *
  62:Src/utils.c   ****  * @param angle
  63:Src/utils.c   ****  * The angle to normalize.
  64:Src/utils.c   ****  */
  65:Src/utils.c   **** void utils_norm_angle(float *angle)
  66:Src/utils.c   **** {
 209              		.loc 1 66 1
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 8
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0000 80B5     		push	{r7, lr}
 214              	.LCFI12:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 82B0     		sub	sp, sp, #8
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 6


 219              	.LCFI13:
 220              		.cfi_def_cfa_offset 16
 221 0004 00AF     		add	r7, sp, #0
 222              	.LCFI14:
 223              		.cfi_def_cfa_register 7
 224 0006 7860     		str	r0, [r7, #4]
  67:Src/utils.c   **** 	*angle = fmodf(*angle, 360.0);
 225              		.loc 1 67 11
 226 0008 7B68     		ldr	r3, [r7, #4]
 227 000a D3ED007A 		vldr.32	s15, [r3]
 228 000e DFED110A 		vldr.32	s1, .L26
 229 0012 B0EE670A 		vmov.f32	s0, s15
 230 0016 FFF7FEFF 		bl	fmodf
 231 001a F0EE407A 		vmov.f32	s15, s0
 232              		.loc 1 67 9
 233 001e 7B68     		ldr	r3, [r7, #4]
 234 0020 C3ED007A 		vstr.32	s15, [r3]
  68:Src/utils.c   **** 
  69:Src/utils.c   **** 	if (*angle < 0.0)
 235              		.loc 1 69 6
 236 0024 7B68     		ldr	r3, [r7, #4]
 237 0026 D3ED007A 		vldr.32	s15, [r3]
 238              		.loc 1 69 5
 239 002a F5EEC07A 		vcmpe.f32	s15, #0
 240 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 241 0032 00D4     		bmi	.L24
  70:Src/utils.c   **** 	{
  71:Src/utils.c   **** 		*angle += 360.0;
  72:Src/utils.c   **** 	}
  73:Src/utils.c   **** }
 242              		.loc 1 73 1
 243 0034 09E0     		b	.L25
 244              	.L24:
  71:Src/utils.c   **** 	}
 245              		.loc 1 71 10
 246 0036 7B68     		ldr	r3, [r7, #4]
 247 0038 D3ED007A 		vldr.32	s15, [r3]
 248 003c 9FED057A 		vldr.32	s14, .L26
 249 0040 77EE877A 		vadd.f32	s15, s15, s14
 250 0044 7B68     		ldr	r3, [r7, #4]
 251 0046 C3ED007A 		vstr.32	s15, [r3]
 252              	.L25:
 253              		.loc 1 73 1
 254 004a 00BF     		nop
 255 004c 0837     		adds	r7, r7, #8
 256              	.LCFI15:
 257              		.cfi_def_cfa_offset 8
 258 004e BD46     		mov	sp, r7
 259              	.LCFI16:
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0050 80BD     		pop	{r7, pc}
 263              	.L27:
 264 0052 00BF     		.align	2
 265              	.L26:
 266 0054 0000B443 		.word	1135869952
 267              		.cfi_endproc
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 7


 268              	.LFE7:
 270              		.section	.text.utils_norm_angle_rad,"ax",%progbits
 271              		.align	1
 272              		.global	utils_norm_angle_rad
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu fpv4-sp-d16
 278              	utils_norm_angle_rad:
 279              	.LFB8:
  74:Src/utils.c   **** 
  75:Src/utils.c   **** /**
  76:Src/utils.c   ****  * Make sure that -pi <= angle < pi,
  77:Src/utils.c   ****  *
  78:Src/utils.c   ****  * TODO: Maybe use fmodf instead?
  79:Src/utils.c   ****  *
  80:Src/utils.c   ****  * @param angle
  81:Src/utils.c   ****  * The angle to normalize in radians.
  82:Src/utils.c   ****  * WARNING: Don't use too large angles.
  83:Src/utils.c   ****  */
  84:Src/utils.c   **** void utils_norm_angle_rad(float *angle)
  85:Src/utils.c   **** {
 280              		.loc 1 85 1
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 0000 80B4     		push	{r7}
 286              	.LCFI17:
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 7, -4
 289 0002 83B0     		sub	sp, sp, #12
 290              	.LCFI18:
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              	.LCFI19:
 294              		.cfi_def_cfa_register 7
 295 0006 7860     		str	r0, [r7, #4]
  86:Src/utils.c   **** 	while (*angle < -MF_PI)
 296              		.loc 1 86 8
 297 0008 09E0     		b	.L29
 298              	.L30:
  87:Src/utils.c   **** 	{
  88:Src/utils.c   **** 		*angle += 2.0f * M_2PI;
 299              		.loc 1 88 10
 300 000a 7B68     		ldr	r3, [r7, #4]
 301 000c D3ED007A 		vldr.32	s15, [r3]
 302 0010 9FED157A 		vldr.32	s14, .L33
 303 0014 77EE877A 		vadd.f32	s15, s15, s14
 304 0018 7B68     		ldr	r3, [r7, #4]
 305 001a C3ED007A 		vstr.32	s15, [r3]
 306              	.L29:
  86:Src/utils.c   **** 	while (*angle < -MF_PI)
 307              		.loc 1 86 9
 308 001e 7B68     		ldr	r3, [r7, #4]
 309 0020 D3ED007A 		vldr.32	s15, [r3]
  86:Src/utils.c   **** 	while (*angle < -MF_PI)
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 8


 310              		.loc 1 86 8
 311 0024 9FED117A 		vldr.32	s14, .L33+4
 312 0028 F4EEC77A 		vcmpe.f32	s15, s14
 313 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 314 0030 EBD4     		bmi	.L30
  89:Src/utils.c   **** 	}
  90:Src/utils.c   **** 
  91:Src/utils.c   **** 	while (*angle > MF_PI)
 315              		.loc 1 91 8
 316 0032 09E0     		b	.L31
 317              	.L32:
  92:Src/utils.c   **** 	{
  93:Src/utils.c   **** 		*angle -= M_2PI;
 318              		.loc 1 93 10
 319 0034 7B68     		ldr	r3, [r7, #4]
 320 0036 D3ED007A 		vldr.32	s15, [r3]
 321 003a 9FED0D7A 		vldr.32	s14, .L33+8
 322 003e 77EEC77A 		vsub.f32	s15, s15, s14
 323 0042 7B68     		ldr	r3, [r7, #4]
 324 0044 C3ED007A 		vstr.32	s15, [r3]
 325              	.L31:
  91:Src/utils.c   **** 	{
 326              		.loc 1 91 9
 327 0048 7B68     		ldr	r3, [r7, #4]
 328 004a D3ED007A 		vldr.32	s15, [r3]
  91:Src/utils.c   **** 	{
 329              		.loc 1 91 8
 330 004e 9FED097A 		vldr.32	s14, .L33+12
 331 0052 F4EEC77A 		vcmpe.f32	s15, s14
 332 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 333 005a EBDC     		bgt	.L32
  94:Src/utils.c   **** 	}
  95:Src/utils.c   **** }
 334              		.loc 1 95 1
 335 005c 00BF     		nop
 336 005e 0C37     		adds	r7, r7, #12
 337              	.LCFI20:
 338              		.cfi_def_cfa_offset 4
 339 0060 BD46     		mov	sp, r7
 340              	.LCFI21:
 341              		.cfi_def_cfa_register 13
 342              		@ sp needed
 343 0062 5DF8047B 		ldr	r7, [sp], #4
 344              	.LCFI22:
 345              		.cfi_restore 7
 346              		.cfi_def_cfa_offset 0
 347 0066 7047     		bx	lr
 348              	.L34:
 349              		.align	2
 350              	.L33:
 351 0068 DB0F4941 		.word	1095307227
 352 006c DB0F49C0 		.word	-1068953637
 353 0070 DB0FC940 		.word	1086918619
 354 0074 DB0F4940 		.word	1078530011
 355              		.cfi_endproc
 356              	.LFE8:
 358              		.section	.text.utils_truncate_number,"ax",%progbits
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 9


 359              		.align	1
 360              		.global	utils_truncate_number
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	utils_truncate_number:
 367              	.LFB9:
  96:Src/utils.c   **** 
  97:Src/utils.c   **** int utils_truncate_number(float *number, float min, float max)
  98:Src/utils.c   **** {
 368              		.loc 1 98 1
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 24
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373 0000 80B4     		push	{r7}
 374              	.LCFI23:
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 0002 87B0     		sub	sp, sp, #28
 378              	.LCFI24:
 379              		.cfi_def_cfa_offset 32
 380 0004 00AF     		add	r7, sp, #0
 381              	.LCFI25:
 382              		.cfi_def_cfa_register 7
 383 0006 F860     		str	r0, [r7, #12]
 384 0008 87ED020A 		vstr.32	s0, [r7, #8]
 385 000c C7ED010A 		vstr.32	s1, [r7, #4]
  99:Src/utils.c   **** 	int did_trunc = 0;
 386              		.loc 1 99 6
 387 0010 0023     		movs	r3, #0
 388 0012 7B61     		str	r3, [r7, #20]
 100:Src/utils.c   **** 
 101:Src/utils.c   **** 	if (*number > max)
 389              		.loc 1 101 6
 390 0014 FB68     		ldr	r3, [r7, #12]
 391 0016 D3ED007A 		vldr.32	s15, [r3]
 392              		.loc 1 101 5
 393 001a 97ED017A 		vldr.32	s14, [r7, #4]
 394 001e B4EEE77A 		vcmpe.f32	s14, s15
 395 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 396 0026 05D5     		bpl	.L43
 102:Src/utils.c   **** 	{
 103:Src/utils.c   **** 		*number = max;
 397              		.loc 1 103 11
 398 0028 FB68     		ldr	r3, [r7, #12]
 399 002a 7A68     		ldr	r2, [r7, #4]	@ float
 400 002c 1A60     		str	r2, [r3]	@ float
 104:Src/utils.c   **** 		did_trunc = 1;
 401              		.loc 1 104 13
 402 002e 0123     		movs	r3, #1
 403 0030 7B61     		str	r3, [r7, #20]
 404 0032 0EE0     		b	.L38
 405              	.L43:
 105:Src/utils.c   **** 	}
 106:Src/utils.c   **** 	else if (*number < min)
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 10


 406              		.loc 1 106 11
 407 0034 FB68     		ldr	r3, [r7, #12]
 408 0036 D3ED007A 		vldr.32	s15, [r3]
 409              		.loc 1 106 10
 410 003a 97ED027A 		vldr.32	s14, [r7, #8]
 411 003e B4EEE77A 		vcmpe.f32	s14, s15
 412 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 413 0046 04DD     		ble	.L38
 107:Src/utils.c   **** 	{
 108:Src/utils.c   **** 		*number = min;
 414              		.loc 1 108 11
 415 0048 FB68     		ldr	r3, [r7, #12]
 416 004a BA68     		ldr	r2, [r7, #8]	@ float
 417 004c 1A60     		str	r2, [r3]	@ float
 109:Src/utils.c   **** 		did_trunc = 1;
 418              		.loc 1 109 13
 419 004e 0123     		movs	r3, #1
 420 0050 7B61     		str	r3, [r7, #20]
 421              	.L38:
 110:Src/utils.c   **** 	}
 111:Src/utils.c   **** 
 112:Src/utils.c   **** 	return did_trunc;
 422              		.loc 1 112 9
 423 0052 7B69     		ldr	r3, [r7, #20]
 113:Src/utils.c   **** }
 424              		.loc 1 113 1
 425 0054 1846     		mov	r0, r3
 426 0056 1C37     		adds	r7, r7, #28
 427              	.LCFI26:
 428              		.cfi_def_cfa_offset 4
 429 0058 BD46     		mov	sp, r7
 430              	.LCFI27:
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 005a 5DF8047B 		ldr	r7, [sp], #4
 434              	.LCFI28:
 435              		.cfi_restore 7
 436              		.cfi_def_cfa_offset 0
 437 005e 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE9:
 441              		.section	.text.utils_truncate_number_int,"ax",%progbits
 442              		.align	1
 443              		.global	utils_truncate_number_int
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 447              		.fpu fpv4-sp-d16
 449              	utils_truncate_number_int:
 450              	.LFB10:
 114:Src/utils.c   **** 
 115:Src/utils.c   **** int utils_truncate_number_int(int *number, int min, int max)
 116:Src/utils.c   **** {
 451              		.loc 1 116 1
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 24
 454              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 11


 455              		@ link register save eliminated.
 456 0000 80B4     		push	{r7}
 457              	.LCFI29:
 458              		.cfi_def_cfa_offset 4
 459              		.cfi_offset 7, -4
 460 0002 87B0     		sub	sp, sp, #28
 461              	.LCFI30:
 462              		.cfi_def_cfa_offset 32
 463 0004 00AF     		add	r7, sp, #0
 464              	.LCFI31:
 465              		.cfi_def_cfa_register 7
 466 0006 F860     		str	r0, [r7, #12]
 467 0008 B960     		str	r1, [r7, #8]
 468 000a 7A60     		str	r2, [r7, #4]
 117:Src/utils.c   **** 	int did_trunc = 0;
 469              		.loc 1 117 6
 470 000c 0023     		movs	r3, #0
 471 000e 7B61     		str	r3, [r7, #20]
 118:Src/utils.c   **** 
 119:Src/utils.c   **** 	if (*number > max)
 472              		.loc 1 119 6
 473 0010 FB68     		ldr	r3, [r7, #12]
 474 0012 1B68     		ldr	r3, [r3]
 475              		.loc 1 119 5
 476 0014 7A68     		ldr	r2, [r7, #4]
 477 0016 9A42     		cmp	r2, r3
 478 0018 05DA     		bge	.L45
 120:Src/utils.c   **** 	{
 121:Src/utils.c   **** 		*number = max;
 479              		.loc 1 121 11
 480 001a FB68     		ldr	r3, [r7, #12]
 481 001c 7A68     		ldr	r2, [r7, #4]
 482 001e 1A60     		str	r2, [r3]
 122:Src/utils.c   **** 		did_trunc = 1;
 483              		.loc 1 122 13
 484 0020 0123     		movs	r3, #1
 485 0022 7B61     		str	r3, [r7, #20]
 486 0024 09E0     		b	.L46
 487              	.L45:
 123:Src/utils.c   **** 	}
 124:Src/utils.c   **** 	else if (*number < min)
 488              		.loc 1 124 11
 489 0026 FB68     		ldr	r3, [r7, #12]
 490 0028 1B68     		ldr	r3, [r3]
 491              		.loc 1 124 10
 492 002a BA68     		ldr	r2, [r7, #8]
 493 002c 9A42     		cmp	r2, r3
 494 002e 04DD     		ble	.L46
 125:Src/utils.c   **** 	{
 126:Src/utils.c   **** 		*number = min;
 495              		.loc 1 126 11
 496 0030 FB68     		ldr	r3, [r7, #12]
 497 0032 BA68     		ldr	r2, [r7, #8]
 498 0034 1A60     		str	r2, [r3]
 127:Src/utils.c   **** 		did_trunc = 1;
 499              		.loc 1 127 13
 500 0036 0123     		movs	r3, #1
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 12


 501 0038 7B61     		str	r3, [r7, #20]
 502              	.L46:
 128:Src/utils.c   **** 	}
 129:Src/utils.c   **** 
 130:Src/utils.c   **** 	return did_trunc;
 503              		.loc 1 130 9
 504 003a 7B69     		ldr	r3, [r7, #20]
 131:Src/utils.c   **** }
 505              		.loc 1 131 1
 506 003c 1846     		mov	r0, r3
 507 003e 1C37     		adds	r7, r7, #28
 508              	.LCFI32:
 509              		.cfi_def_cfa_offset 4
 510 0040 BD46     		mov	sp, r7
 511              	.LCFI33:
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0042 5DF8047B 		ldr	r7, [sp], #4
 515              	.LCFI34:
 516              		.cfi_restore 7
 517              		.cfi_def_cfa_offset 0
 518 0046 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE10:
 522              		.section	.text.utils_truncate_number_abs,"ax",%progbits
 523              		.align	1
 524              		.global	utils_truncate_number_abs
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu fpv4-sp-d16
 530              	utils_truncate_number_abs:
 531              	.LFB11:
 132:Src/utils.c   **** 
 133:Src/utils.c   **** int utils_truncate_number_abs(float *number, float max)
 134:Src/utils.c   **** {
 532              		.loc 1 134 1
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537 0000 80B4     		push	{r7}
 538              	.LCFI35:
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 0002 85B0     		sub	sp, sp, #20
 542              	.LCFI36:
 543              		.cfi_def_cfa_offset 24
 544 0004 00AF     		add	r7, sp, #0
 545              	.LCFI37:
 546              		.cfi_def_cfa_register 7
 547 0006 7860     		str	r0, [r7, #4]
 548 0008 87ED000A 		vstr.32	s0, [r7]
 135:Src/utils.c   **** 	int did_trunc = 0;
 549              		.loc 1 135 6
 550 000c 0023     		movs	r3, #0
 551 000e FB60     		str	r3, [r7, #12]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 13


 136:Src/utils.c   **** 
 137:Src/utils.c   **** 	if (*number > max)
 552              		.loc 1 137 6
 553 0010 7B68     		ldr	r3, [r7, #4]
 554 0012 D3ED007A 		vldr.32	s15, [r3]
 555              		.loc 1 137 5
 556 0016 97ED007A 		vldr.32	s14, [r7]
 557 001a B4EEE77A 		vcmpe.f32	s14, s15
 558 001e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 559 0022 05D5     		bpl	.L56
 138:Src/utils.c   **** 	{
 139:Src/utils.c   **** 		*number = max;
 560              		.loc 1 139 11
 561 0024 7B68     		ldr	r3, [r7, #4]
 562 0026 3A68     		ldr	r2, [r7]	@ float
 563 0028 1A60     		str	r2, [r3]	@ float
 140:Src/utils.c   **** 		did_trunc = 1;
 564              		.loc 1 140 13
 565 002a 0123     		movs	r3, #1
 566 002c FB60     		str	r3, [r7, #12]
 567 002e 14E0     		b	.L51
 568              	.L56:
 141:Src/utils.c   **** 	}
 142:Src/utils.c   **** 	else if (*number < -max)
 569              		.loc 1 142 11
 570 0030 7B68     		ldr	r3, [r7, #4]
 571 0032 93ED007A 		vldr.32	s14, [r3]
 572              		.loc 1 142 21
 573 0036 D7ED007A 		vldr.32	s15, [r7]
 574 003a F1EE677A 		vneg.f32	s15, s15
 575              		.loc 1 142 10
 576 003e B4EEE77A 		vcmpe.f32	s14, s15
 577 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 578 0046 08D5     		bpl	.L51
 143:Src/utils.c   **** 	{
 144:Src/utils.c   **** 		*number = -max;
 579              		.loc 1 144 13
 580 0048 D7ED007A 		vldr.32	s15, [r7]
 581 004c F1EE677A 		vneg.f32	s15, s15
 582              		.loc 1 144 11
 583 0050 7B68     		ldr	r3, [r7, #4]
 584 0052 C3ED007A 		vstr.32	s15, [r3]
 145:Src/utils.c   **** 		did_trunc = 1;
 585              		.loc 1 145 13
 586 0056 0123     		movs	r3, #1
 587 0058 FB60     		str	r3, [r7, #12]
 588              	.L51:
 146:Src/utils.c   **** 	}
 147:Src/utils.c   **** 
 148:Src/utils.c   **** 	return did_trunc;
 589              		.loc 1 148 9
 590 005a FB68     		ldr	r3, [r7, #12]
 149:Src/utils.c   **** }
 591              		.loc 1 149 1
 592 005c 1846     		mov	r0, r3
 593 005e 1437     		adds	r7, r7, #20
 594              	.LCFI38:
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 14


 595              		.cfi_def_cfa_offset 4
 596 0060 BD46     		mov	sp, r7
 597              	.LCFI39:
 598              		.cfi_def_cfa_register 13
 599              		@ sp needed
 600 0062 5DF8047B 		ldr	r7, [sp], #4
 601              	.LCFI40:
 602              		.cfi_restore 7
 603              		.cfi_def_cfa_offset 0
 604 0066 7047     		bx	lr
 605              		.cfi_endproc
 606              	.LFE11:
 608              		.section	.text.utils_map,"ax",%progbits
 609              		.align	1
 610              		.global	utils_map
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	utils_map:
 617              	.LFB12:
 150:Src/utils.c   **** 
 151:Src/utils.c   **** float utils_map(float x, float in_min, float in_max, float out_min, float out_max)
 152:Src/utils.c   **** {
 618              		.loc 1 152 1
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 24
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              	.LCFI41:
 625              		.cfi_def_cfa_offset 4
 626              		.cfi_offset 7, -4
 627 0002 87B0     		sub	sp, sp, #28
 628              	.LCFI42:
 629              		.cfi_def_cfa_offset 32
 630 0004 00AF     		add	r7, sp, #0
 631              	.LCFI43:
 632              		.cfi_def_cfa_register 7
 633 0006 87ED050A 		vstr.32	s0, [r7, #20]
 634 000a C7ED040A 		vstr.32	s1, [r7, #16]
 635 000e 87ED031A 		vstr.32	s2, [r7, #12]
 636 0012 C7ED021A 		vstr.32	s3, [r7, #8]
 637 0016 87ED012A 		vstr.32	s4, [r7, #4]
 153:Src/utils.c   **** 	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 638              		.loc 1 153 12
 639 001a 97ED057A 		vldr.32	s14, [r7, #20]
 640 001e D7ED047A 		vldr.32	s15, [r7, #16]
 641 0022 37EE677A 		vsub.f32	s14, s14, s15
 642              		.loc 1 153 33
 643 0026 D7ED016A 		vldr.32	s13, [r7, #4]
 644 002a D7ED027A 		vldr.32	s15, [r7, #8]
 645 002e 76EEE77A 		vsub.f32	s15, s13, s15
 646              		.loc 1 153 22
 647 0032 67EE276A 		vmul.f32	s13, s14, s15
 648              		.loc 1 153 54
 649 0036 97ED037A 		vldr.32	s14, [r7, #12]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 15


 650 003a D7ED047A 		vldr.32	s15, [r7, #16]
 651 003e 77EE677A 		vsub.f32	s15, s14, s15
 652              		.loc 1 153 44
 653 0042 86EEA77A 		vdiv.f32	s14, s13, s15
 654              		.loc 1 153 64
 655 0046 D7ED027A 		vldr.32	s15, [r7, #8]
 656 004a 77EE277A 		vadd.f32	s15, s14, s15
 154:Src/utils.c   **** }
 657              		.loc 1 154 1
 658 004e B0EE670A 		vmov.f32	s0, s15
 659 0052 1C37     		adds	r7, r7, #28
 660              	.LCFI44:
 661              		.cfi_def_cfa_offset 4
 662 0054 BD46     		mov	sp, r7
 663              	.LCFI45:
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 0056 5DF8047B 		ldr	r7, [sp], #4
 667              	.LCFI46:
 668              		.cfi_restore 7
 669              		.cfi_def_cfa_offset 0
 670 005a 7047     		bx	lr
 671              		.cfi_endproc
 672              	.LFE12:
 674              		.section	.text.utils_map_int,"ax",%progbits
 675              		.align	1
 676              		.global	utils_map_int
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 680              		.fpu fpv4-sp-d16
 682              	utils_map_int:
 683              	.LFB13:
 155:Src/utils.c   **** 
 156:Src/utils.c   **** int utils_map_int(int x, int in_min, int in_max, int out_min, int out_max)
 157:Src/utils.c   **** {
 684              		.loc 1 157 1
 685              		.cfi_startproc
 686              		@ args = 4, pretend = 0, frame = 16
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689 0000 80B4     		push	{r7}
 690              	.LCFI47:
 691              		.cfi_def_cfa_offset 4
 692              		.cfi_offset 7, -4
 693 0002 85B0     		sub	sp, sp, #20
 694              	.LCFI48:
 695              		.cfi_def_cfa_offset 24
 696 0004 00AF     		add	r7, sp, #0
 697              	.LCFI49:
 698              		.cfi_def_cfa_register 7
 699 0006 F860     		str	r0, [r7, #12]
 700 0008 B960     		str	r1, [r7, #8]
 701 000a 7A60     		str	r2, [r7, #4]
 702 000c 3B60     		str	r3, [r7]
 158:Src/utils.c   **** 	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 703              		.loc 1 158 12
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 16


 704 000e FA68     		ldr	r2, [r7, #12]
 705 0010 BB68     		ldr	r3, [r7, #8]
 706 0012 D31A     		subs	r3, r2, r3
 707              		.loc 1 158 33
 708 0014 B969     		ldr	r1, [r7, #24]
 709 0016 3A68     		ldr	r2, [r7]
 710 0018 8A1A     		subs	r2, r1, r2
 711              		.loc 1 158 22
 712 001a 02FB03F2 		mul	r2, r2, r3
 713              		.loc 1 158 54
 714 001e 7968     		ldr	r1, [r7, #4]
 715 0020 BB68     		ldr	r3, [r7, #8]
 716 0022 CB1A     		subs	r3, r1, r3
 717              		.loc 1 158 44
 718 0024 92FBF3F2 		sdiv	r2, r2, r3
 719              		.loc 1 158 64
 720 0028 3B68     		ldr	r3, [r7]
 721 002a 1344     		add	r3, r3, r2
 159:Src/utils.c   **** }
 722              		.loc 1 159 1
 723 002c 1846     		mov	r0, r3
 724 002e 1437     		adds	r7, r7, #20
 725              	.LCFI50:
 726              		.cfi_def_cfa_offset 4
 727 0030 BD46     		mov	sp, r7
 728              	.LCFI51:
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 0032 5DF8047B 		ldr	r7, [sp], #4
 732              	.LCFI52:
 733              		.cfi_restore 7
 734              		.cfi_def_cfa_offset 0
 735 0036 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE13:
 739              		.global	__aeabi_f2d
 740              		.global	__aeabi_dsub
 741              		.global	__aeabi_dmul
 742              		.global	__aeabi_dadd
 743              		.global	__aeabi_d2f
 744              		.section	.text.utils_deadband,"ax",%progbits
 745              		.align	1
 746              		.global	utils_deadband
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu fpv4-sp-d16
 752              	utils_deadband:
 753              	.LFB14:
 160:Src/utils.c   **** 
 161:Src/utils.c   **** /**
 162:Src/utils.c   ****  * Truncate absolute values less than tres to zero. The value
 163:Src/utils.c   ****  * tres will be mapped to 0 and the value max to max.
 164:Src/utils.c   ****  */
 165:Src/utils.c   **** void utils_deadband(float *value, float tres, float max)
 166:Src/utils.c   **** {
 754              		.loc 1 166 1
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 17


 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 24
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 759              	.LCFI53:
 760              		.cfi_def_cfa_offset 24
 761              		.cfi_offset 4, -24
 762              		.cfi_offset 5, -20
 763              		.cfi_offset 7, -16
 764              		.cfi_offset 8, -12
 765              		.cfi_offset 9, -8
 766              		.cfi_offset 14, -4
 767 0004 86B0     		sub	sp, sp, #24
 768              	.LCFI54:
 769              		.cfi_def_cfa_offset 48
 770 0006 00AF     		add	r7, sp, #0
 771              	.LCFI55:
 772              		.cfi_def_cfa_register 7
 773 0008 F860     		str	r0, [r7, #12]
 774 000a 87ED020A 		vstr.32	s0, [r7, #8]
 775 000e C7ED010A 		vstr.32	s1, [r7, #4]
 167:Src/utils.c   **** 	if (fabsf(*value) < tres)
 776              		.loc 1 167 12
 777 0012 FB68     		ldr	r3, [r7, #12]
 778 0014 D3ED007A 		vldr.32	s15, [r3]
 779              		.loc 1 167 6
 780 0018 F0EEE77A 		vabs.f32	s15, s15
 781              		.loc 1 167 5
 782 001c 97ED027A 		vldr.32	s14, [r7, #8]
 783 0020 B4EEE77A 		vcmpe.f32	s14, s15
 784 0024 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 785 0028 04DD     		ble	.L69
 168:Src/utils.c   **** 	{
 169:Src/utils.c   **** 		*value = 0.0;
 786              		.loc 1 169 10
 787 002a FB68     		ldr	r3, [r7, #12]
 788 002c 4FF00002 		mov	r2, #0
 789 0030 1A60     		str	r2, [r3]	@ float
 170:Src/utils.c   **** 	}
 171:Src/utils.c   **** 	else
 172:Src/utils.c   **** 	{
 173:Src/utils.c   **** 		float k = max / (max - tres);
 174:Src/utils.c   **** 		if (*value > 0.0)
 175:Src/utils.c   **** 		{
 176:Src/utils.c   **** 			*value = k * *value + max * (1.0 - k);
 177:Src/utils.c   **** 		}
 178:Src/utils.c   **** 		else
 179:Src/utils.c   **** 		{
 180:Src/utils.c   **** 			*value = -(k * -*value + max * (1.0 - k));
 181:Src/utils.c   **** 		}
 182:Src/utils.c   **** 	}
 183:Src/utils.c   **** }
 790              		.loc 1 183 1
 791 0032 7DE0     		b	.L71
 792              	.L69:
 793              	.LBB2:
 173:Src/utils.c   **** 		if (*value > 0.0)
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 18


 794              		.loc 1 173 24
 795 0034 97ED017A 		vldr.32	s14, [r7, #4]
 796 0038 D7ED027A 		vldr.32	s15, [r7, #8]
 797 003c 37EE677A 		vsub.f32	s14, s14, s15
 173:Src/utils.c   **** 		if (*value > 0.0)
 798              		.loc 1 173 9
 799 0040 D7ED016A 		vldr.32	s13, [r7, #4]
 800 0044 C6EE877A 		vdiv.f32	s15, s13, s14
 801 0048 C7ED057A 		vstr.32	s15, [r7, #20]
 174:Src/utils.c   **** 		{
 802              		.loc 1 174 7
 803 004c FB68     		ldr	r3, [r7, #12]
 804 004e D3ED007A 		vldr.32	s15, [r3]
 174:Src/utils.c   **** 		{
 805              		.loc 1 174 6
 806 0052 F5EEC07A 		vcmpe.f32	s15, #0
 807 0056 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 808 005a 31DD     		ble	.L70
 176:Src/utils.c   **** 		}
 809              		.loc 1 176 17
 810 005c FB68     		ldr	r3, [r7, #12]
 811 005e 93ED007A 		vldr.32	s14, [r3]
 176:Src/utils.c   **** 		}
 812              		.loc 1 176 15
 813 0062 D7ED057A 		vldr.32	s15, [r7, #20]
 814 0066 67EE277A 		vmul.f32	s15, s14, s15
 815 006a 17EE900A 		vmov	r0, s15
 816 006e FFF7FEFF 		bl	__aeabi_f2d
 817              	.LVL0:
 818 0072 0446     		mov	r4, r0
 819 0074 0D46     		mov	r5, r1
 176:Src/utils.c   **** 		}
 820              		.loc 1 176 30
 821 0076 7868     		ldr	r0, [r7, #4]	@ float
 822 0078 FFF7FEFF 		bl	__aeabi_f2d
 823              	.LVL1:
 824 007c 8046     		mov	r8, r0
 825 007e 8946     		mov	r9, r1
 176:Src/utils.c   **** 		}
 826              		.loc 1 176 37
 827 0080 7869     		ldr	r0, [r7, #20]	@ float
 828 0082 FFF7FEFF 		bl	__aeabi_f2d
 829              	.LVL2:
 830 0086 0246     		mov	r2, r0
 831 0088 0B46     		mov	r3, r1
 832 008a 4FF00000 		mov	r0, #0
 833 008e 2B49     		ldr	r1, .L72
 834 0090 FFF7FEFF 		bl	__aeabi_dsub
 835              	.LVL3:
 836 0094 0246     		mov	r2, r0
 837 0096 0B46     		mov	r3, r1
 176:Src/utils.c   **** 		}
 838              		.loc 1 176 30
 839 0098 4046     		mov	r0, r8
 840 009a 4946     		mov	r1, r9
 841 009c FFF7FEFF 		bl	__aeabi_dmul
 842              	.LVL4:
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 19


 843 00a0 0246     		mov	r2, r0
 844 00a2 0B46     		mov	r3, r1
 176:Src/utils.c   **** 		}
 845              		.loc 1 176 24
 846 00a4 2046     		mov	r0, r4
 847 00a6 2946     		mov	r1, r5
 848 00a8 FFF7FEFF 		bl	__aeabi_dadd
 849              	.LVL5:
 850 00ac 0346     		mov	r3, r0
 851 00ae 0C46     		mov	r4, r1
 852 00b0 1846     		mov	r0, r3
 853 00b2 2146     		mov	r1, r4
 854 00b4 FFF7FEFF 		bl	__aeabi_d2f
 855              	.LVL6:
 856 00b8 0246     		mov	r2, r0	@ float
 176:Src/utils.c   **** 		}
 857              		.loc 1 176 11
 858 00ba FB68     		ldr	r3, [r7, #12]
 859 00bc 1A60     		str	r2, [r3]	@ float
 860              	.LBE2:
 861              		.loc 1 183 1
 862 00be 37E0     		b	.L71
 863              	.L70:
 864              	.LBB3:
 180:Src/utils.c   **** 		}
 865              		.loc 1 180 20
 866 00c0 FB68     		ldr	r3, [r7, #12]
 867 00c2 D3ED007A 		vldr.32	s15, [r3]
 180:Src/utils.c   **** 		}
 868              		.loc 1 180 19
 869 00c6 B1EE677A 		vneg.f32	s14, s15
 180:Src/utils.c   **** 		}
 870              		.loc 1 180 17
 871 00ca D7ED057A 		vldr.32	s15, [r7, #20]
 872 00ce 67EE277A 		vmul.f32	s15, s14, s15
 873 00d2 17EE900A 		vmov	r0, s15
 874 00d6 FFF7FEFF 		bl	__aeabi_f2d
 875              	.LVL7:
 876 00da 0446     		mov	r4, r0
 877 00dc 0D46     		mov	r5, r1
 180:Src/utils.c   **** 		}
 878              		.loc 1 180 33
 879 00de 7868     		ldr	r0, [r7, #4]	@ float
 880 00e0 FFF7FEFF 		bl	__aeabi_f2d
 881              	.LVL8:
 882 00e4 8046     		mov	r8, r0
 883 00e6 8946     		mov	r9, r1
 180:Src/utils.c   **** 		}
 884              		.loc 1 180 40
 885 00e8 7869     		ldr	r0, [r7, #20]	@ float
 886 00ea FFF7FEFF 		bl	__aeabi_f2d
 887              	.LVL9:
 888 00ee 0246     		mov	r2, r0
 889 00f0 0B46     		mov	r3, r1
 890 00f2 4FF00000 		mov	r0, #0
 891 00f6 1149     		ldr	r1, .L72
 892 00f8 FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 20


 893              	.LVL10:
 894 00fc 0246     		mov	r2, r0
 895 00fe 0B46     		mov	r3, r1
 180:Src/utils.c   **** 		}
 896              		.loc 1 180 33
 897 0100 4046     		mov	r0, r8
 898 0102 4946     		mov	r1, r9
 899 0104 FFF7FEFF 		bl	__aeabi_dmul
 900              	.LVL11:
 901 0108 0246     		mov	r2, r0
 902 010a 0B46     		mov	r3, r1
 180:Src/utils.c   **** 		}
 903              		.loc 1 180 27
 904 010c 2046     		mov	r0, r4
 905 010e 2946     		mov	r1, r5
 906 0110 FFF7FEFF 		bl	__aeabi_dadd
 907              	.LVL12:
 908 0114 0346     		mov	r3, r0
 909 0116 0C46     		mov	r4, r1
 910 0118 1846     		mov	r0, r3
 911 011a 2146     		mov	r1, r4
 912 011c FFF7FEFF 		bl	__aeabi_d2f
 913              	.LVL13:
 914 0120 0346     		mov	r3, r0	@ float
 180:Src/utils.c   **** 		}
 915              		.loc 1 180 11
 916 0122 07EE903A 		vmov	s15, r3
 917 0126 F1EE677A 		vneg.f32	s15, s15
 918 012a FB68     		ldr	r3, [r7, #12]
 919 012c C3ED007A 		vstr.32	s15, [r3]
 920              	.L71:
 921              	.LBE3:
 922              		.loc 1 183 1
 923 0130 00BF     		nop
 924 0132 1837     		adds	r7, r7, #24
 925              	.LCFI56:
 926              		.cfi_def_cfa_offset 24
 927 0134 BD46     		mov	sp, r7
 928              	.LCFI57:
 929              		.cfi_def_cfa_register 13
 930              		@ sp needed
 931 0136 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 932              	.L73:
 933 013a 00BF     		.align	2
 934              	.L72:
 935 013c 0000F03F 		.word	1072693248
 936              		.cfi_endproc
 937              	.LFE14:
 939              		.section	.text.utils_angle_difference,"ax",%progbits
 940              		.align	1
 941              		.global	utils_angle_difference
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	utils_angle_difference:
 948              	.LFB15:
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 21


 184:Src/utils.c   **** 
 185:Src/utils.c   **** /**
 186:Src/utils.c   ****  * Get the difference between two angles. Will always be between -180 and +180 degrees.
 187:Src/utils.c   ****  * @param angle1
 188:Src/utils.c   ****  * The first angle
 189:Src/utils.c   ****  * @param angle2
 190:Src/utils.c   ****  * The second angle
 191:Src/utils.c   ****  * @return
 192:Src/utils.c   ****  * The difference between the angles
 193:Src/utils.c   ****  */
 194:Src/utils.c   **** float utils_angle_difference(float angle1, float angle2)
 195:Src/utils.c   **** {
 949              		.loc 1 195 1
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 16
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954 0000 80B4     		push	{r7}
 955              	.LCFI58:
 956              		.cfi_def_cfa_offset 4
 957              		.cfi_offset 7, -4
 958 0002 85B0     		sub	sp, sp, #20
 959              	.LCFI59:
 960              		.cfi_def_cfa_offset 24
 961 0004 00AF     		add	r7, sp, #0
 962              	.LCFI60:
 963              		.cfi_def_cfa_register 7
 964 0006 87ED010A 		vstr.32	s0, [r7, #4]
 965 000a C7ED000A 		vstr.32	s1, [r7]
 196:Src/utils.c   **** 	// Faster in most cases
 197:Src/utils.c   **** 	float difference = angle1 - angle2;
 966              		.loc 1 197 8
 967 000e 97ED017A 		vldr.32	s14, [r7, #4]
 968 0012 D7ED007A 		vldr.32	s15, [r7]
 969 0016 77EE677A 		vsub.f32	s15, s14, s15
 970 001a C7ED037A 		vstr.32	s15, [r7, #12]
 198:Src/utils.c   **** 	while (difference < -180.0)
 971              		.loc 1 198 8
 972 001e 07E0     		b	.L75
 973              	.L76:
 199:Src/utils.c   **** 		difference += 2.0 * 180.0;
 974              		.loc 1 199 14
 975 0020 D7ED037A 		vldr.32	s15, [r7, #12]
 976 0024 9FED157A 		vldr.32	s14, .L80
 977 0028 77EE877A 		vadd.f32	s15, s15, s14
 978 002c C7ED037A 		vstr.32	s15, [r7, #12]
 979              	.L75:
 198:Src/utils.c   **** 	while (difference < -180.0)
 980              		.loc 1 198 8
 981 0030 D7ED037A 		vldr.32	s15, [r7, #12]
 982 0034 9FED127A 		vldr.32	s14, .L80+4
 983 0038 F4EEC77A 		vcmpe.f32	s15, s14
 984 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 985 0040 EED4     		bmi	.L76
 200:Src/utils.c   **** 	while (difference > 180.0)
 986              		.loc 1 200 8
 987 0042 07E0     		b	.L77
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 22


 988              	.L78:
 201:Src/utils.c   **** 		difference -= 2.0 * 180.0;
 989              		.loc 1 201 14
 990 0044 D7ED037A 		vldr.32	s15, [r7, #12]
 991 0048 9FED0C7A 		vldr.32	s14, .L80
 992 004c 77EEC77A 		vsub.f32	s15, s15, s14
 993 0050 C7ED037A 		vstr.32	s15, [r7, #12]
 994              	.L77:
 200:Src/utils.c   **** 	while (difference > 180.0)
 995              		.loc 1 200 8
 996 0054 D7ED037A 		vldr.32	s15, [r7, #12]
 997 0058 9FED0A7A 		vldr.32	s14, .L80+8
 998 005c F4EEC77A 		vcmpe.f32	s15, s14
 999 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1000 0064 EEDC     		bgt	.L78
 202:Src/utils.c   **** 	return difference;
 1001              		.loc 1 202 9
 1002 0066 FB68     		ldr	r3, [r7, #12]	@ float
 1003 0068 07EE903A 		vmov	s15, r3
 203:Src/utils.c   **** }
 1004              		.loc 1 203 1
 1005 006c B0EE670A 		vmov.f32	s0, s15
 1006 0070 1437     		adds	r7, r7, #20
 1007              	.LCFI61:
 1008              		.cfi_def_cfa_offset 4
 1009 0072 BD46     		mov	sp, r7
 1010              	.LCFI62:
 1011              		.cfi_def_cfa_register 13
 1012              		@ sp needed
 1013 0074 5DF8047B 		ldr	r7, [sp], #4
 1014              	.LCFI63:
 1015              		.cfi_restore 7
 1016              		.cfi_def_cfa_offset 0
 1017 0078 7047     		bx	lr
 1018              	.L81:
 1019 007a 00BF     		.align	2
 1020              	.L80:
 1021 007c 0000B443 		.word	1135869952
 1022 0080 000034C3 		.word	-1020002304
 1023 0084 00003443 		.word	1127481344
 1024              		.cfi_endproc
 1025              	.LFE15:
 1027              		.section	.text.utils_angle_difference_rad,"ax",%progbits
 1028              		.align	1
 1029              		.global	utils_angle_difference_rad
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1033              		.fpu fpv4-sp-d16
 1035              	utils_angle_difference_rad:
 1036              	.LFB16:
 204:Src/utils.c   **** 
 205:Src/utils.c   **** /**
 206:Src/utils.c   ****  * Get the difference between two angles. Will always be between -pi and +pi radians.
 207:Src/utils.c   ****  * @param angle1
 208:Src/utils.c   ****  * The first angle in radians
 209:Src/utils.c   ****  * @param angle2
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 23


 210:Src/utils.c   ****  * The second angle in radians
 211:Src/utils.c   ****  * @return
 212:Src/utils.c   ****  * The difference between the angles in radians
 213:Src/utils.c   ****  */
 214:Src/utils.c   **** float utils_angle_difference_rad(float angle1, float angle2)
 215:Src/utils.c   **** {
 1037              		.loc 1 215 1
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 16
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041              		@ link register save eliminated.
 1042 0000 80B4     		push	{r7}
 1043              	.LCFI64:
 1044              		.cfi_def_cfa_offset 4
 1045              		.cfi_offset 7, -4
 1046 0002 85B0     		sub	sp, sp, #20
 1047              	.LCFI65:
 1048              		.cfi_def_cfa_offset 24
 1049 0004 00AF     		add	r7, sp, #0
 1050              	.LCFI66:
 1051              		.cfi_def_cfa_register 7
 1052 0006 87ED010A 		vstr.32	s0, [r7, #4]
 1053 000a C7ED000A 		vstr.32	s1, [r7]
 216:Src/utils.c   **** 	float difference = angle1 - angle2;
 1054              		.loc 1 216 8
 1055 000e 97ED017A 		vldr.32	s14, [r7, #4]
 1056 0012 D7ED007A 		vldr.32	s15, [r7]
 1057 0016 77EE677A 		vsub.f32	s15, s14, s15
 1058 001a C7ED037A 		vstr.32	s15, [r7, #12]
 217:Src/utils.c   **** 	while (difference < -MF_PI)
 1059              		.loc 1 217 8
 1060 001e 07E0     		b	.L83
 1061              	.L84:
 218:Src/utils.c   **** 		difference += M_2PI;
 1062              		.loc 1 218 14
 1063 0020 D7ED037A 		vldr.32	s15, [r7, #12]
 1064 0024 9FED157A 		vldr.32	s14, .L88
 1065 0028 77EE877A 		vadd.f32	s15, s15, s14
 1066 002c C7ED037A 		vstr.32	s15, [r7, #12]
 1067              	.L83:
 217:Src/utils.c   **** 	while (difference < -MF_PI)
 1068              		.loc 1 217 8
 1069 0030 D7ED037A 		vldr.32	s15, [r7, #12]
 1070 0034 9FED127A 		vldr.32	s14, .L88+4
 1071 0038 F4EEC77A 		vcmpe.f32	s15, s14
 1072 003c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1073 0040 EED4     		bmi	.L84
 219:Src/utils.c   **** 	while (difference > MF_PI)
 1074              		.loc 1 219 8
 1075 0042 07E0     		b	.L85
 1076              	.L86:
 220:Src/utils.c   **** 		difference -= M_2PI;
 1077              		.loc 1 220 14
 1078 0044 D7ED037A 		vldr.32	s15, [r7, #12]
 1079 0048 9FED0C7A 		vldr.32	s14, .L88
 1080 004c 77EEC77A 		vsub.f32	s15, s15, s14
 1081 0050 C7ED037A 		vstr.32	s15, [r7, #12]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 24


 1082              	.L85:
 219:Src/utils.c   **** 	while (difference > MF_PI)
 1083              		.loc 1 219 8
 1084 0054 D7ED037A 		vldr.32	s15, [r7, #12]
 1085 0058 9FED0A7A 		vldr.32	s14, .L88+8
 1086 005c F4EEC77A 		vcmpe.f32	s15, s14
 1087 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1088 0064 EEDC     		bgt	.L86
 221:Src/utils.c   **** 	return difference;
 1089              		.loc 1 221 9
 1090 0066 FB68     		ldr	r3, [r7, #12]	@ float
 1091 0068 07EE903A 		vmov	s15, r3
 222:Src/utils.c   **** }
 1092              		.loc 1 222 1
 1093 006c B0EE670A 		vmov.f32	s0, s15
 1094 0070 1437     		adds	r7, r7, #20
 1095              	.LCFI67:
 1096              		.cfi_def_cfa_offset 4
 1097 0072 BD46     		mov	sp, r7
 1098              	.LCFI68:
 1099              		.cfi_def_cfa_register 13
 1100              		@ sp needed
 1101 0074 5DF8047B 		ldr	r7, [sp], #4
 1102              	.LCFI69:
 1103              		.cfi_restore 7
 1104              		.cfi_def_cfa_offset 0
 1105 0078 7047     		bx	lr
 1106              	.L89:
 1107 007a 00BF     		.align	2
 1108              	.L88:
 1109 007c DB0FC940 		.word	1086918619
 1110 0080 DB0F49C0 		.word	-1068953637
 1111 0084 DB0F4940 		.word	1078530011
 1112              		.cfi_endproc
 1113              	.LFE16:
 1115              		.section	.text.utils_avg_angles_rad_fast,"ax",%progbits
 1116              		.align	1
 1117              		.global	utils_avg_angles_rad_fast
 1118              		.syntax unified
 1119              		.thumb
 1120              		.thumb_func
 1121              		.fpu fpv4-sp-d16
 1123              	utils_avg_angles_rad_fast:
 1124              	.LFB17:
 223:Src/utils.c   **** 
 224:Src/utils.c   **** /**
 225:Src/utils.c   ****  * Takes the average of a number of angles.
 226:Src/utils.c   ****  *
 227:Src/utils.c   ****  * @param angles
 228:Src/utils.c   ****  * The angles in radians.
 229:Src/utils.c   ****  *
 230:Src/utils.c   ****  * @param angles_num
 231:Src/utils.c   ****  * The number of angles.
 232:Src/utils.c   ****  *
 233:Src/utils.c   ****  * @param weights
 234:Src/utils.c   ****  * The weight of the summarized angles
 235:Src/utils.c   ****  *
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 25


 236:Src/utils.c   ****  * @return
 237:Src/utils.c   ****  * The average angle.
 238:Src/utils.c   ****  */
 239:Src/utils.c   **** float utils_avg_angles_rad_fast(float *angles, float *weights, int angles_num)
 240:Src/utils.c   **** {
 1125              		.loc 1 240 1
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 40
 1128              		@ frame_needed = 1, uses_anonymous_args = 0
 1129 0000 80B5     		push	{r7, lr}
 1130              	.LCFI70:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 8AB0     		sub	sp, sp, #40
 1135              	.LCFI71:
 1136              		.cfi_def_cfa_offset 48
 1137 0004 00AF     		add	r7, sp, #0
 1138              	.LCFI72:
 1139              		.cfi_def_cfa_register 7
 1140 0006 F860     		str	r0, [r7, #12]
 1141 0008 B960     		str	r1, [r7, #8]
 1142 000a 7A60     		str	r2, [r7, #4]
 241:Src/utils.c   **** 	float s_sum = 0.0;
 1143              		.loc 1 241 8
 1144 000c 4FF00003 		mov	r3, #0
 1145 0010 7B62     		str	r3, [r7, #36]	@ float
 242:Src/utils.c   **** 	float c_sum = 0.0;
 1146              		.loc 1 242 8
 1147 0012 4FF00003 		mov	r3, #0
 1148 0016 3B62     		str	r3, [r7, #32]	@ float
 1149              	.LBB4:
 243:Src/utils.c   **** 
 244:Src/utils.c   **** 	for (int i = 0; i < angles_num; i++)
 1150              		.loc 1 244 11
 1151 0018 0023     		movs	r3, #0
 1152 001a FB61     		str	r3, [r7, #28]
 1153              		.loc 1 244 2
 1154 001c 3AE0     		b	.L91
 1155              	.L92:
 1156              	.LBB5:
 245:Src/utils.c   **** 	{
 246:Src/utils.c   **** 		float s, c;
 247:Src/utils.c   **** 		s = utSin(angles[i]);
 1157              		.loc 1 247 19 discriminator 3
 1158 001e FB69     		ldr	r3, [r7, #28]
 1159 0020 9B00     		lsls	r3, r3, #2
 1160 0022 FA68     		ldr	r2, [r7, #12]
 1161 0024 1344     		add	r3, r3, r2
 1162              		.loc 1 247 7 discriminator 3
 1163 0026 D3ED007A 		vldr.32	s15, [r3]
 1164 002a B0EE670A 		vmov.f32	s0, s15
 1165 002e FFF7FEFF 		bl	utSin
 1166 0032 87ED060A 		vstr.32	s0, [r7, #24]
 248:Src/utils.c   **** 		c = utCos(angles[i]);
 1167              		.loc 1 248 19 discriminator 3
 1168 0036 FB69     		ldr	r3, [r7, #28]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 26


 1169 0038 9B00     		lsls	r3, r3, #2
 1170 003a FA68     		ldr	r2, [r7, #12]
 1171 003c 1344     		add	r3, r3, r2
 1172              		.loc 1 248 7 discriminator 3
 1173 003e D3ED007A 		vldr.32	s15, [r3]
 1174 0042 B0EE670A 		vmov.f32	s0, s15
 1175 0046 FFF7FEFF 		bl	utCos
 1176 004a 87ED050A 		vstr.32	s0, [r7, #20]
 249:Src/utils.c   **** 		s_sum += s * weights[i];
 1177              		.loc 1 249 23 discriminator 3
 1178 004e FB69     		ldr	r3, [r7, #28]
 1179 0050 9B00     		lsls	r3, r3, #2
 1180 0052 BA68     		ldr	r2, [r7, #8]
 1181 0054 1344     		add	r3, r3, r2
 1182 0056 93ED007A 		vldr.32	s14, [r3]
 1183              		.loc 1 249 14 discriminator 3
 1184 005a D7ED067A 		vldr.32	s15, [r7, #24]
 1185 005e 67EE277A 		vmul.f32	s15, s14, s15
 1186              		.loc 1 249 9 discriminator 3
 1187 0062 97ED097A 		vldr.32	s14, [r7, #36]
 1188 0066 77EE277A 		vadd.f32	s15, s14, s15
 1189 006a C7ED097A 		vstr.32	s15, [r7, #36]
 250:Src/utils.c   **** 		c_sum += c * weights[i];
 1190              		.loc 1 250 23 discriminator 3
 1191 006e FB69     		ldr	r3, [r7, #28]
 1192 0070 9B00     		lsls	r3, r3, #2
 1193 0072 BA68     		ldr	r2, [r7, #8]
 1194 0074 1344     		add	r3, r3, r2
 1195 0076 93ED007A 		vldr.32	s14, [r3]
 1196              		.loc 1 250 14 discriminator 3
 1197 007a D7ED057A 		vldr.32	s15, [r7, #20]
 1198 007e 67EE277A 		vmul.f32	s15, s14, s15
 1199              		.loc 1 250 9 discriminator 3
 1200 0082 97ED087A 		vldr.32	s14, [r7, #32]
 1201 0086 77EE277A 		vadd.f32	s15, s14, s15
 1202 008a C7ED087A 		vstr.32	s15, [r7, #32]
 1203              	.LBE5:
 244:Src/utils.c   **** 	{
 1204              		.loc 1 244 35 discriminator 3
 1205 008e FB69     		ldr	r3, [r7, #28]
 1206 0090 0133     		adds	r3, r3, #1
 1207 0092 FB61     		str	r3, [r7, #28]
 1208              	.L91:
 244:Src/utils.c   **** 	{
 1209              		.loc 1 244 2 discriminator 1
 1210 0094 FA69     		ldr	r2, [r7, #28]
 1211 0096 7B68     		ldr	r3, [r7, #4]
 1212 0098 9A42     		cmp	r2, r3
 1213 009a C0DB     		blt	.L92
 1214              	.LBE4:
 251:Src/utils.c   **** 	}
 252:Src/utils.c   **** 
 253:Src/utils.c   **** 	return utils_fast_atan2(s_sum, c_sum);
 1215              		.loc 1 253 9
 1216 009c D7ED080A 		vldr.32	s1, [r7, #32]
 1217 00a0 97ED090A 		vldr.32	s0, [r7, #36]
 1218 00a4 FFF7FEFF 		bl	utils_fast_atan2
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 27


 1219 00a8 F0EE407A 		vmov.f32	s15, s0
 254:Src/utils.c   **** }
 1220              		.loc 1 254 1
 1221 00ac B0EE670A 		vmov.f32	s0, s15
 1222 00b0 2837     		adds	r7, r7, #40
 1223              	.LCFI73:
 1224              		.cfi_def_cfa_offset 8
 1225 00b2 BD46     		mov	sp, r7
 1226              	.LCFI74:
 1227              		.cfi_def_cfa_register 13
 1228              		@ sp needed
 1229 00b4 80BD     		pop	{r7, pc}
 1230              		.cfi_endproc
 1231              	.LFE17:
 1233              		.section	.text.utils_middle_of_3,"ax",%progbits
 1234              		.align	1
 1235              		.global	utils_middle_of_3
 1236              		.syntax unified
 1237              		.thumb
 1238              		.thumb_func
 1239              		.fpu fpv4-sp-d16
 1241              	utils_middle_of_3:
 1242              	.LFB18:
 255:Src/utils.c   **** 
 256:Src/utils.c   **** /**
 257:Src/utils.c   ****  * Get the middle value of three values
 258:Src/utils.c   ****  *
 259:Src/utils.c   ****  * @param a
 260:Src/utils.c   ****  * First value
 261:Src/utils.c   ****  *
 262:Src/utils.c   ****  * @param b
 263:Src/utils.c   ****  * Second value
 264:Src/utils.c   ****  *
 265:Src/utils.c   ****  * @param c
 266:Src/utils.c   ****  * Third value
 267:Src/utils.c   ****  *
 268:Src/utils.c   ****  * @return
 269:Src/utils.c   ****  * The middle value
 270:Src/utils.c   ****  */
 271:Src/utils.c   **** float utils_middle_of_3(float a, float b, float c)
 272:Src/utils.c   **** {
 1243              		.loc 1 272 1
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 24
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247              		@ link register save eliminated.
 1248 0000 80B4     		push	{r7}
 1249              	.LCFI75:
 1250              		.cfi_def_cfa_offset 4
 1251              		.cfi_offset 7, -4
 1252 0002 87B0     		sub	sp, sp, #28
 1253              	.LCFI76:
 1254              		.cfi_def_cfa_offset 32
 1255 0004 00AF     		add	r7, sp, #0
 1256              	.LCFI77:
 1257              		.cfi_def_cfa_register 7
 1258 0006 87ED030A 		vstr.32	s0, [r7, #12]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 28


 1259 000a C7ED020A 		vstr.32	s1, [r7, #8]
 1260 000e 87ED011A 		vstr.32	s2, [r7, #4]
 273:Src/utils.c   **** 	float middle;
 274:Src/utils.c   **** 
 275:Src/utils.c   **** 	if ((a <= b) && (a <= c))
 1261              		.loc 1 275 5
 1262 0012 97ED037A 		vldr.32	s14, [r7, #12]
 1263 0016 D7ED027A 		vldr.32	s15, [r7, #8]
 1264 001a B4EEE77A 		vcmpe.f32	s14, s15
 1265 001e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1266 0022 16D8     		bhi	.L95
 1267              		.loc 1 275 15 discriminator 1
 1268 0024 97ED037A 		vldr.32	s14, [r7, #12]
 1269 0028 D7ED017A 		vldr.32	s15, [r7, #4]
 1270 002c B4EEE77A 		vcmpe.f32	s14, s15
 1271 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1272 0034 0DD8     		bhi	.L95
 276:Src/utils.c   **** 	{
 277:Src/utils.c   **** 		middle = (b <= c) ? b : c;
 1273              		.loc 1 277 25
 1274 0036 97ED027A 		vldr.32	s14, [r7, #8]
 1275 003a D7ED017A 		vldr.32	s15, [r7, #4]
 1276 003e B4EEE77A 		vcmpe.f32	s14, s15
 1277 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 0046 01D8     		bhi	.L119
 1279              		.loc 1 277 25 is_stmt 0 discriminator 1
 1280 0048 BB68     		ldr	r3, [r7, #8]	@ float
 1281 004a 00E0     		b	.L100
 1282              	.L119:
 1283              		.loc 1 277 25 discriminator 2
 1284 004c 7B68     		ldr	r3, [r7, #4]	@ float
 1285              	.L100:
 1286              		.loc 1 277 10 is_stmt 1 discriminator 4
 1287 004e 7B61     		str	r3, [r7, #20]	@ float
 1288 0050 2CE0     		b	.L101
 1289              	.L95:
 278:Src/utils.c   **** 	}
 279:Src/utils.c   **** 	else if ((b <= a) && (b <= c))
 1290              		.loc 1 279 10
 1291 0052 97ED027A 		vldr.32	s14, [r7, #8]
 1292 0056 D7ED037A 		vldr.32	s15, [r7, #12]
 1293 005a B4EEE77A 		vcmpe.f32	s14, s15
 1294 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1295 0062 16D8     		bhi	.L102
 1296              		.loc 1 279 20 discriminator 1
 1297 0064 97ED027A 		vldr.32	s14, [r7, #8]
 1298 0068 D7ED017A 		vldr.32	s15, [r7, #4]
 1299 006c B4EEE77A 		vcmpe.f32	s14, s15
 1300 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1301 0074 0DD8     		bhi	.L102
 280:Src/utils.c   **** 	{
 281:Src/utils.c   **** 		middle = (a <= c) ? a : c;
 1302              		.loc 1 281 25
 1303 0076 97ED037A 		vldr.32	s14, [r7, #12]
 1304 007a D7ED017A 		vldr.32	s15, [r7, #4]
 1305 007e B4EEE77A 		vcmpe.f32	s14, s15
 1306 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 29


 1307 0086 01D8     		bhi	.L120
 1308              		.loc 1 281 25 is_stmt 0 discriminator 1
 1309 0088 FB68     		ldr	r3, [r7, #12]	@ float
 1310 008a 00E0     		b	.L107
 1311              	.L120:
 1312              		.loc 1 281 25 discriminator 2
 1313 008c 7B68     		ldr	r3, [r7, #4]	@ float
 1314              	.L107:
 1315              		.loc 1 281 10 is_stmt 1 discriminator 4
 1316 008e 7B61     		str	r3, [r7, #20]	@ float
 1317 0090 0CE0     		b	.L101
 1318              	.L102:
 282:Src/utils.c   **** 	}
 283:Src/utils.c   **** 	else
 284:Src/utils.c   **** 	{
 285:Src/utils.c   **** 		middle = (a <= b) ? a : b;
 1319              		.loc 1 285 25
 1320 0092 97ED037A 		vldr.32	s14, [r7, #12]
 1321 0096 D7ED027A 		vldr.32	s15, [r7, #8]
 1322 009a B4EEE77A 		vcmpe.f32	s14, s15
 1323 009e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1324 00a2 01D8     		bhi	.L121
 1325              		.loc 1 285 25 is_stmt 0 discriminator 1
 1326 00a4 FB68     		ldr	r3, [r7, #12]	@ float
 1327 00a6 00E0     		b	.L110
 1328              	.L121:
 1329              		.loc 1 285 25 discriminator 2
 1330 00a8 BB68     		ldr	r3, [r7, #8]	@ float
 1331              	.L110:
 1332              		.loc 1 285 10 is_stmt 1 discriminator 4
 1333 00aa 7B61     		str	r3, [r7, #20]	@ float
 1334              	.L101:
 286:Src/utils.c   **** 	}
 287:Src/utils.c   **** 	return middle;
 1335              		.loc 1 287 9
 1336 00ac 7B69     		ldr	r3, [r7, #20]	@ float
 1337 00ae 07EE903A 		vmov	s15, r3
 288:Src/utils.c   **** }
 1338              		.loc 1 288 1
 1339 00b2 B0EE670A 		vmov.f32	s0, s15
 1340 00b6 1C37     		adds	r7, r7, #28
 1341              	.LCFI78:
 1342              		.cfi_def_cfa_offset 4
 1343 00b8 BD46     		mov	sp, r7
 1344              	.LCFI79:
 1345              		.cfi_def_cfa_register 13
 1346              		@ sp needed
 1347 00ba 5DF8047B 		ldr	r7, [sp], #4
 1348              	.LCFI80:
 1349              		.cfi_restore 7
 1350              		.cfi_def_cfa_offset 0
 1351 00be 7047     		bx	lr
 1352              		.cfi_endproc
 1353              	.LFE18:
 1355              		.section	.text.utils_middle_of_3_int,"ax",%progbits
 1356              		.align	1
 1357              		.global	utils_middle_of_3_int
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 30


 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu fpv4-sp-d16
 1363              	utils_middle_of_3_int:
 1364              	.LFB19:
 289:Src/utils.c   **** 
 290:Src/utils.c   **** /**
 291:Src/utils.c   ****  * Get the middle value of three values
 292:Src/utils.c   ****  *
 293:Src/utils.c   ****  * @param a
 294:Src/utils.c   ****  * First value
 295:Src/utils.c   ****  *
 296:Src/utils.c   ****  * @param b
 297:Src/utils.c   ****  * Second value
 298:Src/utils.c   ****  *
 299:Src/utils.c   ****  * @param c
 300:Src/utils.c   ****  * Third value
 301:Src/utils.c   ****  *
 302:Src/utils.c   ****  * @return
 303:Src/utils.c   ****  * The middle value
 304:Src/utils.c   ****  */
 305:Src/utils.c   **** int utils_middle_of_3_int(int a, int b, int c)
 306:Src/utils.c   **** {
 1365              		.loc 1 306 1
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 24
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369              		@ link register save eliminated.
 1370 0000 80B4     		push	{r7}
 1371              	.LCFI81:
 1372              		.cfi_def_cfa_offset 4
 1373              		.cfi_offset 7, -4
 1374 0002 87B0     		sub	sp, sp, #28
 1375              	.LCFI82:
 1376              		.cfi_def_cfa_offset 32
 1377 0004 00AF     		add	r7, sp, #0
 1378              	.LCFI83:
 1379              		.cfi_def_cfa_register 7
 1380 0006 F860     		str	r0, [r7, #12]
 1381 0008 B960     		str	r1, [r7, #8]
 1382 000a 7A60     		str	r2, [r7, #4]
 307:Src/utils.c   **** 	int middle;
 308:Src/utils.c   **** 
 309:Src/utils.c   **** 	if ((a <= b) && (a <= c))
 1383              		.loc 1 309 5
 1384 000c FA68     		ldr	r2, [r7, #12]
 1385 000e BB68     		ldr	r3, [r7, #8]
 1386 0010 9A42     		cmp	r2, r3
 1387 0012 0ADC     		bgt	.L123
 1388              		.loc 1 309 15 discriminator 1
 1389 0014 FA68     		ldr	r2, [r7, #12]
 1390 0016 7B68     		ldr	r3, [r7, #4]
 1391 0018 9A42     		cmp	r2, r3
 1392 001a 06DC     		bgt	.L123
 310:Src/utils.c   **** 	{
 311:Src/utils.c   **** 		middle = (b <= c) ? b : c;
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 31


 1393              		.loc 1 311 10
 1394 001c BA68     		ldr	r2, [r7, #8]
 1395 001e 7B68     		ldr	r3, [r7, #4]
 1396 0020 9342     		cmp	r3, r2
 1397 0022 A8BF     		it	ge
 1398 0024 1346     		movge	r3, r2
 1399 0026 7B61     		str	r3, [r7, #20]
 1400 0028 14E0     		b	.L124
 1401              	.L123:
 312:Src/utils.c   **** 	}
 313:Src/utils.c   **** 	else if ((b <= a) && (b <= c))
 1402              		.loc 1 313 10
 1403 002a BA68     		ldr	r2, [r7, #8]
 1404 002c FB68     		ldr	r3, [r7, #12]
 1405 002e 9A42     		cmp	r2, r3
 1406 0030 0ADC     		bgt	.L125
 1407              		.loc 1 313 20 discriminator 1
 1408 0032 BA68     		ldr	r2, [r7, #8]
 1409 0034 7B68     		ldr	r3, [r7, #4]
 1410 0036 9A42     		cmp	r2, r3
 1411 0038 06DC     		bgt	.L125
 314:Src/utils.c   **** 	{
 315:Src/utils.c   **** 		middle = (a <= c) ? a : c;
 1412              		.loc 1 315 10
 1413 003a FA68     		ldr	r2, [r7, #12]
 1414 003c 7B68     		ldr	r3, [r7, #4]
 1415 003e 9342     		cmp	r3, r2
 1416 0040 A8BF     		it	ge
 1417 0042 1346     		movge	r3, r2
 1418 0044 7B61     		str	r3, [r7, #20]
 1419 0046 05E0     		b	.L124
 1420              	.L125:
 316:Src/utils.c   **** 	}
 317:Src/utils.c   **** 	else
 318:Src/utils.c   **** 	{
 319:Src/utils.c   **** 		middle = (a <= b) ? a : b;
 1421              		.loc 1 319 10
 1422 0048 FA68     		ldr	r2, [r7, #12]
 1423 004a BB68     		ldr	r3, [r7, #8]
 1424 004c 9342     		cmp	r3, r2
 1425 004e A8BF     		it	ge
 1426 0050 1346     		movge	r3, r2
 1427 0052 7B61     		str	r3, [r7, #20]
 1428              	.L124:
 320:Src/utils.c   **** 	}
 321:Src/utils.c   **** 	return middle;
 1429              		.loc 1 321 9
 1430 0054 7B69     		ldr	r3, [r7, #20]
 322:Src/utils.c   **** }
 1431              		.loc 1 322 1
 1432 0056 1846     		mov	r0, r3
 1433 0058 1C37     		adds	r7, r7, #28
 1434              	.LCFI84:
 1435              		.cfi_def_cfa_offset 4
 1436 005a BD46     		mov	sp, r7
 1437              	.LCFI85:
 1438              		.cfi_def_cfa_register 13
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 32


 1439              		@ sp needed
 1440 005c 5DF8047B 		ldr	r7, [sp], #4
 1441              	.LCFI86:
 1442              		.cfi_restore 7
 1443              		.cfi_def_cfa_offset 0
 1444 0060 7047     		bx	lr
 1445              		.cfi_endproc
 1446              	.LFE19:
 1448              		.section	.text.utils_fast_inv_sqrt,"ax",%progbits
 1449              		.align	1
 1450              		.global	utils_fast_inv_sqrt
 1451              		.syntax unified
 1452              		.thumb
 1453              		.thumb_func
 1454              		.fpu fpv4-sp-d16
 1456              	utils_fast_inv_sqrt:
 1457              	.LFB20:
 323:Src/utils.c   **** 
 324:Src/utils.c   **** // Fast inverse square-root
 325:Src/utils.c   **** // See: http://en.wikipedia.org/wiki/Fast_inverse_square_root
 326:Src/utils.c   **** float utils_fast_inv_sqrt(float x)
 327:Src/utils.c   **** {
 1458              		.loc 1 327 1
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 16
 1461              		@ frame_needed = 1, uses_anonymous_args = 0
 1462              		@ link register save eliminated.
 1463 0000 80B4     		push	{r7}
 1464              	.LCFI87:
 1465              		.cfi_def_cfa_offset 4
 1466              		.cfi_offset 7, -4
 1467 0002 85B0     		sub	sp, sp, #20
 1468              	.LCFI88:
 1469              		.cfi_def_cfa_offset 24
 1470 0004 00AF     		add	r7, sp, #0
 1471              	.LCFI89:
 1472              		.cfi_def_cfa_register 7
 1473 0006 87ED010A 		vstr.32	s0, [r7, #4]
 328:Src/utils.c   **** 	union {
 329:Src/utils.c   **** 		float as_float;
 330:Src/utils.c   **** 		long as_int;
 331:Src/utils.c   **** 	} un;
 332:Src/utils.c   **** 
 333:Src/utils.c   **** 	float xhalf = 0.5f * x;
 1474              		.loc 1 333 8
 1475 000a D7ED017A 		vldr.32	s15, [r7, #4]
 1476 000e B6EE007A 		vmov.f32	s14, #5.0e-1
 1477 0012 67EE877A 		vmul.f32	s15, s15, s14
 1478 0016 C7ED037A 		vstr.32	s15, [r7, #12]
 334:Src/utils.c   **** 	un.as_float = x;
 1479              		.loc 1 334 14
 1480 001a 7B68     		ldr	r3, [r7, #4]	@ float
 1481 001c BB60     		str	r3, [r7, #8]	@ float
 335:Src/utils.c   **** 	un.as_int = 0x5f3759df - (un.as_int >> 1);
 1482              		.loc 1 335 30
 1483 001e BB68     		ldr	r3, [r7, #8]
 1484              		.loc 1 335 38
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 33


 1485 0020 5A10     		asrs	r2, r3, #1
 1486              		.loc 1 335 25
 1487 0022 104B     		ldr	r3, .L129
 1488 0024 9B1A     		subs	r3, r3, r2
 1489              		.loc 1 335 12
 1490 0026 BB60     		str	r3, [r7, #8]
 336:Src/utils.c   **** 	un.as_float = un.as_float * (1.5f - xhalf * un.as_float * un.as_float);
 1491              		.loc 1 336 18
 1492 0028 97ED027A 		vldr.32	s14, [r7, #8]
 1493              		.loc 1 336 48
 1494 002c D7ED026A 		vldr.32	s13, [r7, #8]
 1495              		.loc 1 336 44
 1496 0030 D7ED037A 		vldr.32	s15, [r7, #12]
 1497 0034 66EEA76A 		vmul.f32	s13, s13, s15
 1498              		.loc 1 336 62
 1499 0038 D7ED027A 		vldr.32	s15, [r7, #8]
 1500              		.loc 1 336 58
 1501 003c 66EEA77A 		vmul.f32	s15, s13, s15
 1502              		.loc 1 336 36
 1503 0040 F7EE086A 		vmov.f32	s13, #1.5e+0
 1504 0044 76EEE77A 		vsub.f32	s15, s13, s15
 1505              		.loc 1 336 28
 1506 0048 67EE277A 		vmul.f32	s15, s14, s15
 1507              		.loc 1 336 14
 1508 004c C7ED027A 		vstr.32	s15, [r7, #8]
 337:Src/utils.c   **** 	return un.as_float;
 1509              		.loc 1 337 11
 1510 0050 BB68     		ldr	r3, [r7, #8]	@ float
 1511 0052 07EE903A 		vmov	s15, r3
 338:Src/utils.c   **** }
 1512              		.loc 1 338 1
 1513 0056 B0EE670A 		vmov.f32	s0, s15
 1514 005a 1437     		adds	r7, r7, #20
 1515              	.LCFI90:
 1516              		.cfi_def_cfa_offset 4
 1517 005c BD46     		mov	sp, r7
 1518              	.LCFI91:
 1519              		.cfi_def_cfa_register 13
 1520              		@ sp needed
 1521 005e 5DF8047B 		ldr	r7, [sp], #4
 1522              	.LCFI92:
 1523              		.cfi_restore 7
 1524              		.cfi_def_cfa_offset 0
 1525 0062 7047     		bx	lr
 1526              	.L130:
 1527              		.align	2
 1528              	.L129:
 1529 0064 DF59375F 		.word	1597463007
 1530              		.cfi_endproc
 1531              	.LFE20:
 1533              		.section	.text.utils_fast_atan2,"ax",%progbits
 1534              		.align	1
 1535              		.global	utils_fast_atan2
 1536              		.syntax unified
 1537              		.thumb
 1538              		.thumb_func
 1539              		.fpu fpv4-sp-d16
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 34


 1541              	utils_fast_atan2:
 1542              	.LFB21:
 339:Src/utils.c   **** 
 340:Src/utils.c   **** /**
 341:Src/utils.c   ****  * Fast atan2
 342:Src/utils.c   ****  *
 343:Src/utils.c   ****  * See http://www.dspguru.com/dsp/tricks/fixed-point-atan2-with-self-normalization
 344:Src/utils.c   ****  *
 345:Src/utils.c   ****  * @param y
 346:Src/utils.c   ****  * y
 347:Src/utils.c   ****  *
 348:Src/utils.c   ****  * @param x
 349:Src/utils.c   ****  * x
 350:Src/utils.c   ****  *
 351:Src/utils.c   ****  * @return
 352:Src/utils.c   ****  * The angle in radians
 353:Src/utils.c   ****  */
 354:Src/utils.c   **** float utils_fast_atan2(float y, float x)
 355:Src/utils.c   **** {
 1543              		.loc 1 355 1
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 32
 1546              		@ frame_needed = 1, uses_anonymous_args = 0
 1547              		@ link register save eliminated.
 1548 0000 80B4     		push	{r7}
 1549              	.LCFI93:
 1550              		.cfi_def_cfa_offset 4
 1551              		.cfi_offset 7, -4
 1552 0002 89B0     		sub	sp, sp, #36
 1553              	.LCFI94:
 1554              		.cfi_def_cfa_offset 40
 1555 0004 00AF     		add	r7, sp, #0
 1556              	.LCFI95:
 1557              		.cfi_def_cfa_register 7
 1558 0006 87ED010A 		vstr.32	s0, [r7, #4]
 1559 000a C7ED000A 		vstr.32	s1, [r7]
 356:Src/utils.c   **** 	float abs_y = fabsf(y) + 1e-20f; // kludge to prevent 0/0 condition
 1560              		.loc 1 356 16
 1561 000e D7ED017A 		vldr.32	s15, [r7, #4]
 1562 0012 F0EEE77A 		vabs.f32	s15, s15
 1563              		.loc 1 356 8
 1564 0016 9FED3D7A 		vldr.32	s14, .L142
 1565 001a 77EE877A 		vadd.f32	s15, s15, s14
 1566 001e C7ED067A 		vstr.32	s15, [r7, #24]
 357:Src/utils.c   **** 	float angle;
 358:Src/utils.c   **** 
 359:Src/utils.c   **** 	if (x >= 0)
 1567              		.loc 1 359 5
 1568 0022 D7ED007A 		vldr.32	s15, [r7]
 1569 0026 F5EEC07A 		vcmpe.f32	s15, #0
 1570 002a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1571 002e 2CDB     		blt	.L140
 1572              	.LBB6:
 360:Src/utils.c   **** 	{
 361:Src/utils.c   **** 		float r = (x - abs_y) / (x + abs_y);
 1573              		.loc 1 361 16
 1574 0030 97ED007A 		vldr.32	s14, [r7]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 35


 1575 0034 D7ED067A 		vldr.32	s15, [r7, #24]
 1576 0038 77EE676A 		vsub.f32	s13, s14, s15
 1577              		.loc 1 361 30
 1578 003c 97ED007A 		vldr.32	s14, [r7]
 1579 0040 D7ED067A 		vldr.32	s15, [r7, #24]
 1580 0044 37EE277A 		vadd.f32	s14, s14, s15
 1581              		.loc 1 361 9
 1582 0048 C6EE877A 		vdiv.f32	s15, s13, s14
 1583 004c C7ED057A 		vstr.32	s15, [r7, #20]
 362:Src/utils.c   **** 		float rsq = r * r;
 1584              		.loc 1 362 9
 1585 0050 97ED057A 		vldr.32	s14, [r7, #20]
 1586 0054 D7ED057A 		vldr.32	s15, [r7, #20]
 1587 0058 67EE277A 		vmul.f32	s15, s14, s15
 1588 005c C7ED047A 		vstr.32	s15, [r7, #16]
 363:Src/utils.c   **** 		angle = ((0.1963f * rsq) - 0.9817f) * r + (MF_PI / 4.0f);
 1589              		.loc 1 363 21
 1590 0060 D7ED047A 		vldr.32	s15, [r7, #16]
 1591 0064 9FED2A7A 		vldr.32	s14, .L142+4
 1592 0068 67EE877A 		vmul.f32	s15, s15, s14
 1593              		.loc 1 363 28
 1594 006c 9FED297A 		vldr.32	s14, .L142+8
 1595 0070 37EEC77A 		vsub.f32	s14, s15, s14
 1596              		.loc 1 363 39
 1597 0074 D7ED057A 		vldr.32	s15, [r7, #20]
 1598 0078 67EE277A 		vmul.f32	s15, s14, s15
 1599              		.loc 1 363 9
 1600 007c 9FED267A 		vldr.32	s14, .L142+12
 1601 0080 77EE877A 		vadd.f32	s15, s15, s14
 1602 0084 C7ED077A 		vstr.32	s15, [r7, #28]
 1603              	.LBE6:
 1604 0088 2BE0     		b	.L134
 1605              	.L140:
 1606              	.LBB7:
 364:Src/utils.c   **** 	}
 365:Src/utils.c   **** 	else
 366:Src/utils.c   **** 	{
 367:Src/utils.c   **** 		float r = (x + abs_y) / (abs_y - x);
 1607              		.loc 1 367 16
 1608 008a 97ED007A 		vldr.32	s14, [r7]
 1609 008e D7ED067A 		vldr.32	s15, [r7, #24]
 1610 0092 77EE276A 		vadd.f32	s13, s14, s15
 1611              		.loc 1 367 34
 1612 0096 97ED067A 		vldr.32	s14, [r7, #24]
 1613 009a D7ED007A 		vldr.32	s15, [r7]
 1614 009e 37EE677A 		vsub.f32	s14, s14, s15
 1615              		.loc 1 367 9
 1616 00a2 C6EE877A 		vdiv.f32	s15, s13, s14
 1617 00a6 C7ED037A 		vstr.32	s15, [r7, #12]
 368:Src/utils.c   **** 		float rsq = r * r;
 1618              		.loc 1 368 9
 1619 00aa 97ED037A 		vldr.32	s14, [r7, #12]
 1620 00ae D7ED037A 		vldr.32	s15, [r7, #12]
 1621 00b2 67EE277A 		vmul.f32	s15, s14, s15
 1622 00b6 C7ED027A 		vstr.32	s15, [r7, #8]
 369:Src/utils.c   **** 		angle = ((0.1963f * rsq) - 0.9817f) * r + (3.0f * MF_PI / 4.0f);
 1623              		.loc 1 369 21
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 36


 1624 00ba D7ED027A 		vldr.32	s15, [r7, #8]
 1625 00be 9FED147A 		vldr.32	s14, .L142+4
 1626 00c2 67EE877A 		vmul.f32	s15, s15, s14
 1627              		.loc 1 369 28
 1628 00c6 9FED137A 		vldr.32	s14, .L142+8
 1629 00ca 37EEC77A 		vsub.f32	s14, s15, s14
 1630              		.loc 1 369 39
 1631 00ce D7ED037A 		vldr.32	s15, [r7, #12]
 1632 00d2 67EE277A 		vmul.f32	s15, s14, s15
 1633              		.loc 1 369 9
 1634 00d6 9FED117A 		vldr.32	s14, .L142+16
 1635 00da 77EE877A 		vadd.f32	s15, s15, s14
 1636 00de C7ED077A 		vstr.32	s15, [r7, #28]
 1637              	.L134:
 1638              	.LBE7:
 370:Src/utils.c   **** 	}
 371:Src/utils.c   **** 
 372:Src/utils.c   **** 	if (y < 0)
 1639              		.loc 1 372 5
 1640 00e2 D7ED017A 		vldr.32	s15, [r7, #4]
 1641 00e6 F5EEC07A 		vcmpe.f32	s15, #0
 1642 00ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1643 00ee 04D5     		bpl	.L141
 373:Src/utils.c   **** 	{
 374:Src/utils.c   **** 		return (-angle);
 1644              		.loc 1 374 11
 1645 00f0 D7ED077A 		vldr.32	s15, [r7, #28]
 1646 00f4 F1EE677A 		vneg.f32	s15, s15
 1647 00f8 01E0     		b	.L137
 1648              	.L141:
 375:Src/utils.c   **** 	}
 376:Src/utils.c   **** 	else
 377:Src/utils.c   **** 	{
 378:Src/utils.c   **** 		return (angle);
 1649              		.loc 1 378 10
 1650 00fa D7ED077A 		vldr.32	s15, [r7, #28]
 1651              	.L137:
 379:Src/utils.c   **** 	}
 380:Src/utils.c   **** }
 1652              		.loc 1 380 1
 1653 00fe B0EE670A 		vmov.f32	s0, s15
 1654 0102 2437     		adds	r7, r7, #36
 1655              	.LCFI96:
 1656              		.cfi_def_cfa_offset 4
 1657 0104 BD46     		mov	sp, r7
 1658              	.LCFI97:
 1659              		.cfi_def_cfa_register 13
 1660              		@ sp needed
 1661 0106 5DF8047B 		ldr	r7, [sp], #4
 1662              	.LCFI98:
 1663              		.cfi_restore 7
 1664              		.cfi_def_cfa_offset 0
 1665 010a 7047     		bx	lr
 1666              	.L143:
 1667              		.align	2
 1668              	.L142:
 1669 010c 08E53C1E 		.word	507307272
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 37


 1670 0110 DE02493E 		.word	1044972254
 1671 0114 B1507B3F 		.word	1065046193
 1672 0118 DB0F493F 		.word	1061752795
 1673 011c E4CB1640 		.word	1075235812
 1674              		.cfi_endproc
 1675              	.LFE21:
 1677              		.section	.text.utils_saturate_vector_2d,"ax",%progbits
 1678              		.align	1
 1679              		.global	utils_saturate_vector_2d
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1683              		.fpu fpv4-sp-d16
 1685              	utils_saturate_vector_2d:
 1686              	.LFB22:
 381:Src/utils.c   **** 
 382:Src/utils.c   **** /**
 383:Src/utils.c   ****  * Truncate the magnitude of a vector.
 384:Src/utils.c   ****  *
 385:Src/utils.c   ****  * @param x
 386:Src/utils.c   ****  * The first component.
 387:Src/utils.c   ****  *
 388:Src/utils.c   ****  * @param y
 389:Src/utils.c   ****  * The second component.
 390:Src/utils.c   ****  *
 391:Src/utils.c   ****  * @param max
 392:Src/utils.c   ****  * The maximum magnitude.
 393:Src/utils.c   ****  *
 394:Src/utils.c   ****  * @return
 395:Src/utils.c   ****  * True if saturation happened, false otherwise
 396:Src/utils.c   ****  */
 397:Src/utils.c   **** bool utils_saturate_vector_2d(float *x, float *y, float max)
 398:Src/utils.c   **** {
 1687              		.loc 1 398 1
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 32
 1690              		@ frame_needed = 1, uses_anonymous_args = 0
 1691 0000 80B5     		push	{r7, lr}
 1692              	.LCFI99:
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 88B0     		sub	sp, sp, #32
 1697              	.LCFI100:
 1698              		.cfi_def_cfa_offset 40
 1699 0004 00AF     		add	r7, sp, #0
 1700              	.LCFI101:
 1701              		.cfi_def_cfa_register 7
 1702 0006 F860     		str	r0, [r7, #12]
 1703 0008 B960     		str	r1, [r7, #8]
 1704 000a 87ED010A 		vstr.32	s0, [r7, #4]
 399:Src/utils.c   **** 	bool retval = false;
 1705              		.loc 1 399 7
 1706 000e 0023     		movs	r3, #0
 1707 0010 FB77     		strb	r3, [r7, #31]
 400:Src/utils.c   **** 	float mag = sqrtf(SQ(*x) + SQ(*y));
 1708              		.loc 1 400 20
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 38


 1709 0012 FB68     		ldr	r3, [r7, #12]
 1710 0014 93ED007A 		vldr.32	s14, [r3]
 1711 0018 FB68     		ldr	r3, [r7, #12]
 1712 001a D3ED007A 		vldr.32	s15, [r3]
 1713 001e 27EE277A 		vmul.f32	s14, s14, s15
 1714              		.loc 1 400 29
 1715 0022 BB68     		ldr	r3, [r7, #8]
 1716 0024 D3ED006A 		vldr.32	s13, [r3]
 1717 0028 BB68     		ldr	r3, [r7, #8]
 1718 002a D3ED007A 		vldr.32	s15, [r3]
 1719 002e 66EEA77A 		vmul.f32	s15, s13, s15
 1720              		.loc 1 400 14
 1721 0032 77EE277A 		vadd.f32	s15, s14, s15
 1722 0036 B0EE670A 		vmov.f32	s0, s15
 1723 003a FFF7FEFF 		bl	sqrtf
 1724 003e 87ED060A 		vstr.32	s0, [r7, #24]
 401:Src/utils.c   **** 	max = fabsf(max);
 1725              		.loc 1 401 6
 1726 0042 D7ED017A 		vldr.32	s15, [r7, #4]
 1727 0046 F0EEE77A 		vabs.f32	s15, s15
 1728 004a C7ED017A 		vstr.32	s15, [r7, #4]
 402:Src/utils.c   **** 
 403:Src/utils.c   **** 	if (mag < 1e-10f)
 1729              		.loc 1 403 5
 1730 004e D7ED067A 		vldr.32	s15, [r7, #24]
 1731 0052 9FED1A7A 		vldr.32	s14, .L152
 1732 0056 F4EEC77A 		vcmpe.f32	s15, s14
 1733 005a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1734 005e 01D5     		bpl	.L145
 404:Src/utils.c   **** 	{
 405:Src/utils.c   **** 		mag = 1e-10f;
 1735              		.loc 1 405 7
 1736 0060 174B     		ldr	r3, .L152+4
 1737 0062 BB61     		str	r3, [r7, #24]	@ float
 1738              	.L145:
 406:Src/utils.c   **** 	}
 407:Src/utils.c   **** 
 408:Src/utils.c   **** 	if (mag > max)
 1739              		.loc 1 408 5
 1740 0064 97ED067A 		vldr.32	s14, [r7, #24]
 1741 0068 D7ED017A 		vldr.32	s15, [r7, #4]
 1742 006c B4EEE77A 		vcmpe.f32	s14, s15
 1743 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1744 0074 1DDD     		ble	.L147
 1745              	.LBB8:
 409:Src/utils.c   **** 	{
 410:Src/utils.c   **** 		const float f = max / mag;
 1746              		.loc 1 410 15
 1747 0076 D7ED016A 		vldr.32	s13, [r7, #4]
 1748 007a 97ED067A 		vldr.32	s14, [r7, #24]
 1749 007e C6EE877A 		vdiv.f32	s15, s13, s14
 1750 0082 C7ED057A 		vstr.32	s15, [r7, #20]
 411:Src/utils.c   **** 		*x *= f;
 1751              		.loc 1 411 6
 1752 0086 FB68     		ldr	r3, [r7, #12]
 1753 0088 93ED007A 		vldr.32	s14, [r3]
 1754 008c D7ED057A 		vldr.32	s15, [r7, #20]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 39


 1755 0090 67EE277A 		vmul.f32	s15, s14, s15
 1756 0094 FB68     		ldr	r3, [r7, #12]
 1757 0096 C3ED007A 		vstr.32	s15, [r3]
 412:Src/utils.c   **** 		*y *= f;
 1758              		.loc 1 412 6
 1759 009a BB68     		ldr	r3, [r7, #8]
 1760 009c 93ED007A 		vldr.32	s14, [r3]
 1761 00a0 D7ED057A 		vldr.32	s15, [r7, #20]
 1762 00a4 67EE277A 		vmul.f32	s15, s14, s15
 1763 00a8 BB68     		ldr	r3, [r7, #8]
 1764 00aa C3ED007A 		vstr.32	s15, [r3]
 413:Src/utils.c   **** 		retval = true;
 1765              		.loc 1 413 10
 1766 00ae 0123     		movs	r3, #1
 1767 00b0 FB77     		strb	r3, [r7, #31]
 1768              	.L147:
 1769              	.LBE8:
 414:Src/utils.c   **** 	}
 415:Src/utils.c   **** 
 416:Src/utils.c   **** 	return retval;
 1770              		.loc 1 416 9
 1771 00b2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 417:Src/utils.c   **** }
 1772              		.loc 1 417 1
 1773 00b4 1846     		mov	r0, r3
 1774 00b6 2037     		adds	r7, r7, #32
 1775              	.LCFI102:
 1776              		.cfi_def_cfa_offset 8
 1777 00b8 BD46     		mov	sp, r7
 1778              	.LCFI103:
 1779              		.cfi_def_cfa_register 13
 1780              		@ sp needed
 1781 00ba 80BD     		pop	{r7, pc}
 1782              	.L153:
 1783              		.align	2
 1784              	.L152:
 1785 00bc FFE6DB2E 		.word	786163455
 1786 00c0 FFE6DB2E 		.word	786163455
 1787              		.cfi_endproc
 1788              	.LFE22:
 1790              		.global	__aeabi_dcmplt
 1791              		.global	__aeabi_dcmpgt
 1792              		.section	.text.utils_fast_sincos,"ax",%progbits
 1793              		.align	1
 1794              		.global	utils_fast_sincos
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1798              		.fpu fpv4-sp-d16
 1800              	utils_fast_sincos:
 1801              	.LFB23:
 418:Src/utils.c   **** 
 419:Src/utils.c   **** /**
 420:Src/utils.c   ****  * Fast sine and cosine implementation.
 421:Src/utils.c   ****  *
 422:Src/utils.c   ****  * See http://lab.polygonal.de/?p=205
 423:Src/utils.c   ****  *
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 40


 424:Src/utils.c   ****  * @param angle
 425:Src/utils.c   ****  * The angle in radians
 426:Src/utils.c   ****  * WARNING: Don't use too large angles.
 427:Src/utils.c   ****  *
 428:Src/utils.c   ****  * @param sin
 429:Src/utils.c   ****  * A pointer to store the sine value.
 430:Src/utils.c   ****  *
 431:Src/utils.c   ****  * @param cos
 432:Src/utils.c   ****  * A pointer to store the cosine value.
 433:Src/utils.c   ****  */
 434:Src/utils.c   **** void utils_fast_sincos(float angle, float *sin, float *cos)
 435:Src/utils.c   **** {
 1802              		.loc 1 435 1
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 16
 1805              		@ frame_needed = 1, uses_anonymous_args = 0
 1806 0000 90B5     		push	{r4, r7, lr}
 1807              	.LCFI104:
 1808              		.cfi_def_cfa_offset 12
 1809              		.cfi_offset 4, -12
 1810              		.cfi_offset 7, -8
 1811              		.cfi_offset 14, -4
 1812 0002 85B0     		sub	sp, sp, #20
 1813              	.LCFI105:
 1814              		.cfi_def_cfa_offset 32
 1815 0004 00AF     		add	r7, sp, #0
 1816              	.LCFI106:
 1817              		.cfi_def_cfa_register 7
 1818 0006 87ED030A 		vstr.32	s0, [r7, #12]
 1819 000a B860     		str	r0, [r7, #8]
 1820 000c 7960     		str	r1, [r7, #4]
 436:Src/utils.c   **** 	//always wrap input angle to -PI..PI
 437:Src/utils.c   **** 	while (angle < -M_PI)
 1821              		.loc 1 437 8
 1822 000e 0FE0     		b	.L155
 1823              	.L156:
 438:Src/utils.c   **** 	{
 439:Src/utils.c   **** 		angle += 2.0f * M_PI;
 1824              		.loc 1 439 9
 1825 0010 F868     		ldr	r0, [r7, #12]	@ float
 1826 0012 FFF7FEFF 		bl	__aeabi_f2d
 1827              	.LVL14:
 1828 0016 68A3     		adr	r3, .L173+16
 1829 0018 D3E90023 		ldrd	r2, [r3]
 1830 001c FFF7FEFF 		bl	__aeabi_dadd
 1831              	.LVL15:
 1832 0020 0346     		mov	r3, r0
 1833 0022 0C46     		mov	r4, r1
 1834 0024 1846     		mov	r0, r3
 1835 0026 2146     		mov	r1, r4
 1836 0028 FFF7FEFF 		bl	__aeabi_d2f
 1837              	.LVL16:
 1838 002c 0346     		mov	r3, r0	@ float
 1839 002e FB60     		str	r3, [r7, #12]	@ float
 1840              	.L155:
 437:Src/utils.c   **** 	{
 1841              		.loc 1 437 15
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 41


 1842 0030 F868     		ldr	r0, [r7, #12]	@ float
 1843 0032 FFF7FEFF 		bl	__aeabi_f2d
 1844              	.LVL17:
 437:Src/utils.c   **** 	{
 1845              		.loc 1 437 8
 1846 0036 64A3     		adr	r3, .L173+32
 1847 0038 D3E90023 		ldrd	r2, [r3]
 1848 003c FFF7FEFF 		bl	__aeabi_dcmplt
 1849              	.LVL18:
 1850 0040 0346     		mov	r3, r0
 1851 0042 002B     		cmp	r3, #0
 1852 0044 E4D1     		bne	.L156
 440:Src/utils.c   **** 	}
 441:Src/utils.c   **** 
 442:Src/utils.c   **** 	while (angle > M_PI)
 1853              		.loc 1 442 8
 1854 0046 0FE0     		b	.L157
 1855              	.L158:
 443:Src/utils.c   **** 	{
 444:Src/utils.c   **** 		angle -= 2.0f * M_PI;
 1856              		.loc 1 444 9
 1857 0048 F868     		ldr	r0, [r7, #12]	@ float
 1858 004a FFF7FEFF 		bl	__aeabi_f2d
 1859              	.LVL19:
 1860 004e 5AA3     		adr	r3, .L173+16
 1861 0050 D3E90023 		ldrd	r2, [r3]
 1862 0054 FFF7FEFF 		bl	__aeabi_dsub
 1863              	.LVL20:
 1864 0058 0346     		mov	r3, r0
 1865 005a 0C46     		mov	r4, r1
 1866 005c 1846     		mov	r0, r3
 1867 005e 2146     		mov	r1, r4
 1868 0060 FFF7FEFF 		bl	__aeabi_d2f
 1869              	.LVL21:
 1870 0064 0346     		mov	r3, r0	@ float
 1871 0066 FB60     		str	r3, [r7, #12]	@ float
 1872              	.L157:
 442:Src/utils.c   **** 	{
 1873              		.loc 1 442 15
 1874 0068 F868     		ldr	r0, [r7, #12]	@ float
 1875 006a FFF7FEFF 		bl	__aeabi_f2d
 1876              	.LVL22:
 442:Src/utils.c   **** 	{
 1877              		.loc 1 442 8
 1878 006e 50A3     		adr	r3, .L173+8
 1879 0070 D3E90023 		ldrd	r2, [r3]
 1880 0074 FFF7FEFF 		bl	__aeabi_dcmpgt
 1881              	.LVL23:
 1882 0078 0346     		mov	r3, r0
 1883 007a 002B     		cmp	r3, #0
 1884 007c E4D1     		bne	.L158
 445:Src/utils.c   **** 	}
 446:Src/utils.c   **** 
 447:Src/utils.c   **** 	// compute sine
 448:Src/utils.c   **** 	if (angle < 0.0f)
 1885              		.loc 1 448 5
 1886 007e D7ED037A 		vldr.32	s15, [r7, #12]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 42


 1887 0082 F5EEC07A 		vcmpe.f32	s15, #0
 1888 0086 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1889 008a 15D5     		bpl	.L170
 449:Src/utils.c   **** 	{
 450:Src/utils.c   **** 		*sin = 1.27323954f * angle + 0.405284735f * angle * angle;
 1890              		.loc 1 450 22
 1891 008c D7ED037A 		vldr.32	s15, [r7, #12]
 1892 0090 9FED4B7A 		vldr.32	s14, .L173+24
 1893 0094 27EE877A 		vmul.f32	s14, s15, s14
 1894              		.loc 1 450 45
 1895 0098 D7ED037A 		vldr.32	s15, [r7, #12]
 1896 009c DFED496A 		vldr.32	s13, .L173+28
 1897 00a0 67EEA66A 		vmul.f32	s13, s15, s13
 1898              		.loc 1 450 53
 1899 00a4 D7ED037A 		vldr.32	s15, [r7, #12]
 1900 00a8 66EEA77A 		vmul.f32	s15, s13, s15
 1901              		.loc 1 450 30
 1902 00ac 77EE277A 		vadd.f32	s15, s14, s15
 1903              		.loc 1 450 8
 1904 00b0 BB68     		ldr	r3, [r7, #8]
 1905 00b2 C3ED007A 		vstr.32	s15, [r3]
 1906 00b6 14E0     		b	.L161
 1907              	.L170:
 451:Src/utils.c   **** 	}
 452:Src/utils.c   **** 	else
 453:Src/utils.c   **** 	{
 454:Src/utils.c   **** 		*sin = 1.27323954f * angle - 0.405284735f * angle * angle;
 1908              		.loc 1 454 22
 1909 00b8 D7ED037A 		vldr.32	s15, [r7, #12]
 1910 00bc 9FED407A 		vldr.32	s14, .L173+24
 1911 00c0 27EE877A 		vmul.f32	s14, s15, s14
 1912              		.loc 1 454 45
 1913 00c4 D7ED037A 		vldr.32	s15, [r7, #12]
 1914 00c8 DFED3E6A 		vldr.32	s13, .L173+28
 1915 00cc 67EEA66A 		vmul.f32	s13, s15, s13
 1916              		.loc 1 454 53
 1917 00d0 D7ED037A 		vldr.32	s15, [r7, #12]
 1918 00d4 66EEA77A 		vmul.f32	s15, s13, s15
 1919              		.loc 1 454 30
 1920 00d8 77EE677A 		vsub.f32	s15, s14, s15
 1921              		.loc 1 454 8
 1922 00dc BB68     		ldr	r3, [r7, #8]
 1923 00de C3ED007A 		vstr.32	s15, [r3]
 1924              	.L161:
 455:Src/utils.c   **** 	}
 456:Src/utils.c   **** 
 457:Src/utils.c   **** 	// compute cosine: sin(x + PI/2) = cos(x)
 458:Src/utils.c   **** 	angle += 0.5f * M_PI;
 1925              		.loc 1 458 8
 1926 00e2 F868     		ldr	r0, [r7, #12]	@ float
 1927 00e4 FFF7FEFF 		bl	__aeabi_f2d
 1928              	.LVL24:
 1929 00e8 2FA3     		adr	r3, .L173
 1930 00ea D3E90023 		ldrd	r2, [r3]
 1931 00ee FFF7FEFF 		bl	__aeabi_dadd
 1932              	.LVL25:
 1933 00f2 0346     		mov	r3, r0
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 43


 1934 00f4 0C46     		mov	r4, r1
 1935 00f6 1846     		mov	r0, r3
 1936 00f8 2146     		mov	r1, r4
 1937 00fa FFF7FEFF 		bl	__aeabi_d2f
 1938              	.LVL26:
 1939 00fe 0346     		mov	r3, r0	@ float
 1940 0100 FB60     		str	r3, [r7, #12]	@ float
 459:Src/utils.c   **** 
 460:Src/utils.c   **** 	if (angle > M_PI)
 1941              		.loc 1 460 12
 1942 0102 F868     		ldr	r0, [r7, #12]	@ float
 1943 0104 FFF7FEFF 		bl	__aeabi_f2d
 1944              	.LVL27:
 1945              		.loc 1 460 5
 1946 0108 29A3     		adr	r3, .L173+8
 1947 010a D3E90023 		ldrd	r2, [r3]
 1948 010e FFF7FEFF 		bl	__aeabi_dcmpgt
 1949              	.LVL28:
 1950 0112 0346     		mov	r3, r0
 1951 0114 002B     		cmp	r3, #0
 1952 0116 0FD0     		beq	.L162
 461:Src/utils.c   **** 	{
 462:Src/utils.c   **** 		angle -= 2.0f * M_PI;
 1953              		.loc 1 462 9
 1954 0118 F868     		ldr	r0, [r7, #12]	@ float
 1955 011a FFF7FEFF 		bl	__aeabi_f2d
 1956              	.LVL29:
 1957 011e 26A3     		adr	r3, .L173+16
 1958 0120 D3E90023 		ldrd	r2, [r3]
 1959 0124 FFF7FEFF 		bl	__aeabi_dsub
 1960              	.LVL30:
 1961 0128 0346     		mov	r3, r0
 1962 012a 0C46     		mov	r4, r1
 1963 012c 1846     		mov	r0, r3
 1964 012e 2146     		mov	r1, r4
 1965 0130 FFF7FEFF 		bl	__aeabi_d2f
 1966              	.LVL31:
 1967 0134 0346     		mov	r3, r0	@ float
 1968 0136 FB60     		str	r3, [r7, #12]	@ float
 1969              	.L162:
 463:Src/utils.c   **** 	}
 464:Src/utils.c   **** 
 465:Src/utils.c   **** 	if (angle < 0.0f)
 1970              		.loc 1 465 5
 1971 0138 D7ED037A 		vldr.32	s15, [r7, #12]
 1972 013c F5EEC07A 		vcmpe.f32	s15, #0
 1973 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1974 0144 15D5     		bpl	.L171
 466:Src/utils.c   **** 	{
 467:Src/utils.c   **** 		*cos = 1.27323954f * angle + 0.405284735f * angle * angle;
 1975              		.loc 1 467 22
 1976 0146 D7ED037A 		vldr.32	s15, [r7, #12]
 1977 014a 9FED1D7A 		vldr.32	s14, .L173+24
 1978 014e 27EE877A 		vmul.f32	s14, s15, s14
 1979              		.loc 1 467 45
 1980 0152 D7ED037A 		vldr.32	s15, [r7, #12]
 1981 0156 DFED1B6A 		vldr.32	s13, .L173+28
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 44


 1982 015a 67EEA66A 		vmul.f32	s13, s15, s13
 1983              		.loc 1 467 53
 1984 015e D7ED037A 		vldr.32	s15, [r7, #12]
 1985 0162 66EEA77A 		vmul.f32	s15, s13, s15
 1986              		.loc 1 467 30
 1987 0166 77EE277A 		vadd.f32	s15, s14, s15
 1988              		.loc 1 467 8
 1989 016a 7B68     		ldr	r3, [r7, #4]
 1990 016c C3ED007A 		vstr.32	s15, [r3]
 468:Src/utils.c   **** 	}
 469:Src/utils.c   **** 	else
 470:Src/utils.c   **** 	{
 471:Src/utils.c   **** 		*cos = 1.27323954f * angle - 0.405284735f * angle * angle;
 472:Src/utils.c   **** 	}
 473:Src/utils.c   **** }
 1991              		.loc 1 473 1
 1992 0170 14E0     		b	.L172
 1993              	.L171:
 471:Src/utils.c   **** 	}
 1994              		.loc 1 471 22
 1995 0172 D7ED037A 		vldr.32	s15, [r7, #12]
 1996 0176 9FED127A 		vldr.32	s14, .L173+24
 1997 017a 27EE877A 		vmul.f32	s14, s15, s14
 471:Src/utils.c   **** 	}
 1998              		.loc 1 471 45
 1999 017e D7ED037A 		vldr.32	s15, [r7, #12]
 2000 0182 DFED106A 		vldr.32	s13, .L173+28
 2001 0186 67EEA66A 		vmul.f32	s13, s15, s13
 471:Src/utils.c   **** 	}
 2002              		.loc 1 471 53
 2003 018a D7ED037A 		vldr.32	s15, [r7, #12]
 2004 018e 66EEA77A 		vmul.f32	s15, s13, s15
 471:Src/utils.c   **** 	}
 2005              		.loc 1 471 30
 2006 0192 77EE677A 		vsub.f32	s15, s14, s15
 471:Src/utils.c   **** 	}
 2007              		.loc 1 471 8
 2008 0196 7B68     		ldr	r3, [r7, #4]
 2009 0198 C3ED007A 		vstr.32	s15, [r3]
 2010              	.L172:
 2011              		.loc 1 473 1
 2012 019c 00BF     		nop
 2013 019e 1437     		adds	r7, r7, #20
 2014              	.LCFI107:
 2015              		.cfi_def_cfa_offset 12
 2016 01a0 BD46     		mov	sp, r7
 2017              	.LCFI108:
 2018              		.cfi_def_cfa_register 13
 2019              		@ sp needed
 2020 01a2 90BD     		pop	{r4, r7, pc}
 2021              	.L174:
 2022 01a4 AFF30080 		.align	3
 2023              	.L173:
 2024 01a8 182D4454 		.word	1413754136
 2025 01ac FB21F93F 		.word	1073291771
 2026 01b0 182D4454 		.word	1413754136
 2027 01b4 FB210940 		.word	1074340347
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 45


 2028 01b8 182D4454 		.word	1413754136
 2029 01bc FB211940 		.word	1075388923
 2030 01c0 83F9A23F 		.word	1067645315
 2031 01c4 7B81CF3E 		.word	1053786491
 2032 01c8 182D4454 		.word	1413754136
 2033 01cc FB2109C0 		.word	-1073143301
 2034              		.cfi_endproc
 2035              	.LFE23:
 2037              		.section	.text.utSin,"ax",%progbits
 2038              		.align	1
 2039              		.global	utSin
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
 2043              		.fpu fpv4-sp-d16
 2045              	utSin:
 2046              	.LFB24:
 474:Src/utils.c   **** 
 475:Src/utils.c   **** 
 476:Src/utils.c   **** /**
 477:Src/utils.c   ****  * Fast sine implementation. (~100 cycles)
 478:Src/utils.c   ****  *
 479:Src/utils.c   ****  * See http://lab.polygonal.de/?p=205
 480:Src/utils.c   ****  *
 481:Src/utils.c   ****  * @param angle
 482:Src/utils.c   ****  * The angle in radians
 483:Src/utils.c   ****  * WARNING: Don't use too large angles.
 484:Src/utils.c   **** 
 485:Src/utils.c   ****  */
 486:Src/utils.c   **** float utSin(float angle)
 487:Src/utils.c   **** {
 2047              		.loc 1 487 1
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 16
 2050              		@ frame_needed = 1, uses_anonymous_args = 0
 2051              		@ link register save eliminated.
 2052 0000 80B4     		push	{r7}
 2053              	.LCFI109:
 2054              		.cfi_def_cfa_offset 4
 2055              		.cfi_offset 7, -4
 2056 0002 85B0     		sub	sp, sp, #20
 2057              	.LCFI110:
 2058              		.cfi_def_cfa_offset 24
 2059 0004 00AF     		add	r7, sp, #0
 2060              	.LCFI111:
 2061              		.cfi_def_cfa_register 7
 2062 0006 87ED010A 		vstr.32	s0, [r7, #4]
 488:Src/utils.c   **** 	float fsin;
 489:Src/utils.c   **** 	//always wrap input angle to -PI..PI
 490:Src/utils.c   **** 	while (angle < -MF_PI)
 2063              		.loc 1 490 8
 2064 000a 07E0     		b	.L176
 2065              	.L177:
 491:Src/utils.c   **** 	{
 492:Src/utils.c   **** 		angle += M_2PI;
 2066              		.loc 1 492 9
 2067 000c D7ED017A 		vldr.32	s15, [r7, #4]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 46


 2068 0010 9FED5F7A 		vldr.32	s14, .L195
 2069 0014 77EE877A 		vadd.f32	s15, s15, s14
 2070 0018 C7ED017A 		vstr.32	s15, [r7, #4]
 2071              	.L176:
 490:Src/utils.c   **** 	{
 2072              		.loc 1 490 8
 2073 001c D7ED017A 		vldr.32	s15, [r7, #4]
 2074 0020 9FED5C7A 		vldr.32	s14, .L195+4
 2075 0024 F4EEC77A 		vcmpe.f32	s15, s14
 2076 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2077 002c EED4     		bmi	.L177
 493:Src/utils.c   **** 	}
 494:Src/utils.c   **** 
 495:Src/utils.c   **** 	while (angle > MF_PI)
 2078              		.loc 1 495 8
 2079 002e 07E0     		b	.L178
 2080              	.L179:
 496:Src/utils.c   **** 	{
 497:Src/utils.c   **** 		angle -= M_2PI;
 2081              		.loc 1 497 9
 2082 0030 D7ED017A 		vldr.32	s15, [r7, #4]
 2083 0034 9FED567A 		vldr.32	s14, .L195
 2084 0038 77EEC77A 		vsub.f32	s15, s15, s14
 2085 003c C7ED017A 		vstr.32	s15, [r7, #4]
 2086              	.L178:
 495:Src/utils.c   **** 	{
 2087              		.loc 1 495 8
 2088 0040 D7ED017A 		vldr.32	s15, [r7, #4]
 2089 0044 9FED547A 		vldr.32	s14, .L195+8
 2090 0048 F4EEC77A 		vcmpe.f32	s15, s14
 2091 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2092 0050 EEDC     		bgt	.L179
 498:Src/utils.c   **** 	}
 499:Src/utils.c   **** 
 500:Src/utils.c   **** 	if (angle < 0.0f)
 2093              		.loc 1 500 5
 2094 0052 D7ED017A 		vldr.32	s15, [r7, #4]
 2095 0056 F5EEC07A 		vcmpe.f32	s15, #0
 2096 005a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2097 005e 46D5     		bpl	.L192
 501:Src/utils.c   **** 	{
 502:Src/utils.c   **** 		fsin = 1.27323954f * angle + 0.405284735f * angle * angle;
 2098              		.loc 1 502 22
 2099 0060 D7ED017A 		vldr.32	s15, [r7, #4]
 2100 0064 9FED4D7A 		vldr.32	s14, .L195+12
 2101 0068 27EE877A 		vmul.f32	s14, s15, s14
 2102              		.loc 1 502 45
 2103 006c D7ED017A 		vldr.32	s15, [r7, #4]
 2104 0070 DFED4B6A 		vldr.32	s13, .L195+16
 2105 0074 67EEA66A 		vmul.f32	s13, s15, s13
 2106              		.loc 1 502 53
 2107 0078 D7ED017A 		vldr.32	s15, [r7, #4]
 2108 007c 66EEA77A 		vmul.f32	s15, s13, s15
 2109              		.loc 1 502 8
 2110 0080 77EE277A 		vadd.f32	s15, s14, s15
 2111 0084 C7ED037A 		vstr.32	s15, [r7, #12]
 503:Src/utils.c   **** 
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 47


 504:Src/utils.c   **** 		if (fsin < 0.0f)
 2112              		.loc 1 504 6
 2113 0088 D7ED037A 		vldr.32	s15, [r7, #12]
 2114 008c F5EEC07A 		vcmpe.f32	s15, #0
 2115 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2116 0094 16D5     		bpl	.L193
 505:Src/utils.c   **** 		{
 506:Src/utils.c   **** 			fsin = 0.225f * (fsin * -fsin - fsin) + fsin;
 2117              		.loc 1 506 28
 2118 0096 D7ED037A 		vldr.32	s15, [r7, #12]
 2119 009a B1EE677A 		vneg.f32	s14, s15
 2120              		.loc 1 506 26
 2121 009e D7ED037A 		vldr.32	s15, [r7, #12]
 2122 00a2 27EE277A 		vmul.f32	s14, s14, s15
 2123              		.loc 1 506 34
 2124 00a6 D7ED037A 		vldr.32	s15, [r7, #12]
 2125 00aa 77EE677A 		vsub.f32	s15, s14, s15
 2126              		.loc 1 506 18
 2127 00ae 9FED3D7A 		vldr.32	s14, .L195+20
 2128 00b2 67EE877A 		vmul.f32	s15, s15, s14
 2129              		.loc 1 506 9
 2130 00b6 97ED037A 		vldr.32	s14, [r7, #12]
 2131 00ba 77EE277A 		vadd.f32	s15, s14, s15
 2132 00be C7ED037A 		vstr.32	s15, [r7, #12]
 2133 00c2 5AE0     		b	.L185
 2134              	.L193:
 507:Src/utils.c   **** 		}
 508:Src/utils.c   **** 		else
 509:Src/utils.c   **** 		{
 510:Src/utils.c   **** 			fsin = 0.225f * (fsin * fsin - fsin) + fsin;
 2135              		.loc 1 510 26
 2136 00c4 97ED037A 		vldr.32	s14, [r7, #12]
 2137 00c8 D7ED037A 		vldr.32	s15, [r7, #12]
 2138 00cc 27EE277A 		vmul.f32	s14, s14, s15
 2139              		.loc 1 510 33
 2140 00d0 D7ED037A 		vldr.32	s15, [r7, #12]
 2141 00d4 77EE677A 		vsub.f32	s15, s14, s15
 2142              		.loc 1 510 18
 2143 00d8 9FED327A 		vldr.32	s14, .L195+20
 2144 00dc 67EE877A 		vmul.f32	s15, s15, s14
 2145              		.loc 1 510 9
 2146 00e0 97ED037A 		vldr.32	s14, [r7, #12]
 2147 00e4 77EE277A 		vadd.f32	s15, s14, s15
 2148 00e8 C7ED037A 		vstr.32	s15, [r7, #12]
 2149 00ec 45E0     		b	.L185
 2150              	.L192:
 511:Src/utils.c   **** 		}
 512:Src/utils.c   **** 	}
 513:Src/utils.c   **** 	else
 514:Src/utils.c   **** 	{
 515:Src/utils.c   **** 		fsin = 1.27323954f * angle - 0.405284735f * angle * angle;
 2151              		.loc 1 515 22
 2152 00ee D7ED017A 		vldr.32	s15, [r7, #4]
 2153 00f2 9FED2A7A 		vldr.32	s14, .L195+12
 2154 00f6 27EE877A 		vmul.f32	s14, s15, s14
 2155              		.loc 1 515 45
 2156 00fa D7ED017A 		vldr.32	s15, [r7, #4]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 48


 2157 00fe DFED286A 		vldr.32	s13, .L195+16
 2158 0102 67EEA66A 		vmul.f32	s13, s15, s13
 2159              		.loc 1 515 53
 2160 0106 D7ED017A 		vldr.32	s15, [r7, #4]
 2161 010a 66EEA77A 		vmul.f32	s15, s13, s15
 2162              		.loc 1 515 8
 2163 010e 77EE677A 		vsub.f32	s15, s14, s15
 2164 0112 C7ED037A 		vstr.32	s15, [r7, #12]
 516:Src/utils.c   **** 
 517:Src/utils.c   **** 		if (fsin < 0.0f)
 2165              		.loc 1 517 6
 2166 0116 D7ED037A 		vldr.32	s15, [r7, #12]
 2167 011a F5EEC07A 		vcmpe.f32	s15, #0
 2168 011e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2169 0122 16D5     		bpl	.L194
 518:Src/utils.c   **** 		{
 519:Src/utils.c   **** 			fsin = 0.225f * (fsin * -fsin - fsin) + fsin;
 2170              		.loc 1 519 28
 2171 0124 D7ED037A 		vldr.32	s15, [r7, #12]
 2172 0128 B1EE677A 		vneg.f32	s14, s15
 2173              		.loc 1 519 26
 2174 012c D7ED037A 		vldr.32	s15, [r7, #12]
 2175 0130 27EE277A 		vmul.f32	s14, s14, s15
 2176              		.loc 1 519 34
 2177 0134 D7ED037A 		vldr.32	s15, [r7, #12]
 2178 0138 77EE677A 		vsub.f32	s15, s14, s15
 2179              		.loc 1 519 18
 2180 013c 9FED197A 		vldr.32	s14, .L195+20
 2181 0140 67EE877A 		vmul.f32	s15, s15, s14
 2182              		.loc 1 519 9
 2183 0144 97ED037A 		vldr.32	s14, [r7, #12]
 2184 0148 77EE277A 		vadd.f32	s15, s14, s15
 2185 014c C7ED037A 		vstr.32	s15, [r7, #12]
 2186 0150 13E0     		b	.L185
 2187              	.L194:
 520:Src/utils.c   **** 		}
 521:Src/utils.c   **** 		else
 522:Src/utils.c   **** 		{
 523:Src/utils.c   **** 			fsin = 0.225f * (fsin * fsin - fsin) + fsin;
 2188              		.loc 1 523 26
 2189 0152 97ED037A 		vldr.32	s14, [r7, #12]
 2190 0156 D7ED037A 		vldr.32	s15, [r7, #12]
 2191 015a 27EE277A 		vmul.f32	s14, s14, s15
 2192              		.loc 1 523 33
 2193 015e D7ED037A 		vldr.32	s15, [r7, #12]
 2194 0162 77EE677A 		vsub.f32	s15, s14, s15
 2195              		.loc 1 523 18
 2196 0166 9FED0F7A 		vldr.32	s14, .L195+20
 2197 016a 67EE877A 		vmul.f32	s15, s15, s14
 2198              		.loc 1 523 9
 2199 016e 97ED037A 		vldr.32	s14, [r7, #12]
 2200 0172 77EE277A 		vadd.f32	s15, s14, s15
 2201 0176 C7ED037A 		vstr.32	s15, [r7, #12]
 2202              	.L185:
 524:Src/utils.c   **** 		}
 525:Src/utils.c   **** 	}
 526:Src/utils.c   **** 	return fsin;
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 49


 2203              		.loc 1 526 9
 2204 017a FB68     		ldr	r3, [r7, #12]	@ float
 2205 017c 07EE903A 		vmov	s15, r3
 527:Src/utils.c   **** }
 2206              		.loc 1 527 1
 2207 0180 B0EE670A 		vmov.f32	s0, s15
 2208 0184 1437     		adds	r7, r7, #20
 2209              	.LCFI112:
 2210              		.cfi_def_cfa_offset 4
 2211 0186 BD46     		mov	sp, r7
 2212              	.LCFI113:
 2213              		.cfi_def_cfa_register 13
 2214              		@ sp needed
 2215 0188 5DF8047B 		ldr	r7, [sp], #4
 2216              	.LCFI114:
 2217              		.cfi_restore 7
 2218              		.cfi_def_cfa_offset 0
 2219 018c 7047     		bx	lr
 2220              	.L196:
 2221 018e 00BF     		.align	2
 2222              	.L195:
 2223 0190 DB0FC940 		.word	1086918619
 2224 0194 DB0F49C0 		.word	-1068953637
 2225 0198 DB0F4940 		.word	1078530011
 2226 019c 83F9A23F 		.word	1067645315
 2227 01a0 7B81CF3E 		.word	1053786491
 2228 01a4 6666663E 		.word	1046898278
 2229              		.cfi_endproc
 2230              	.LFE24:
 2232              		.section	.text.utCos,"ax",%progbits
 2233              		.align	1
 2234              		.global	utCos
 2235              		.syntax unified
 2236              		.thumb
 2237              		.thumb_func
 2238              		.fpu fpv4-sp-d16
 2240              	utCos:
 2241              	.LFB25:
 528:Src/utils.c   **** 
 529:Src/utils.c   **** /**
 530:Src/utils.c   ****  * Fast cos implementation. (~100 cycles)
 531:Src/utils.c   ****  *
 532:Src/utils.c   ****  * See http://lab.polygonal.de/?p=205
 533:Src/utils.c   ****  *
 534:Src/utils.c   ****  * @param angle
 535:Src/utils.c   ****  * The angle in radians
 536:Src/utils.c   ****  * WARNING: Don't use too large angles.
 537:Src/utils.c   ****  * 
 538:Src/utils.c   ****  */
 539:Src/utils.c   **** float utCos(float angle)
 540:Src/utils.c   **** {
 2242              		.loc 1 540 1
 2243              		.cfi_startproc
 2244              		@ args = 0, pretend = 0, frame = 16
 2245              		@ frame_needed = 1, uses_anonymous_args = 0
 2246              		@ link register save eliminated.
 2247 0000 80B4     		push	{r7}
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 50


 2248              	.LCFI115:
 2249              		.cfi_def_cfa_offset 4
 2250              		.cfi_offset 7, -4
 2251 0002 85B0     		sub	sp, sp, #20
 2252              	.LCFI116:
 2253              		.cfi_def_cfa_offset 24
 2254 0004 00AF     		add	r7, sp, #0
 2255              	.LCFI117:
 2256              		.cfi_def_cfa_register 7
 2257 0006 87ED010A 		vstr.32	s0, [r7, #4]
 541:Src/utils.c   **** 	float fsin;
 542:Src/utils.c   **** 	//always wrap input angle to -PI..PI
 543:Src/utils.c   **** 	while (angle < -MF_PI)
 2258              		.loc 1 543 8
 2259 000a 07E0     		b	.L198
 2260              	.L199:
 544:Src/utils.c   **** 	{
 545:Src/utils.c   **** 		angle += M_2PI;
 2261              		.loc 1 545 9
 2262 000c D7ED017A 		vldr.32	s15, [r7, #4]
 2263 0010 9FED6B7A 		vldr.32	s14, .L220
 2264 0014 77EE877A 		vadd.f32	s15, s15, s14
 2265 0018 C7ED017A 		vstr.32	s15, [r7, #4]
 2266              	.L198:
 543:Src/utils.c   **** 	{
 2267              		.loc 1 543 8
 2268 001c D7ED017A 		vldr.32	s15, [r7, #4]
 2269 0020 9FED687A 		vldr.32	s14, .L220+4
 2270 0024 F4EEC77A 		vcmpe.f32	s15, s14
 2271 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2272 002c EED4     		bmi	.L199
 546:Src/utils.c   **** 	}
 547:Src/utils.c   **** 
 548:Src/utils.c   **** 	while (angle > MF_PI)
 2273              		.loc 1 548 8
 2274 002e 07E0     		b	.L200
 2275              	.L201:
 549:Src/utils.c   **** 	{
 550:Src/utils.c   **** 		angle -= M_2PI;
 2276              		.loc 1 550 9
 2277 0030 D7ED017A 		vldr.32	s15, [r7, #4]
 2278 0034 9FED627A 		vldr.32	s14, .L220
 2279 0038 77EEC77A 		vsub.f32	s15, s15, s14
 2280 003c C7ED017A 		vstr.32	s15, [r7, #4]
 2281              	.L200:
 548:Src/utils.c   **** 	{
 2282              		.loc 1 548 8
 2283 0040 D7ED017A 		vldr.32	s15, [r7, #4]
 2284 0044 9FED607A 		vldr.32	s14, .L220+8
 2285 0048 F4EEC77A 		vcmpe.f32	s15, s14
 2286 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2287 0050 EEDC     		bgt	.L201
 551:Src/utils.c   **** 	}
 552:Src/utils.c   **** 
 553:Src/utils.c   **** 	// compute cosine: sin(x + PI/2) = cos(x)
 554:Src/utils.c   **** 	angle += M_PI2;
 2288              		.loc 1 554 8
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 51


 2289 0052 D7ED017A 		vldr.32	s15, [r7, #4]
 2290 0056 9FED5D7A 		vldr.32	s14, .L220+12
 2291 005a 77EE877A 		vadd.f32	s15, s15, s14
 2292 005e C7ED017A 		vstr.32	s15, [r7, #4]
 555:Src/utils.c   **** 	if (angle > MF_PI)
 2293              		.loc 1 555 5
 2294 0062 D7ED017A 		vldr.32	s15, [r7, #4]
 2295 0066 9FED587A 		vldr.32	s14, .L220+8
 2296 006a F4EEC77A 		vcmpe.f32	s15, s14
 2297 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2298 0072 07DD     		ble	.L202
 556:Src/utils.c   **** 	{
 557:Src/utils.c   **** 		angle -= M_2PI;
 2299              		.loc 1 557 9
 2300 0074 D7ED017A 		vldr.32	s15, [r7, #4]
 2301 0078 9FED517A 		vldr.32	s14, .L220
 2302 007c 77EEC77A 		vsub.f32	s15, s15, s14
 2303 0080 C7ED017A 		vstr.32	s15, [r7, #4]
 2304              	.L202:
 558:Src/utils.c   **** 	}
 559:Src/utils.c   **** 
 560:Src/utils.c   **** 	if (angle < 0.0f)
 2305              		.loc 1 560 5
 2306 0084 D7ED017A 		vldr.32	s15, [r7, #4]
 2307 0088 F5EEC07A 		vcmpe.f32	s15, #0
 2308 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2309 0090 46D5     		bpl	.L217
 561:Src/utils.c   **** 	{
 562:Src/utils.c   **** 		fsin = 1.27323954f * angle + 0.405284735f * angle * angle;
 2310              		.loc 1 562 22
 2311 0092 D7ED017A 		vldr.32	s15, [r7, #4]
 2312 0096 9FED4E7A 		vldr.32	s14, .L220+16
 2313 009a 27EE877A 		vmul.f32	s14, s15, s14
 2314              		.loc 1 562 45
 2315 009e D7ED017A 		vldr.32	s15, [r7, #4]
 2316 00a2 DFED4C6A 		vldr.32	s13, .L220+20
 2317 00a6 67EEA66A 		vmul.f32	s13, s15, s13
 2318              		.loc 1 562 53
 2319 00aa D7ED017A 		vldr.32	s15, [r7, #4]
 2320 00ae 66EEA77A 		vmul.f32	s15, s13, s15
 2321              		.loc 1 562 8
 2322 00b2 77EE277A 		vadd.f32	s15, s14, s15
 2323 00b6 C7ED037A 		vstr.32	s15, [r7, #12]
 563:Src/utils.c   **** 
 564:Src/utils.c   **** 		if (fsin < 0.0f)
 2324              		.loc 1 564 6
 2325 00ba D7ED037A 		vldr.32	s15, [r7, #12]
 2326 00be F5EEC07A 		vcmpe.f32	s15, #0
 2327 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2328 00c6 16D5     		bpl	.L218
 565:Src/utils.c   **** 		{
 566:Src/utils.c   **** 			fsin = 0.225f * (fsin * -fsin - fsin) + fsin;
 2329              		.loc 1 566 28
 2330 00c8 D7ED037A 		vldr.32	s15, [r7, #12]
 2331 00cc B1EE677A 		vneg.f32	s14, s15
 2332              		.loc 1 566 26
 2333 00d0 D7ED037A 		vldr.32	s15, [r7, #12]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 52


 2334 00d4 27EE277A 		vmul.f32	s14, s14, s15
 2335              		.loc 1 566 34
 2336 00d8 D7ED037A 		vldr.32	s15, [r7, #12]
 2337 00dc 77EE677A 		vsub.f32	s15, s14, s15
 2338              		.loc 1 566 18
 2339 00e0 9FED3D7A 		vldr.32	s14, .L220+24
 2340 00e4 67EE877A 		vmul.f32	s15, s15, s14
 2341              		.loc 1 566 9
 2342 00e8 97ED037A 		vldr.32	s14, [r7, #12]
 2343 00ec 77EE277A 		vadd.f32	s15, s14, s15
 2344 00f0 C7ED037A 		vstr.32	s15, [r7, #12]
 2345 00f4 5AE0     		b	.L209
 2346              	.L218:
 567:Src/utils.c   **** 		}
 568:Src/utils.c   **** 		else
 569:Src/utils.c   **** 		{
 570:Src/utils.c   **** 			fsin = 0.225f * (fsin * fsin - fsin) + fsin;
 2347              		.loc 1 570 26
 2348 00f6 97ED037A 		vldr.32	s14, [r7, #12]
 2349 00fa D7ED037A 		vldr.32	s15, [r7, #12]
 2350 00fe 27EE277A 		vmul.f32	s14, s14, s15
 2351              		.loc 1 570 33
 2352 0102 D7ED037A 		vldr.32	s15, [r7, #12]
 2353 0106 77EE677A 		vsub.f32	s15, s14, s15
 2354              		.loc 1 570 18
 2355 010a 9FED337A 		vldr.32	s14, .L220+24
 2356 010e 67EE877A 		vmul.f32	s15, s15, s14
 2357              		.loc 1 570 9
 2358 0112 97ED037A 		vldr.32	s14, [r7, #12]
 2359 0116 77EE277A 		vadd.f32	s15, s14, s15
 2360 011a C7ED037A 		vstr.32	s15, [r7, #12]
 2361 011e 45E0     		b	.L209
 2362              	.L217:
 571:Src/utils.c   **** 		}
 572:Src/utils.c   **** 	}
 573:Src/utils.c   **** 	else
 574:Src/utils.c   **** 	{
 575:Src/utils.c   **** 		fsin = 1.27323954f * angle - 0.405284735f * angle * angle;
 2363              		.loc 1 575 22
 2364 0120 D7ED017A 		vldr.32	s15, [r7, #4]
 2365 0124 9FED2A7A 		vldr.32	s14, .L220+16
 2366 0128 27EE877A 		vmul.f32	s14, s15, s14
 2367              		.loc 1 575 45
 2368 012c D7ED017A 		vldr.32	s15, [r7, #4]
 2369 0130 DFED286A 		vldr.32	s13, .L220+20
 2370 0134 67EEA66A 		vmul.f32	s13, s15, s13
 2371              		.loc 1 575 53
 2372 0138 D7ED017A 		vldr.32	s15, [r7, #4]
 2373 013c 66EEA77A 		vmul.f32	s15, s13, s15
 2374              		.loc 1 575 8
 2375 0140 77EE677A 		vsub.f32	s15, s14, s15
 2376 0144 C7ED037A 		vstr.32	s15, [r7, #12]
 576:Src/utils.c   **** 
 577:Src/utils.c   **** 		if (fsin < 0.0f)
 2377              		.loc 1 577 6
 2378 0148 D7ED037A 		vldr.32	s15, [r7, #12]
 2379 014c F5EEC07A 		vcmpe.f32	s15, #0
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 53


 2380 0150 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2381 0154 16D5     		bpl	.L219
 578:Src/utils.c   **** 		{
 579:Src/utils.c   **** 			fsin = 0.225f * (fsin * -fsin - fsin) + fsin;
 2382              		.loc 1 579 28
 2383 0156 D7ED037A 		vldr.32	s15, [r7, #12]
 2384 015a B1EE677A 		vneg.f32	s14, s15
 2385              		.loc 1 579 26
 2386 015e D7ED037A 		vldr.32	s15, [r7, #12]
 2387 0162 27EE277A 		vmul.f32	s14, s14, s15
 2388              		.loc 1 579 34
 2389 0166 D7ED037A 		vldr.32	s15, [r7, #12]
 2390 016a 77EE677A 		vsub.f32	s15, s14, s15
 2391              		.loc 1 579 18
 2392 016e 9FED1A7A 		vldr.32	s14, .L220+24
 2393 0172 67EE877A 		vmul.f32	s15, s15, s14
 2394              		.loc 1 579 9
 2395 0176 97ED037A 		vldr.32	s14, [r7, #12]
 2396 017a 77EE277A 		vadd.f32	s15, s14, s15
 2397 017e C7ED037A 		vstr.32	s15, [r7, #12]
 2398 0182 13E0     		b	.L209
 2399              	.L219:
 580:Src/utils.c   **** 		}
 581:Src/utils.c   **** 		else
 582:Src/utils.c   **** 		{
 583:Src/utils.c   **** 			fsin = 0.225f * (fsin * fsin - fsin) + fsin;
 2400              		.loc 1 583 26
 2401 0184 97ED037A 		vldr.32	s14, [r7, #12]
 2402 0188 D7ED037A 		vldr.32	s15, [r7, #12]
 2403 018c 27EE277A 		vmul.f32	s14, s14, s15
 2404              		.loc 1 583 33
 2405 0190 D7ED037A 		vldr.32	s15, [r7, #12]
 2406 0194 77EE677A 		vsub.f32	s15, s14, s15
 2407              		.loc 1 583 18
 2408 0198 9FED0F7A 		vldr.32	s14, .L220+24
 2409 019c 67EE877A 		vmul.f32	s15, s15, s14
 2410              		.loc 1 583 9
 2411 01a0 97ED037A 		vldr.32	s14, [r7, #12]
 2412 01a4 77EE277A 		vadd.f32	s15, s14, s15
 2413 01a8 C7ED037A 		vstr.32	s15, [r7, #12]
 2414              	.L209:
 584:Src/utils.c   **** 		}
 585:Src/utils.c   **** 	}
 586:Src/utils.c   **** 	return fsin;
 2415              		.loc 1 586 9
 2416 01ac FB68     		ldr	r3, [r7, #12]	@ float
 2417 01ae 07EE903A 		vmov	s15, r3
 587:Src/utils.c   **** }
 2418              		.loc 1 587 1
 2419 01b2 B0EE670A 		vmov.f32	s0, s15
 2420 01b6 1437     		adds	r7, r7, #20
 2421              	.LCFI118:
 2422              		.cfi_def_cfa_offset 4
 2423 01b8 BD46     		mov	sp, r7
 2424              	.LCFI119:
 2425              		.cfi_def_cfa_register 13
 2426              		@ sp needed
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 54


 2427 01ba 5DF8047B 		ldr	r7, [sp], #4
 2428              	.LCFI120:
 2429              		.cfi_restore 7
 2430              		.cfi_def_cfa_offset 0
 2431 01be 7047     		bx	lr
 2432              	.L221:
 2433              		.align	2
 2434              	.L220:
 2435 01c0 DB0FC940 		.word	1086918619
 2436 01c4 DB0F49C0 		.word	-1068953637
 2437 01c8 DB0F4940 		.word	1078530011
 2438 01cc DB0FC93F 		.word	1070141403
 2439 01d0 83F9A23F 		.word	1067645315
 2440 01d4 7B81CF3E 		.word	1053786491
 2441 01d8 6666663E 		.word	1046898278
 2442              		.cfi_endproc
 2443              	.LFE25:
 2445              		.section	.text.utils_min_abs,"ax",%progbits
 2446              		.align	1
 2447              		.global	utils_min_abs
 2448              		.syntax unified
 2449              		.thumb
 2450              		.thumb_func
 2451              		.fpu fpv4-sp-d16
 2453              	utils_min_abs:
 2454              	.LFB26:
 588:Src/utils.c   **** 
 589:Src/utils.c   **** /**
 590:Src/utils.c   ****  * Calculate the values with the lowest magnitude.
 591:Src/utils.c   ****  *
 592:Src/utils.c   ****  * @param va
 593:Src/utils.c   ****  * The first value.
 594:Src/utils.c   ****  *
 595:Src/utils.c   ****  * @param vb
 596:Src/utils.c   ****  * The second value.
 597:Src/utils.c   ****  *
 598:Src/utils.c   ****  * @return
 599:Src/utils.c   ****  * The value with the lowest magnitude.
 600:Src/utils.c   ****  */
 601:Src/utils.c   **** float utils_min_abs(float va, float vb)
 602:Src/utils.c   **** {
 2455              		.loc 1 602 1
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 16
 2458              		@ frame_needed = 1, uses_anonymous_args = 0
 2459              		@ link register save eliminated.
 2460 0000 80B4     		push	{r7}
 2461              	.LCFI121:
 2462              		.cfi_def_cfa_offset 4
 2463              		.cfi_offset 7, -4
 2464 0002 85B0     		sub	sp, sp, #20
 2465              	.LCFI122:
 2466              		.cfi_def_cfa_offset 24
 2467 0004 00AF     		add	r7, sp, #0
 2468              	.LCFI123:
 2469              		.cfi_def_cfa_register 7
 2470 0006 87ED010A 		vstr.32	s0, [r7, #4]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 55


 2471 000a C7ED000A 		vstr.32	s1, [r7]
 603:Src/utils.c   **** 	float res;
 604:Src/utils.c   **** 	if (fabsf(va) < fabsf(vb))
 2472              		.loc 1 604 6
 2473 000e D7ED017A 		vldr.32	s15, [r7, #4]
 2474 0012 B0EEE77A 		vabs.f32	s14, s15
 2475              		.loc 1 604 18
 2476 0016 D7ED007A 		vldr.32	s15, [r7]
 2477 001a F0EEE77A 		vabs.f32	s15, s15
 2478              		.loc 1 604 5
 2479 001e B4EEE77A 		vcmpe.f32	s14, s15
 2480 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2481 0026 02D5     		bpl	.L228
 605:Src/utils.c   **** 	{
 606:Src/utils.c   **** 		res = va;
 2482              		.loc 1 606 7
 2483 0028 7B68     		ldr	r3, [r7, #4]	@ float
 2484 002a FB60     		str	r3, [r7, #12]	@ float
 2485 002c 01E0     		b	.L225
 2486              	.L228:
 607:Src/utils.c   **** 	}
 608:Src/utils.c   **** 	else
 609:Src/utils.c   **** 	{
 610:Src/utils.c   **** 		res = vb;
 2487              		.loc 1 610 7
 2488 002e 3B68     		ldr	r3, [r7]	@ float
 2489 0030 FB60     		str	r3, [r7, #12]	@ float
 2490              	.L225:
 611:Src/utils.c   **** 	}
 612:Src/utils.c   **** 
 613:Src/utils.c   **** 	return res;
 2491              		.loc 1 613 9
 2492 0032 FB68     		ldr	r3, [r7, #12]	@ float
 2493 0034 07EE903A 		vmov	s15, r3
 614:Src/utils.c   **** }
 2494              		.loc 1 614 1
 2495 0038 B0EE670A 		vmov.f32	s0, s15
 2496 003c 1437     		adds	r7, r7, #20
 2497              	.LCFI124:
 2498              		.cfi_def_cfa_offset 4
 2499 003e BD46     		mov	sp, r7
 2500              	.LCFI125:
 2501              		.cfi_def_cfa_register 13
 2502              		@ sp needed
 2503 0040 5DF8047B 		ldr	r7, [sp], #4
 2504              	.LCFI126:
 2505              		.cfi_restore 7
 2506              		.cfi_def_cfa_offset 0
 2507 0044 7047     		bx	lr
 2508              		.cfi_endproc
 2509              	.LFE26:
 2511              		.section	.text.utils_max_abs,"ax",%progbits
 2512              		.align	1
 2513              		.global	utils_max_abs
 2514              		.syntax unified
 2515              		.thumb
 2516              		.thumb_func
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 56


 2517              		.fpu fpv4-sp-d16
 2519              	utils_max_abs:
 2520              	.LFB27:
 615:Src/utils.c   **** 
 616:Src/utils.c   **** /**
 617:Src/utils.c   ****  * Calculate the values with the highest magnitude.
 618:Src/utils.c   ****  *
 619:Src/utils.c   ****  * @param va
 620:Src/utils.c   ****  * The first value.
 621:Src/utils.c   ****  *
 622:Src/utils.c   ****  * @param vb
 623:Src/utils.c   ****  * The second value.
 624:Src/utils.c   ****  *
 625:Src/utils.c   ****  * @return
 626:Src/utils.c   ****  * The value with the highest magnitude.
 627:Src/utils.c   ****  */
 628:Src/utils.c   **** float utils_max_abs(float va, float vb)
 629:Src/utils.c   **** {
 2521              		.loc 1 629 1
 2522              		.cfi_startproc
 2523              		@ args = 0, pretend = 0, frame = 16
 2524              		@ frame_needed = 1, uses_anonymous_args = 0
 2525              		@ link register save eliminated.
 2526 0000 80B4     		push	{r7}
 2527              	.LCFI127:
 2528              		.cfi_def_cfa_offset 4
 2529              		.cfi_offset 7, -4
 2530 0002 85B0     		sub	sp, sp, #20
 2531              	.LCFI128:
 2532              		.cfi_def_cfa_offset 24
 2533 0004 00AF     		add	r7, sp, #0
 2534              	.LCFI129:
 2535              		.cfi_def_cfa_register 7
 2536 0006 87ED010A 		vstr.32	s0, [r7, #4]
 2537 000a C7ED000A 		vstr.32	s1, [r7]
 630:Src/utils.c   **** 	float res;
 631:Src/utils.c   **** 	if (fabsf(va) > fabsf(vb))
 2538              		.loc 1 631 6
 2539 000e D7ED017A 		vldr.32	s15, [r7, #4]
 2540 0012 B0EEE77A 		vabs.f32	s14, s15
 2541              		.loc 1 631 18
 2542 0016 D7ED007A 		vldr.32	s15, [r7]
 2543 001a F0EEE77A 		vabs.f32	s15, s15
 2544              		.loc 1 631 5
 2545 001e B4EEE77A 		vcmpe.f32	s14, s15
 2546 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2547 0026 02DD     		ble	.L235
 632:Src/utils.c   **** 	{
 633:Src/utils.c   **** 		res = va;
 2548              		.loc 1 633 7
 2549 0028 7B68     		ldr	r3, [r7, #4]	@ float
 2550 002a FB60     		str	r3, [r7, #12]	@ float
 2551 002c 01E0     		b	.L232
 2552              	.L235:
 634:Src/utils.c   **** 	}
 635:Src/utils.c   **** 	else
 636:Src/utils.c   **** 	{
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 57


 637:Src/utils.c   **** 		res = vb;
 2553              		.loc 1 637 7
 2554 002e 3B68     		ldr	r3, [r7]	@ float
 2555 0030 FB60     		str	r3, [r7, #12]	@ float
 2556              	.L232:
 638:Src/utils.c   **** 	}
 639:Src/utils.c   **** 
 640:Src/utils.c   **** 	return res;
 2557              		.loc 1 640 9
 2558 0032 FB68     		ldr	r3, [r7, #12]	@ float
 2559 0034 07EE903A 		vmov	s15, r3
 641:Src/utils.c   **** }
 2560              		.loc 1 641 1
 2561 0038 B0EE670A 		vmov.f32	s0, s15
 2562 003c 1437     		adds	r7, r7, #20
 2563              	.LCFI130:
 2564              		.cfi_def_cfa_offset 4
 2565 003e BD46     		mov	sp, r7
 2566              	.LCFI131:
 2567              		.cfi_def_cfa_register 13
 2568              		@ sp needed
 2569 0040 5DF8047B 		ldr	r7, [sp], #4
 2570              	.LCFI132:
 2571              		.cfi_restore 7
 2572              		.cfi_def_cfa_offset 0
 2573 0044 7047     		bx	lr
 2574              		.cfi_endproc
 2575              	.LFE27:
 2577              		.section	.rodata
 2578              		.align	2
 2579              	.LC0:
 2580 0000 3100     		.ascii	"1\000"
 2581 0002 0000     		.align	2
 2582              	.LC1:
 2583 0004 3000     		.ascii	"0\000"
 2584              		.section	.text.utils_byte_to_binary,"ax",%progbits
 2585              		.align	1
 2586              		.global	utils_byte_to_binary
 2587              		.syntax unified
 2588              		.thumb
 2589              		.thumb_func
 2590              		.fpu fpv4-sp-d16
 2592              	utils_byte_to_binary:
 2593              	.LFB28:
 642:Src/utils.c   **** 
 643:Src/utils.c   **** /**
 644:Src/utils.c   ****  * Create string representation of the binary content of a byte
 645:Src/utils.c   ****  *
 646:Src/utils.c   ****  * @param x
 647:Src/utils.c   ****  * The byte.
 648:Src/utils.c   ****  *
 649:Src/utils.c   ****  * @param b
 650:Src/utils.c   ****  * Array to store the string representation in.
 651:Src/utils.c   ****  */
 652:Src/utils.c   **** void utils_byte_to_binary(int x, char *b)
 653:Src/utils.c   **** {
 2594              		.loc 1 653 1
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 58


 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 16
 2597              		@ frame_needed = 1, uses_anonymous_args = 0
 2598 0000 80B5     		push	{r7, lr}
 2599              	.LCFI133:
 2600              		.cfi_def_cfa_offset 8
 2601              		.cfi_offset 7, -8
 2602              		.cfi_offset 14, -4
 2603 0002 84B0     		sub	sp, sp, #16
 2604              	.LCFI134:
 2605              		.cfi_def_cfa_offset 24
 2606 0004 00AF     		add	r7, sp, #0
 2607              	.LCFI135:
 2608              		.cfi_def_cfa_register 7
 2609 0006 7860     		str	r0, [r7, #4]
 2610 0008 3960     		str	r1, [r7]
 654:Src/utils.c   **** 	b[0] = '\0';
 2611              		.loc 1 654 7
 2612 000a 3B68     		ldr	r3, [r7]
 2613 000c 0022     		movs	r2, #0
 2614 000e 1A70     		strb	r2, [r3]
 655:Src/utils.c   **** 
 656:Src/utils.c   **** 	int z;
 657:Src/utils.c   **** 	for (z = 128; z > 0; z >>= 1)
 2615              		.loc 1 657 9
 2616 0010 8023     		movs	r3, #128
 2617 0012 FB60     		str	r3, [r7, #12]
 2618              		.loc 1 657 2
 2619 0014 0FE0     		b	.L237
 2620              	.L240:
 658:Src/utils.c   **** 	{
 659:Src/utils.c   **** 		strcat(b, ((x & z) == z) ? "1" : "0");
 2621              		.loc 1 659 17
 2622 0016 7A68     		ldr	r2, [r7, #4]
 2623 0018 FB68     		ldr	r3, [r7, #12]
 2624 001a 1340     		ands	r3, r3, r2
 2625              		.loc 1 659 3
 2626 001c FA68     		ldr	r2, [r7, #12]
 2627 001e 9A42     		cmp	r2, r3
 2628 0020 01D1     		bne	.L238
 2629              		.loc 1 659 3 is_stmt 0 discriminator 1
 2630 0022 084B     		ldr	r3, .L241
 2631 0024 00E0     		b	.L239
 2632              	.L238:
 2633              		.loc 1 659 3 discriminator 2
 2634 0026 084B     		ldr	r3, .L241+4
 2635              	.L239:
 2636              		.loc 1 659 3 discriminator 4
 2637 0028 1946     		mov	r1, r3
 2638 002a 3868     		ldr	r0, [r7]
 2639 002c FFF7FEFF 		bl	strcat
 657:Src/utils.c   **** 	{
 2640              		.loc 1 657 25 is_stmt 1 discriminator 4
 2641 0030 FB68     		ldr	r3, [r7, #12]
 2642 0032 5B10     		asrs	r3, r3, #1
 2643 0034 FB60     		str	r3, [r7, #12]
 2644              	.L237:
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 59


 657:Src/utils.c   **** 	{
 2645              		.loc 1 657 2 discriminator 2
 2646 0036 FB68     		ldr	r3, [r7, #12]
 2647 0038 002B     		cmp	r3, #0
 2648 003a ECDC     		bgt	.L240
 660:Src/utils.c   **** 	}
 661:Src/utils.c   **** }
 2649              		.loc 1 661 1
 2650 003c 00BF     		nop
 2651 003e 1037     		adds	r7, r7, #16
 2652              	.LCFI136:
 2653              		.cfi_def_cfa_offset 8
 2654 0040 BD46     		mov	sp, r7
 2655              	.LCFI137:
 2656              		.cfi_def_cfa_register 13
 2657              		@ sp needed
 2658 0042 80BD     		pop	{r7, pc}
 2659              	.L242:
 2660              		.align	2
 2661              	.L241:
 2662 0044 00000000 		.word	.LC0
 2663 0048 04000000 		.word	.LC1
 2664              		.cfi_endproc
 2665              	.LFE28:
 2667              		.global	__aeabi_ddiv
 2668              		.section	.text.utils_throttle_curve,"ax",%progbits
 2669              		.align	1
 2670              		.global	utils_throttle_curve
 2671              		.syntax unified
 2672              		.thumb
 2673              		.thumb_func
 2674              		.fpu fpv4-sp-d16
 2676              	utils_throttle_curve:
 2677              	.LFB29:
 662:Src/utils.c   **** 
 663:Src/utils.c   **** float utils_throttle_curve(float val, float curve_acc, float curve_brake, int mode)
 664:Src/utils.c   **** {
 2678              		.loc 1 664 1
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 32
 2681              		@ frame_needed = 1, uses_anonymous_args = 0
 2682 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 2683              	.LCFI138:
 2684              		.cfi_def_cfa_offset 24
 2685              		.cfi_offset 4, -24
 2686              		.cfi_offset 5, -20
 2687              		.cfi_offset 7, -16
 2688              		.cfi_offset 8, -12
 2689              		.cfi_offset 9, -8
 2690              		.cfi_offset 14, -4
 2691 0004 88B0     		sub	sp, sp, #32
 2692              	.LCFI139:
 2693              		.cfi_def_cfa_offset 56
 2694 0006 00AF     		add	r7, sp, #0
 2695              	.LCFI140:
 2696              		.cfi_def_cfa_register 7
 2697 0008 87ED030A 		vstr.32	s0, [r7, #12]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 60


 2698 000c C7ED020A 		vstr.32	s1, [r7, #8]
 2699 0010 87ED011A 		vstr.32	s2, [r7, #4]
 2700 0014 3860     		str	r0, [r7]
 665:Src/utils.c   **** 	float ret = 0.0;
 2701              		.loc 1 665 8
 2702 0016 4FF00003 		mov	r3, #0
 2703 001a FB61     		str	r3, [r7, #28]	@ float
 666:Src/utils.c   **** 
 667:Src/utils.c   **** 	if (val < -1.0)
 2704              		.loc 1 667 5
 2705 001c D7ED037A 		vldr.32	s15, [r7, #12]
 2706 0020 BFEE007A 		vmov.f32	s14, #-1.0e+0
 2707 0024 F4EEC77A 		vcmpe.f32	s15, s14
 2708 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2709 002c 01D5     		bpl	.L244
 668:Src/utils.c   **** 	{
 669:Src/utils.c   **** 		val = -1.0;
 2710              		.loc 1 669 7
 2711 002e C84B     		ldr	r3, .L282+8
 2712 0030 FB60     		str	r3, [r7, #12]	@ float
 2713              	.L244:
 670:Src/utils.c   **** 	}
 671:Src/utils.c   **** 
 672:Src/utils.c   **** 	if (val > 1.0)
 2714              		.loc 1 672 5
 2715 0032 D7ED037A 		vldr.32	s15, [r7, #12]
 2716 0036 B7EE007A 		vmov.f32	s14, #1.0e+0
 2717 003a F4EEC77A 		vcmpe.f32	s15, s14
 2718 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2719 0042 02DD     		ble	.L246
 673:Src/utils.c   **** 	{
 674:Src/utils.c   **** 		val = 1.0;
 2720              		.loc 1 674 7
 2721 0044 4FF07E53 		mov	r3, #1065353216
 2722 0048 FB60     		str	r3, [r7, #12]	@ float
 2723              	.L246:
 675:Src/utils.c   **** 	}
 676:Src/utils.c   **** 
 677:Src/utils.c   **** 	float val_a = fabsf(val);
 2724              		.loc 1 677 8
 2725 004a D7ED037A 		vldr.32	s15, [r7, #12]
 2726 004e F0EEE77A 		vabs.f32	s15, s15
 2727 0052 C7ED057A 		vstr.32	s15, [r7, #20]
 678:Src/utils.c   **** 
 679:Src/utils.c   **** 	float curve;
 680:Src/utils.c   **** 	if (val >= 0.0)
 2728              		.loc 1 680 5
 2729 0056 D7ED037A 		vldr.32	s15, [r7, #12]
 2730 005a F5EEC07A 		vcmpe.f32	s15, #0
 2731 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2732 0062 02DB     		blt	.L277
 681:Src/utils.c   **** 	{
 682:Src/utils.c   **** 		curve = curve_acc;
 2733              		.loc 1 682 9
 2734 0064 BB68     		ldr	r3, [r7, #8]	@ float
 2735 0066 BB61     		str	r3, [r7, #24]	@ float
 2736 0068 01E0     		b	.L250
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 61


 2737              	.L277:
 683:Src/utils.c   **** 	}
 684:Src/utils.c   **** 	else
 685:Src/utils.c   **** 	{
 686:Src/utils.c   **** 		curve = curve_brake;
 2738              		.loc 1 686 9
 2739 006a 7B68     		ldr	r3, [r7, #4]	@ float
 2740 006c BB61     		str	r3, [r7, #24]	@ float
 2741              	.L250:
 687:Src/utils.c   **** 	}
 688:Src/utils.c   **** 
 689:Src/utils.c   **** 	// See
 690:Src/utils.c   **** 	// http://math.stackexchange.com/questions/297768/how-would-i-create-a-exponential-ramp-function-f
 691:Src/utils.c   **** 	if (mode == 0)
 2742              		.loc 1 691 5
 2743 006e 3B68     		ldr	r3, [r7]
 2744 0070 002B     		cmp	r3, #0
 2745 0072 30D1     		bne	.L251
 692:Src/utils.c   **** 	{ // Exponential
 693:Src/utils.c   **** 		if (curve >= 0.0)
 2746              		.loc 1 693 6
 2747 0074 D7ED067A 		vldr.32	s15, [r7, #24]
 2748 0078 F5EEC07A 		vcmpe.f32	s15, #0
 2749 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2750 0080 1ADB     		blt	.L278
 694:Src/utils.c   **** 		{
 695:Src/utils.c   **** 			ret = 1.0 - powf(1.0 - val_a, 1.0 + curve);
 2751              		.loc 1 695 16
 2752 0082 B7EE007A 		vmov.f32	s14, #1.0e+0
 2753 0086 D7ED057A 		vldr.32	s15, [r7, #20]
 2754 008a 77EE676A 		vsub.f32	s13, s14, s15
 2755 008e D7ED067A 		vldr.32	s15, [r7, #24]
 2756 0092 B7EE007A 		vmov.f32	s14, #1.0e+0
 2757 0096 77EE877A 		vadd.f32	s15, s15, s14
 2758 009a F0EE670A 		vmov.f32	s1, s15
 2759 009e B0EE660A 		vmov.f32	s0, s13
 2760 00a2 FFF7FEFF 		bl	powf
 2761 00a6 B0EE407A 		vmov.f32	s14, s0
 2762              		.loc 1 695 8
 2763 00aa F7EE007A 		vmov.f32	s15, #1.0e+0
 2764 00ae 77EEC77A 		vsub.f32	s15, s15, s14
 2765 00b2 C7ED077A 		vstr.32	s15, [r7, #28]
 2766 00b6 2EE1     		b	.L255
 2767              	.L278:
 696:Src/utils.c   **** 		}
 697:Src/utils.c   **** 		else
 698:Src/utils.c   **** 		{
 699:Src/utils.c   **** 			ret = powf(val_a, 1.0 - curve);
 2768              		.loc 1 699 10
 2769 00b8 B7EE007A 		vmov.f32	s14, #1.0e+0
 2770 00bc D7ED067A 		vldr.32	s15, [r7, #24]
 2771 00c0 77EE677A 		vsub.f32	s15, s14, s15
 2772 00c4 F0EE670A 		vmov.f32	s1, s15
 2773 00c8 97ED050A 		vldr.32	s0, [r7, #20]
 2774 00cc FFF7FEFF 		bl	powf
 2775 00d0 87ED070A 		vstr.32	s0, [r7, #28]
 2776 00d4 1FE1     		b	.L255
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 62


 2777              	.L251:
 700:Src/utils.c   **** 		}
 701:Src/utils.c   **** 	}
 702:Src/utils.c   **** 	else if (mode == 1)
 2778              		.loc 1 702 10
 2779 00d6 3B68     		ldr	r3, [r7]
 2780 00d8 012B     		cmp	r3, #1
 2781 00da 40F0A980 		bne	.L256
 703:Src/utils.c   **** 	{ // Natural
 704:Src/utils.c   **** 		if (fabsf(curve) < 1e-10)
 2782              		.loc 1 704 7
 2783 00de D7ED067A 		vldr.32	s15, [r7, #24]
 2784 00e2 F0EEE77A 		vabs.f32	s15, s15
 2785 00e6 17EE900A 		vmov	r0, s15
 2786 00ea FFF7FEFF 		bl	__aeabi_f2d
 2787              	.LVL32:
 2788              		.loc 1 704 6
 2789 00ee 96A3     		adr	r3, .L282
 2790 00f0 D3E90023 		ldrd	r2, [r3]
 2791 00f4 FFF7FEFF 		bl	__aeabi_dcmplt
 2792              	.LVL33:
 2793 00f8 0346     		mov	r3, r0
 2794 00fa 002B     		cmp	r3, #0
 2795 00fc 02D0     		beq	.L279
 705:Src/utils.c   **** 		{
 706:Src/utils.c   **** 			ret = val_a;
 2796              		.loc 1 706 8
 2797 00fe 7B69     		ldr	r3, [r7, #20]	@ float
 2798 0100 FB61     		str	r3, [r7, #28]	@ float
 2799 0102 08E1     		b	.L255
 2800              	.L279:
 707:Src/utils.c   **** 		}
 708:Src/utils.c   **** 		else
 709:Src/utils.c   **** 		{
 710:Src/utils.c   **** 			if (curve >= 0.0)
 2801              		.loc 1 710 7
 2802 0104 D7ED067A 		vldr.32	s15, [r7, #24]
 2803 0108 F5EEC07A 		vcmpe.f32	s15, #0
 2804 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2805 0110 53DB     		blt	.L280
 711:Src/utils.c   **** 			{
 712:Src/utils.c   **** 				ret = 1.0 - ((expf(curve * (1.0 - val_a)) - 1.0) / (expf(curve) - 1.0));
 2806              		.loc 1 712 30
 2807 0112 B869     		ldr	r0, [r7, #24]	@ float
 2808 0114 FFF7FEFF 		bl	__aeabi_f2d
 2809              	.LVL34:
 2810 0118 0446     		mov	r4, r0
 2811 011a 0D46     		mov	r5, r1
 2812              		.loc 1 712 37
 2813 011c 7869     		ldr	r0, [r7, #20]	@ float
 2814 011e FFF7FEFF 		bl	__aeabi_f2d
 2815              	.LVL35:
 2816 0122 0246     		mov	r2, r0
 2817 0124 0B46     		mov	r3, r1
 2818 0126 4FF00000 		mov	r0, #0
 2819 012a 8A49     		ldr	r1, .L282+12
 2820 012c FFF7FEFF 		bl	__aeabi_dsub
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 63


 2821              	.LVL36:
 2822 0130 0246     		mov	r2, r0
 2823 0132 0B46     		mov	r3, r1
 2824              		.loc 1 712 30
 2825 0134 2046     		mov	r0, r4
 2826 0136 2946     		mov	r1, r5
 2827 0138 FFF7FEFF 		bl	__aeabi_dmul
 2828              	.LVL37:
 2829 013c 0346     		mov	r3, r0
 2830 013e 0C46     		mov	r4, r1
 2831              		.loc 1 712 19
 2832 0140 1846     		mov	r0, r3
 2833 0142 2146     		mov	r1, r4
 2834 0144 FFF7FEFF 		bl	__aeabi_d2f
 2835              	.LVL38:
 2836 0148 0346     		mov	r3, r0	@ float
 2837 014a 00EE103A 		vmov	s0, r3
 2838 014e FFF7FEFF 		bl	expf
 2839 0152 10EE103A 		vmov	r3, s0
 2840 0156 1846     		mov	r0, r3	@ float
 2841 0158 FFF7FEFF 		bl	__aeabi_f2d
 2842              	.LVL39:
 2843              		.loc 1 712 47
 2844 015c 4FF00002 		mov	r2, #0
 2845 0160 7C4B     		ldr	r3, .L282+12
 2846 0162 FFF7FEFF 		bl	__aeabi_dsub
 2847              	.LVL40:
 2848 0166 0346     		mov	r3, r0
 2849 0168 0C46     		mov	r4, r1
 2850 016a 2546     		mov	r5, r4
 2851 016c 1C46     		mov	r4, r3
 2852              		.loc 1 712 57
 2853 016e 97ED060A 		vldr.32	s0, [r7, #24]
 2854 0172 FFF7FEFF 		bl	expf
 2855 0176 10EE103A 		vmov	r3, s0
 2856 017a 1846     		mov	r0, r3	@ float
 2857 017c FFF7FEFF 		bl	__aeabi_f2d
 2858              	.LVL41:
 2859              		.loc 1 712 69
 2860 0180 4FF00002 		mov	r2, #0
 2861 0184 734B     		ldr	r3, .L282+12
 2862 0186 FFF7FEFF 		bl	__aeabi_dsub
 2863              	.LVL42:
 2864 018a 0246     		mov	r2, r0
 2865 018c 0B46     		mov	r3, r1
 2866              		.loc 1 712 54
 2867 018e 2046     		mov	r0, r4
 2868 0190 2946     		mov	r1, r5
 2869 0192 FFF7FEFF 		bl	__aeabi_ddiv
 2870              	.LVL43:
 2871 0196 0346     		mov	r3, r0
 2872 0198 0C46     		mov	r4, r1
 2873              		.loc 1 712 15
 2874 019a 1A46     		mov	r2, r3
 2875 019c 2346     		mov	r3, r4
 2876 019e 4FF00000 		mov	r0, #0
 2877 01a2 6C49     		ldr	r1, .L282+12
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 64


 2878 01a4 FFF7FEFF 		bl	__aeabi_dsub
 2879              	.LVL44:
 2880 01a8 0346     		mov	r3, r0
 2881 01aa 0C46     		mov	r4, r1
 2882              		.loc 1 712 9
 2883 01ac 1846     		mov	r0, r3
 2884 01ae 2146     		mov	r1, r4
 2885 01b0 FFF7FEFF 		bl	__aeabi_d2f
 2886              	.LVL45:
 2887 01b4 0346     		mov	r3, r0	@ float
 2888 01b6 FB61     		str	r3, [r7, #28]	@ float
 2889 01b8 ADE0     		b	.L255
 2890              	.L280:
 713:Src/utils.c   **** 			}
 714:Src/utils.c   **** 			else
 715:Src/utils.c   **** 			{
 716:Src/utils.c   **** 				ret = (expf(-curve * val_a) - 1.0) / (expf(-curve) - 1.0);
 2891              		.loc 1 716 17
 2892 01ba D7ED067A 		vldr.32	s15, [r7, #24]
 2893 01be B1EE677A 		vneg.f32	s14, s15
 2894              		.loc 1 716 12
 2895 01c2 D7ED057A 		vldr.32	s15, [r7, #20]
 2896 01c6 67EE277A 		vmul.f32	s15, s14, s15
 2897 01ca B0EE670A 		vmov.f32	s0, s15
 2898 01ce FFF7FEFF 		bl	expf
 2899 01d2 10EE103A 		vmov	r3, s0
 2900 01d6 1846     		mov	r0, r3	@ float
 2901 01d8 FFF7FEFF 		bl	__aeabi_f2d
 2902              	.LVL46:
 2903              		.loc 1 716 33
 2904 01dc 4FF00002 		mov	r2, #0
 2905 01e0 5C4B     		ldr	r3, .L282+12
 2906 01e2 FFF7FEFF 		bl	__aeabi_dsub
 2907              	.LVL47:
 2908 01e6 0346     		mov	r3, r0
 2909 01e8 0C46     		mov	r4, r1
 2910 01ea 2546     		mov	r5, r4
 2911 01ec 1C46     		mov	r4, r3
 2912              		.loc 1 716 43
 2913 01ee D7ED067A 		vldr.32	s15, [r7, #24]
 2914 01f2 F1EE677A 		vneg.f32	s15, s15
 2915 01f6 B0EE670A 		vmov.f32	s0, s15
 2916 01fa FFF7FEFF 		bl	expf
 2917 01fe 10EE103A 		vmov	r3, s0
 2918 0202 1846     		mov	r0, r3	@ float
 2919 0204 FFF7FEFF 		bl	__aeabi_f2d
 2920              	.LVL48:
 2921              		.loc 1 716 56
 2922 0208 4FF00002 		mov	r2, #0
 2923 020c 514B     		ldr	r3, .L282+12
 2924 020e FFF7FEFF 		bl	__aeabi_dsub
 2925              	.LVL49:
 2926 0212 0246     		mov	r2, r0
 2927 0214 0B46     		mov	r3, r1
 2928              		.loc 1 716 40
 2929 0216 2046     		mov	r0, r4
 2930 0218 2946     		mov	r1, r5
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 65


 2931 021a FFF7FEFF 		bl	__aeabi_ddiv
 2932              	.LVL50:
 2933 021e 0346     		mov	r3, r0
 2934 0220 0C46     		mov	r4, r1
 2935              		.loc 1 716 9
 2936 0222 1846     		mov	r0, r3
 2937 0224 2146     		mov	r1, r4
 2938 0226 FFF7FEFF 		bl	__aeabi_d2f
 2939              	.LVL51:
 2940 022a 0346     		mov	r3, r0	@ float
 2941 022c FB61     		str	r3, [r7, #28]	@ float
 2942 022e 72E0     		b	.L255
 2943              	.L256:
 717:Src/utils.c   **** 			}
 718:Src/utils.c   **** 		}
 719:Src/utils.c   **** 	}
 720:Src/utils.c   **** 	else if (mode == 2)
 2944              		.loc 1 720 10
 2945 0230 3B68     		ldr	r3, [r7]
 2946 0232 022B     		cmp	r3, #2
 2947 0234 6DD1     		bne	.L262
 721:Src/utils.c   **** 	{ // Polynomial
 722:Src/utils.c   **** 		if (curve >= 0.0)
 2948              		.loc 1 722 6
 2949 0236 D7ED067A 		vldr.32	s15, [r7, #24]
 2950 023a F5EEC07A 		vcmpe.f32	s15, #0
 2951 023e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2952 0242 36DB     		blt	.L281
 723:Src/utils.c   **** 		{
 724:Src/utils.c   **** 			ret = 1.0 - ((1.0 - val_a) / (1.0 + curve * val_a));
 2953              		.loc 1 724 22
 2954 0244 7869     		ldr	r0, [r7, #20]	@ float
 2955 0246 FFF7FEFF 		bl	__aeabi_f2d
 2956              	.LVL52:
 2957 024a 0346     		mov	r3, r0
 2958 024c 0C46     		mov	r4, r1
 2959 024e 1A46     		mov	r2, r3
 2960 0250 2346     		mov	r3, r4
 2961 0252 4FF00000 		mov	r0, #0
 2962 0256 3F49     		ldr	r1, .L282+12
 2963 0258 FFF7FEFF 		bl	__aeabi_dsub
 2964              	.LVL53:
 2965 025c 0346     		mov	r3, r0
 2966 025e 0C46     		mov	r4, r1
 2967 0260 2546     		mov	r5, r4
 2968 0262 1C46     		mov	r4, r3
 2969              		.loc 1 724 46
 2970 0264 97ED067A 		vldr.32	s14, [r7, #24]
 2971 0268 D7ED057A 		vldr.32	s15, [r7, #20]
 2972 026c 67EE277A 		vmul.f32	s15, s14, s15
 2973 0270 17EE900A 		vmov	r0, s15
 2974 0274 FFF7FEFF 		bl	__aeabi_f2d
 2975              	.LVL54:
 2976              		.loc 1 724 38
 2977 0278 4FF00002 		mov	r2, #0
 2978 027c 354B     		ldr	r3, .L282+12
 2979 027e FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 66


 2980              	.LVL55:
 2981 0282 0246     		mov	r2, r0
 2982 0284 0B46     		mov	r3, r1
 2983              		.loc 1 724 31
 2984 0286 2046     		mov	r0, r4
 2985 0288 2946     		mov	r1, r5
 2986 028a FFF7FEFF 		bl	__aeabi_ddiv
 2987              	.LVL56:
 2988 028e 0346     		mov	r3, r0
 2989 0290 0C46     		mov	r4, r1
 2990              		.loc 1 724 14
 2991 0292 1A46     		mov	r2, r3
 2992 0294 2346     		mov	r3, r4
 2993 0296 4FF00000 		mov	r0, #0
 2994 029a 2E49     		ldr	r1, .L282+12
 2995 029c FFF7FEFF 		bl	__aeabi_dsub
 2996              	.LVL57:
 2997 02a0 0346     		mov	r3, r0
 2998 02a2 0C46     		mov	r4, r1
 2999              		.loc 1 724 8
 3000 02a4 1846     		mov	r0, r3
 3001 02a6 2146     		mov	r1, r4
 3002 02a8 FFF7FEFF 		bl	__aeabi_d2f
 3003              	.LVL58:
 3004 02ac 0346     		mov	r3, r0	@ float
 3005 02ae FB61     		str	r3, [r7, #28]	@ float
 3006 02b0 31E0     		b	.L255
 3007              	.L281:
 725:Src/utils.c   **** 		}
 726:Src/utils.c   **** 		else
 727:Src/utils.c   **** 		{
 728:Src/utils.c   **** 			ret = val_a / (1.0 - curve * (1.0 - val_a));
 3008              		.loc 1 728 16
 3009 02b2 7869     		ldr	r0, [r7, #20]	@ float
 3010 02b4 FFF7FEFF 		bl	__aeabi_f2d
 3011              	.LVL59:
 3012 02b8 0446     		mov	r4, r0
 3013 02ba 0D46     		mov	r5, r1
 3014              		.loc 1 728 31
 3015 02bc B869     		ldr	r0, [r7, #24]	@ float
 3016 02be FFF7FEFF 		bl	__aeabi_f2d
 3017              	.LVL60:
 3018 02c2 8046     		mov	r8, r0
 3019 02c4 8946     		mov	r9, r1
 3020              		.loc 1 728 38
 3021 02c6 7869     		ldr	r0, [r7, #20]	@ float
 3022 02c8 FFF7FEFF 		bl	__aeabi_f2d
 3023              	.LVL61:
 3024 02cc 0246     		mov	r2, r0
 3025 02ce 0B46     		mov	r3, r1
 3026 02d0 4FF00000 		mov	r0, #0
 3027 02d4 1F49     		ldr	r1, .L282+12
 3028 02d6 FFF7FEFF 		bl	__aeabi_dsub
 3029              	.LVL62:
 3030 02da 0246     		mov	r2, r0
 3031 02dc 0B46     		mov	r3, r1
 3032              		.loc 1 728 31
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 67


 3033 02de 4046     		mov	r0, r8
 3034 02e0 4946     		mov	r1, r9
 3035 02e2 FFF7FEFF 		bl	__aeabi_dmul
 3036              	.LVL63:
 3037 02e6 0246     		mov	r2, r0
 3038 02e8 0B46     		mov	r3, r1
 3039              		.loc 1 728 23
 3040 02ea 4FF00000 		mov	r0, #0
 3041 02ee 1949     		ldr	r1, .L282+12
 3042 02f0 FFF7FEFF 		bl	__aeabi_dsub
 3043              	.LVL64:
 3044 02f4 0246     		mov	r2, r0
 3045 02f6 0B46     		mov	r3, r1
 3046              		.loc 1 728 16
 3047 02f8 2046     		mov	r0, r4
 3048 02fa 2946     		mov	r1, r5
 3049 02fc FFF7FEFF 		bl	__aeabi_ddiv
 3050              	.LVL65:
 3051 0300 0346     		mov	r3, r0
 3052 0302 0C46     		mov	r4, r1
 3053              		.loc 1 728 8
 3054 0304 1846     		mov	r0, r3
 3055 0306 2146     		mov	r1, r4
 3056 0308 FFF7FEFF 		bl	__aeabi_d2f
 3057              	.LVL66:
 3058 030c 0346     		mov	r3, r0	@ float
 3059 030e FB61     		str	r3, [r7, #28]	@ float
 3060 0310 01E0     		b	.L255
 3061              	.L262:
 729:Src/utils.c   **** 		}
 730:Src/utils.c   **** 	}
 731:Src/utils.c   **** 	else
 732:Src/utils.c   **** 	{ // Linear
 733:Src/utils.c   **** 		ret = val_a;
 3062              		.loc 1 733 7
 3063 0312 7B69     		ldr	r3, [r7, #20]	@ float
 3064 0314 FB61     		str	r3, [r7, #28]	@ float
 3065              	.L255:
 734:Src/utils.c   **** 	}
 735:Src/utils.c   **** 
 736:Src/utils.c   **** 	if (val < 0.0)
 3066              		.loc 1 736 5
 3067 0316 D7ED037A 		vldr.32	s15, [r7, #12]
 3068 031a F5EEC07A 		vcmpe.f32	s15, #0
 3069 031e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3070 0322 05D5     		bpl	.L266
 737:Src/utils.c   **** 	{
 738:Src/utils.c   **** 		ret = -ret;
 3071              		.loc 1 738 7
 3072 0324 D7ED077A 		vldr.32	s15, [r7, #28]
 3073 0328 F1EE677A 		vneg.f32	s15, s15
 3074 032c C7ED077A 		vstr.32	s15, [r7, #28]
 3075              	.L266:
 739:Src/utils.c   **** 	}
 740:Src/utils.c   **** 
 741:Src/utils.c   **** 	return ret;
 3076              		.loc 1 741 9
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 68


 3077 0330 FB69     		ldr	r3, [r7, #28]	@ float
 3078 0332 07EE903A 		vmov	s15, r3
 742:Src/utils.c   **** }
 3079              		.loc 1 742 1
 3080 0336 B0EE670A 		vmov.f32	s0, s15
 3081 033a 2037     		adds	r7, r7, #32
 3082              	.LCFI141:
 3083              		.cfi_def_cfa_offset 24
 3084 033c BD46     		mov	sp, r7
 3085              	.LCFI142:
 3086              		.cfi_def_cfa_register 13
 3087              		@ sp needed
 3088 033e BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 3089              	.L283:
 3090 0342 00BFAFF3 		.align	3
 3090      0080
 3091              	.L282:
 3092 0348 BBBDD7D9 		.word	-640172613
 3093 034c DF7CDB3D 		.word	1037794527
 3094 0350 000080BF 		.word	-1082130432
 3095 0354 0000F03F 		.word	1072693248
 3096              		.cfi_endproc
 3097              	.LFE29:
 3099              		.section	.text.utils_crc32c,"ax",%progbits
 3100              		.align	1
 3101              		.global	utils_crc32c
 3102              		.syntax unified
 3103              		.thumb
 3104              		.thumb_func
 3105              		.fpu fpv4-sp-d16
 3107              	utils_crc32c:
 3108              	.LFB30:
 743:Src/utils.c   **** 
 744:Src/utils.c   **** 
 745:Src/utils.c   **** uint32_t utils_crc32c(uint8_t *data, uint32_t len)
 746:Src/utils.c   **** {
 3109              		.loc 1 746 1
 3110              		.cfi_startproc
 3111              		@ args = 0, pretend = 0, frame = 32
 3112              		@ frame_needed = 1, uses_anonymous_args = 0
 3113              		@ link register save eliminated.
 3114 0000 80B4     		push	{r7}
 3115              	.LCFI143:
 3116              		.cfi_def_cfa_offset 4
 3117              		.cfi_offset 7, -4
 3118 0002 89B0     		sub	sp, sp, #36
 3119              	.LCFI144:
 3120              		.cfi_def_cfa_offset 40
 3121 0004 00AF     		add	r7, sp, #0
 3122              	.LCFI145:
 3123              		.cfi_def_cfa_register 7
 3124 0006 7860     		str	r0, [r7, #4]
 3125 0008 3960     		str	r1, [r7]
 747:Src/utils.c   **** 	uint32_t crc = 0xFFFFFFFF;
 3126              		.loc 1 747 11
 3127 000a 4FF0FF33 		mov	r3, #-1
 3128 000e FB61     		str	r3, [r7, #28]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 69


 3129              	.LBB9:
 748:Src/utils.c   **** 
 749:Src/utils.c   **** 	for (uint32_t i = 0; i < len; i++)
 3130              		.loc 1 749 16
 3131 0010 0023     		movs	r3, #0
 3132 0012 BB61     		str	r3, [r7, #24]
 3133              		.loc 1 749 2
 3134 0014 20E0     		b	.L285
 3135              	.L288:
 3136              	.LBB10:
 750:Src/utils.c   **** 	{
 751:Src/utils.c   **** 		uint32_t byte = data[i];
 3137              		.loc 1 751 23
 3138 0016 7A68     		ldr	r2, [r7, #4]
 3139 0018 BB69     		ldr	r3, [r7, #24]
 3140 001a 1344     		add	r3, r3, r2
 3141 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3142              		.loc 1 751 12
 3143 001e 3B61     		str	r3, [r7, #16]
 752:Src/utils.c   **** 		crc = crc ^ byte;
 3144              		.loc 1 752 7
 3145 0020 FA69     		ldr	r2, [r7, #28]
 3146 0022 3B69     		ldr	r3, [r7, #16]
 3147 0024 5340     		eors	r3, r3, r2
 3148 0026 FB61     		str	r3, [r7, #28]
 3149              	.LBB11:
 753:Src/utils.c   **** 
 754:Src/utils.c   **** 		for (int j = 7; j >= 0; j--)
 3150              		.loc 1 754 12
 3151 0028 0723     		movs	r3, #7
 3152 002a 7B61     		str	r3, [r7, #20]
 3153              		.loc 1 754 3
 3154 002c 0EE0     		b	.L286
 3155              	.L287:
 3156              	.LBB12:
 755:Src/utils.c   **** 		{
 756:Src/utils.c   **** 			uint32_t mask = -(crc & 1);
 3157              		.loc 1 756 26 discriminator 3
 3158 002e FB69     		ldr	r3, [r7, #28]
 3159 0030 03F00103 		and	r3, r3, #1
 3160              		.loc 1 756 13 discriminator 3
 3161 0034 5B42     		rsbs	r3, r3, #0
 3162 0036 FB60     		str	r3, [r7, #12]
 757:Src/utils.c   **** 			crc = (crc >> 1) ^ (0x82F63B78 & mask);
 3163              		.loc 1 757 15 discriminator 3
 3164 0038 FB69     		ldr	r3, [r7, #28]
 3165 003a 5A08     		lsrs	r2, r3, #1
 3166              		.loc 1 757 35 discriminator 3
 3167 003c F968     		ldr	r1, [r7, #12]
 3168 003e 0C4B     		ldr	r3, .L290
 3169 0040 0B40     		ands	r3, r3, r1
 3170              		.loc 1 757 8 discriminator 3
 3171 0042 5340     		eors	r3, r3, r2
 3172 0044 FB61     		str	r3, [r7, #28]
 3173              	.LBE12:
 754:Src/utils.c   **** 		{
 3174              		.loc 1 754 28 discriminator 3
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 70


 3175 0046 7B69     		ldr	r3, [r7, #20]
 3176 0048 013B     		subs	r3, r3, #1
 3177 004a 7B61     		str	r3, [r7, #20]
 3178              	.L286:
 754:Src/utils.c   **** 		{
 3179              		.loc 1 754 3 discriminator 1
 3180 004c 7B69     		ldr	r3, [r7, #20]
 3181 004e 002B     		cmp	r3, #0
 3182 0050 EDDA     		bge	.L287
 3183              	.LBE11:
 3184              	.LBE10:
 749:Src/utils.c   **** 	{
 3185              		.loc 1 749 33 discriminator 2
 3186 0052 BB69     		ldr	r3, [r7, #24]
 3187 0054 0133     		adds	r3, r3, #1
 3188 0056 BB61     		str	r3, [r7, #24]
 3189              	.L285:
 749:Src/utils.c   **** 	{
 3190              		.loc 1 749 2 discriminator 1
 3191 0058 BA69     		ldr	r2, [r7, #24]
 3192 005a 3B68     		ldr	r3, [r7]
 3193 005c 9A42     		cmp	r2, r3
 3194 005e DAD3     		bcc	.L288
 3195              	.LBE9:
 758:Src/utils.c   **** 		}
 759:Src/utils.c   **** 	}
 760:Src/utils.c   **** 
 761:Src/utils.c   **** 	return ~crc;
 3196              		.loc 1 761 9
 3197 0060 FB69     		ldr	r3, [r7, #28]
 3198 0062 DB43     		mvns	r3, r3
 762:Src/utils.c   **** }
 3199              		.loc 1 762 1
 3200 0064 1846     		mov	r0, r3
 3201 0066 2437     		adds	r7, r7, #36
 3202              	.LCFI146:
 3203              		.cfi_def_cfa_offset 4
 3204 0068 BD46     		mov	sp, r7
 3205              	.LCFI147:
 3206              		.cfi_def_cfa_register 13
 3207              		@ sp needed
 3208 006a 5DF8047B 		ldr	r7, [sp], #4
 3209              	.LCFI148:
 3210              		.cfi_restore 7
 3211              		.cfi_def_cfa_offset 0
 3212 006e 7047     		bx	lr
 3213              	.L291:
 3214              		.align	2
 3215              	.L290:
 3216 0070 783BF682 		.word	-2097792136
 3217              		.cfi_endproc
 3218              	.LFE30:
 3220              		.section	.text.utils_fft32_bin0,"ax",%progbits
 3221              		.align	1
 3222              		.global	utils_fft32_bin0
 3223              		.syntax unified
 3224              		.thumb
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 71


 3225              		.thumb_func
 3226              		.fpu fpv4-sp-d16
 3228              	utils_fft32_bin0:
 3229              	.LFB31:
 763:Src/utils.c   **** 
 764:Src/utils.c   **** // Yes, this is only the average...
 765:Src/utils.c   **** void utils_fft32_bin0(float *real_in, float *real, float *imag)
 766:Src/utils.c   **** {
 3230              		.loc 1 766 1
 3231              		.cfi_startproc
 3232              		@ args = 0, pretend = 0, frame = 24
 3233              		@ frame_needed = 1, uses_anonymous_args = 0
 3234              		@ link register save eliminated.
 3235 0000 80B4     		push	{r7}
 3236              	.LCFI149:
 3237              		.cfi_def_cfa_offset 4
 3238              		.cfi_offset 7, -4
 3239 0002 87B0     		sub	sp, sp, #28
 3240              	.LCFI150:
 3241              		.cfi_def_cfa_offset 32
 3242 0004 00AF     		add	r7, sp, #0
 3243              	.LCFI151:
 3244              		.cfi_def_cfa_register 7
 3245 0006 F860     		str	r0, [r7, #12]
 3246 0008 B960     		str	r1, [r7, #8]
 3247 000a 7A60     		str	r2, [r7, #4]
 767:Src/utils.c   **** 	*real = 0.0;
 3248              		.loc 1 767 8
 3249 000c BB68     		ldr	r3, [r7, #8]
 3250 000e 4FF00002 		mov	r2, #0
 3251 0012 1A60     		str	r2, [r3]	@ float
 768:Src/utils.c   **** 	*imag = 0.0;
 3252              		.loc 1 768 8
 3253 0014 7B68     		ldr	r3, [r7, #4]
 3254 0016 4FF00002 		mov	r2, #0
 3255 001a 1A60     		str	r2, [r3]	@ float
 3256              	.LBB13:
 769:Src/utils.c   **** 
 770:Src/utils.c   **** 	for (int i = 0; i < 32; i++)
 3257              		.loc 1 770 11
 3258 001c 0023     		movs	r3, #0
 3259 001e 7B61     		str	r3, [r7, #20]
 3260              		.loc 1 770 2
 3261 0020 10E0     		b	.L293
 3262              	.L294:
 771:Src/utils.c   **** 	{
 772:Src/utils.c   **** 		*real += real_in[i];
 3263              		.loc 1 772 9 discriminator 3
 3264 0022 BB68     		ldr	r3, [r7, #8]
 3265 0024 93ED007A 		vldr.32	s14, [r3]
 3266              		.loc 1 772 19 discriminator 3
 3267 0028 7B69     		ldr	r3, [r7, #20]
 3268 002a 9B00     		lsls	r3, r3, #2
 3269 002c FA68     		ldr	r2, [r7, #12]
 3270 002e 1344     		add	r3, r3, r2
 3271 0030 D3ED007A 		vldr.32	s15, [r3]
 3272              		.loc 1 772 9 discriminator 3
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 72


 3273 0034 77EE277A 		vadd.f32	s15, s14, s15
 3274 0038 BB68     		ldr	r3, [r7, #8]
 3275 003a C3ED007A 		vstr.32	s15, [r3]
 770:Src/utils.c   **** 	{
 3276              		.loc 1 770 27 discriminator 3
 3277 003e 7B69     		ldr	r3, [r7, #20]
 3278 0040 0133     		adds	r3, r3, #1
 3279 0042 7B61     		str	r3, [r7, #20]
 3280              	.L293:
 770:Src/utils.c   **** 	{
 3281              		.loc 1 770 2 discriminator 1
 3282 0044 7B69     		ldr	r3, [r7, #20]
 3283 0046 1F2B     		cmp	r3, #31
 3284 0048 EBDD     		ble	.L294
 3285              	.LBE13:
 773:Src/utils.c   **** 	}
 774:Src/utils.c   **** 
 775:Src/utils.c   **** 	*real /= 32.0;
 3286              		.loc 1 775 8
 3287 004a BB68     		ldr	r3, [r7, #8]
 3288 004c 93ED007A 		vldr.32	s14, [r3]
 3289 0050 DFED066A 		vldr.32	s13, .L295
 3290 0054 C7EE267A 		vdiv.f32	s15, s14, s13
 3291 0058 BB68     		ldr	r3, [r7, #8]
 3292 005a C3ED007A 		vstr.32	s15, [r3]
 776:Src/utils.c   **** }
 3293              		.loc 1 776 1
 3294 005e 00BF     		nop
 3295 0060 1C37     		adds	r7, r7, #28
 3296              	.LCFI152:
 3297              		.cfi_def_cfa_offset 4
 3298 0062 BD46     		mov	sp, r7
 3299              	.LCFI153:
 3300              		.cfi_def_cfa_register 13
 3301              		@ sp needed
 3302 0064 5DF8047B 		ldr	r7, [sp], #4
 3303              	.LCFI154:
 3304              		.cfi_restore 7
 3305              		.cfi_def_cfa_offset 0
 3306 0068 7047     		bx	lr
 3307              	.L296:
 3308 006a 00BF     		.align	2
 3309              	.L295:
 3310 006c 00000042 		.word	1107296256
 3311              		.cfi_endproc
 3312              	.LFE31:
 3314              		.section	.text.utils_fft16_bin0,"ax",%progbits
 3315              		.align	1
 3316              		.global	utils_fft16_bin0
 3317              		.syntax unified
 3318              		.thumb
 3319              		.thumb_func
 3320              		.fpu fpv4-sp-d16
 3322              	utils_fft16_bin0:
 3323              	.LFB32:
 777:Src/utils.c   **** 
 778:Src/utils.c   **** 
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 73


 779:Src/utils.c   **** void utils_fft16_bin0(float *real_in, float *real, float *imag)
 780:Src/utils.c   **** {
 3324              		.loc 1 780 1
 3325              		.cfi_startproc
 3326              		@ args = 0, pretend = 0, frame = 24
 3327              		@ frame_needed = 1, uses_anonymous_args = 0
 3328              		@ link register save eliminated.
 3329 0000 80B4     		push	{r7}
 3330              	.LCFI155:
 3331              		.cfi_def_cfa_offset 4
 3332              		.cfi_offset 7, -4
 3333 0002 87B0     		sub	sp, sp, #28
 3334              	.LCFI156:
 3335              		.cfi_def_cfa_offset 32
 3336 0004 00AF     		add	r7, sp, #0
 3337              	.LCFI157:
 3338              		.cfi_def_cfa_register 7
 3339 0006 F860     		str	r0, [r7, #12]
 3340 0008 B960     		str	r1, [r7, #8]
 3341 000a 7A60     		str	r2, [r7, #4]
 781:Src/utils.c   **** 	*real = 0.0;
 3342              		.loc 1 781 8
 3343 000c BB68     		ldr	r3, [r7, #8]
 3344 000e 4FF00002 		mov	r2, #0
 3345 0012 1A60     		str	r2, [r3]	@ float
 782:Src/utils.c   **** 	*imag = 0.0;
 3346              		.loc 1 782 8
 3347 0014 7B68     		ldr	r3, [r7, #4]
 3348 0016 4FF00002 		mov	r2, #0
 3349 001a 1A60     		str	r2, [r3]	@ float
 3350              	.LBB14:
 783:Src/utils.c   **** 
 784:Src/utils.c   **** 	for (int i = 0; i < 16; i++)
 3351              		.loc 1 784 11
 3352 001c 0023     		movs	r3, #0
 3353 001e 7B61     		str	r3, [r7, #20]
 3354              		.loc 1 784 2
 3355 0020 10E0     		b	.L298
 3356              	.L299:
 785:Src/utils.c   **** 	{
 786:Src/utils.c   **** 		*real += real_in[i];
 3357              		.loc 1 786 9 discriminator 3
 3358 0022 BB68     		ldr	r3, [r7, #8]
 3359 0024 93ED007A 		vldr.32	s14, [r3]
 3360              		.loc 1 786 19 discriminator 3
 3361 0028 7B69     		ldr	r3, [r7, #20]
 3362 002a 9B00     		lsls	r3, r3, #2
 3363 002c FA68     		ldr	r2, [r7, #12]
 3364 002e 1344     		add	r3, r3, r2
 3365 0030 D3ED007A 		vldr.32	s15, [r3]
 3366              		.loc 1 786 9 discriminator 3
 3367 0034 77EE277A 		vadd.f32	s15, s14, s15
 3368 0038 BB68     		ldr	r3, [r7, #8]
 3369 003a C3ED007A 		vstr.32	s15, [r3]
 784:Src/utils.c   **** 	{
 3370              		.loc 1 784 27 discriminator 3
 3371 003e 7B69     		ldr	r3, [r7, #20]
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 74


 3372 0040 0133     		adds	r3, r3, #1
 3373 0042 7B61     		str	r3, [r7, #20]
 3374              	.L298:
 784:Src/utils.c   **** 	{
 3375              		.loc 1 784 2 discriminator 1
 3376 0044 7B69     		ldr	r3, [r7, #20]
 3377 0046 0F2B     		cmp	r3, #15
 3378 0048 EBDD     		ble	.L299
 3379              	.LBE14:
 787:Src/utils.c   **** 	}
 788:Src/utils.c   **** 
 789:Src/utils.c   **** 	*real /= 16.0;
 3380              		.loc 1 789 8
 3381 004a BB68     		ldr	r3, [r7, #8]
 3382 004c 93ED007A 		vldr.32	s14, [r3]
 3383 0050 F3EE006A 		vmov.f32	s13, #1.6e+1
 3384 0054 C7EE267A 		vdiv.f32	s15, s14, s13
 3385 0058 BB68     		ldr	r3, [r7, #8]
 3386 005a C3ED007A 		vstr.32	s15, [r3]
 790:Src/utils.c   **** }
 3387              		.loc 1 790 1
 3388 005e 00BF     		nop
 3389 0060 1C37     		adds	r7, r7, #28
 3390              	.LCFI158:
 3391              		.cfi_def_cfa_offset 4
 3392 0062 BD46     		mov	sp, r7
 3393              	.LCFI159:
 3394              		.cfi_def_cfa_register 13
 3395              		@ sp needed
 3396 0064 5DF8047B 		ldr	r7, [sp], #4
 3397              	.LCFI160:
 3398              		.cfi_restore 7
 3399              		.cfi_def_cfa_offset 0
 3400 0068 7047     		bx	lr
 3401              		.cfi_endproc
 3402              	.LFE32:
 3404              		.section	.text.utils_fft8_bin0,"ax",%progbits
 3405              		.align	1
 3406              		.global	utils_fft8_bin0
 3407              		.syntax unified
 3408              		.thumb
 3409              		.thumb_func
 3410              		.fpu fpv4-sp-d16
 3412              	utils_fft8_bin0:
 3413              	.LFB33:
 791:Src/utils.c   **** 
 792:Src/utils.c   **** 
 793:Src/utils.c   **** void utils_fft8_bin0(float *real_in, float *real, float *imag)
 794:Src/utils.c   **** {
 3414              		.loc 1 794 1
 3415              		.cfi_startproc
 3416              		@ args = 0, pretend = 0, frame = 24
 3417              		@ frame_needed = 1, uses_anonymous_args = 0
 3418              		@ link register save eliminated.
 3419 0000 80B4     		push	{r7}
 3420              	.LCFI161:
 3421              		.cfi_def_cfa_offset 4
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 75


 3422              		.cfi_offset 7, -4
 3423 0002 87B0     		sub	sp, sp, #28
 3424              	.LCFI162:
 3425              		.cfi_def_cfa_offset 32
 3426 0004 00AF     		add	r7, sp, #0
 3427              	.LCFI163:
 3428              		.cfi_def_cfa_register 7
 3429 0006 F860     		str	r0, [r7, #12]
 3430 0008 B960     		str	r1, [r7, #8]
 3431 000a 7A60     		str	r2, [r7, #4]
 795:Src/utils.c   **** 	*real = 0.0;
 3432              		.loc 1 795 8
 3433 000c BB68     		ldr	r3, [r7, #8]
 3434 000e 4FF00002 		mov	r2, #0
 3435 0012 1A60     		str	r2, [r3]	@ float
 796:Src/utils.c   **** 	*imag = 0.0;
 3436              		.loc 1 796 8
 3437 0014 7B68     		ldr	r3, [r7, #4]
 3438 0016 4FF00002 		mov	r2, #0
 3439 001a 1A60     		str	r2, [r3]	@ float
 3440              	.LBB15:
 797:Src/utils.c   **** 
 798:Src/utils.c   **** 	for (int i = 0; i < 8; i++)
 3441              		.loc 1 798 11
 3442 001c 0023     		movs	r3, #0
 3443 001e 7B61     		str	r3, [r7, #20]
 3444              		.loc 1 798 2
 3445 0020 10E0     		b	.L301
 3446              	.L302:
 799:Src/utils.c   **** 	{
 800:Src/utils.c   **** 		*real += real_in[i];
 3447              		.loc 1 800 9 discriminator 3
 3448 0022 BB68     		ldr	r3, [r7, #8]
 3449 0024 93ED007A 		vldr.32	s14, [r3]
 3450              		.loc 1 800 19 discriminator 3
 3451 0028 7B69     		ldr	r3, [r7, #20]
 3452 002a 9B00     		lsls	r3, r3, #2
 3453 002c FA68     		ldr	r2, [r7, #12]
 3454 002e 1344     		add	r3, r3, r2
 3455 0030 D3ED007A 		vldr.32	s15, [r3]
 3456              		.loc 1 800 9 discriminator 3
 3457 0034 77EE277A 		vadd.f32	s15, s14, s15
 3458 0038 BB68     		ldr	r3, [r7, #8]
 3459 003a C3ED007A 		vstr.32	s15, [r3]
 798:Src/utils.c   **** 	{
 3460              		.loc 1 798 26 discriminator 3
 3461 003e 7B69     		ldr	r3, [r7, #20]
 3462 0040 0133     		adds	r3, r3, #1
 3463 0042 7B61     		str	r3, [r7, #20]
 3464              	.L301:
 798:Src/utils.c   **** 	{
 3465              		.loc 1 798 2 discriminator 1
 3466 0044 7B69     		ldr	r3, [r7, #20]
 3467 0046 072B     		cmp	r3, #7
 3468 0048 EBDD     		ble	.L302
 3469              	.LBE15:
 801:Src/utils.c   **** 	}
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 76


 802:Src/utils.c   **** 
 803:Src/utils.c   **** 	*real /= 8.0;
 3470              		.loc 1 803 8
 3471 004a BB68     		ldr	r3, [r7, #8]
 3472 004c 93ED007A 		vldr.32	s14, [r3]
 3473 0050 F2EE006A 		vmov.f32	s13, #8.0e+0
 3474 0054 C7EE267A 		vdiv.f32	s15, s14, s13
 3475 0058 BB68     		ldr	r3, [r7, #8]
 3476 005a C3ED007A 		vstr.32	s15, [r3]
 804:Src/utils.c   **** }
 3477              		.loc 1 804 1
 3478 005e 00BF     		nop
 3479 0060 1C37     		adds	r7, r7, #28
 3480              	.LCFI164:
 3481              		.cfi_def_cfa_offset 4
 3482 0062 BD46     		mov	sp, r7
 3483              	.LCFI165:
 3484              		.cfi_def_cfa_register 13
 3485              		@ sp needed
 3486 0064 5DF8047B 		ldr	r7, [sp], #4
 3487              	.LCFI166:
 3488              		.cfi_restore 7
 3489              		.cfi_def_cfa_offset 0
 3490 0068 7047     		bx	lr
 3491              		.cfi_endproc
 3492              	.LFE33:
 3494              		.section	.text.utils_second_motor_id,"ax",%progbits
 3495              		.align	1
 3496              		.global	utils_second_motor_id
 3497              		.syntax unified
 3498              		.thumb
 3499              		.thumb_func
 3500              		.fpu fpv4-sp-d16
 3502              	utils_second_motor_id:
 3503              	.LFB34:
 805:Src/utils.c   **** 
 806:Src/utils.c   **** /**
 807:Src/utils.c   ****  * Get ID of second motor.
 808:Src/utils.c   ****  *
 809:Src/utils.c   ****  * @return
 810:Src/utils.c   ****  * id for second motor. -1 if this hardware only has one motor.
 811:Src/utils.c   ****  */
 812:Src/utils.c   **** uint8_t utils_second_motor_id(void)
 813:Src/utils.c   **** {
 3504              		.loc 1 813 1
 3505              		.cfi_startproc
 3506              		@ args = 0, pretend = 0, frame = 0
 3507              		@ frame_needed = 1, uses_anonymous_args = 0
 3508              		@ link register save eliminated.
 3509 0000 80B4     		push	{r7}
 3510              	.LCFI167:
 3511              		.cfi_def_cfa_offset 4
 3512              		.cfi_offset 7, -4
 3513 0002 00AF     		add	r7, sp, #0
 3514              	.LCFI168:
 3515              		.cfi_def_cfa_register 7
 814:Src/utils.c   **** #ifdef HW_HAS_DUAL_MOTORS
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 77


 815:Src/utils.c   **** 	uint8_t id_next = app_get_configuration()->controller_id + 1;
 816:Src/utils.c   **** 	if (id_next == 255)
 817:Src/utils.c   **** 	{
 818:Src/utils.c   **** 		id_next = 0;
 819:Src/utils.c   **** 	}
 820:Src/utils.c   **** 	return id_next;
 821:Src/utils.c   **** #else
 822:Src/utils.c   **** 	return 0;
 3516              		.loc 1 822 9
 3517 0004 0023     		movs	r3, #0
 823:Src/utils.c   **** #endif
 824:Src/utils.c   **** }
 3518              		.loc 1 824 1
 3519 0006 1846     		mov	r0, r3
 3520 0008 BD46     		mov	sp, r7
 3521              	.LCFI169:
 3522              		.cfi_def_cfa_register 13
 3523              		@ sp needed
 3524 000a 5DF8047B 		ldr	r7, [sp], #4
 3525              	.LCFI170:
 3526              		.cfi_restore 7
 3527              		.cfi_def_cfa_offset 0
 3528 000e 7047     		bx	lr
 3529              		.cfi_endproc
 3530              	.LFE34:
 3532              		.section	.text.utils_batt_liion_norm_v_to_capacity,"ax",%progbits
 3533              		.align	1
 3534              		.global	utils_batt_liion_norm_v_to_capacity
 3535              		.syntax unified
 3536              		.thumb
 3537              		.thumb_func
 3538              		.fpu fpv4-sp-d16
 3540              	utils_batt_liion_norm_v_to_capacity:
 3541              	.LFB35:
 825:Src/utils.c   **** 
 826:Src/utils.c   **** // A mapping of a samsung 30q cell for % remaining capacity vs. voltage from
 827:Src/utils.c   **** // 4.2 to 3.2, note that the you lose 15% of the 3Ah rated capacity in this range
 828:Src/utils.c   **** float utils_batt_liion_norm_v_to_capacity(float norm_v)
 829:Src/utils.c   **** {
 3542              		.loc 1 829 1
 3543              		.cfi_startproc
 3544              		@ args = 0, pretend = 0, frame = 32
 3545              		@ frame_needed = 1, uses_anonymous_args = 0
 3546 0000 80B5     		push	{r7, lr}
 3547              	.LCFI171:
 3548              		.cfi_def_cfa_offset 8
 3549              		.cfi_offset 7, -8
 3550              		.cfi_offset 14, -4
 3551 0002 88B0     		sub	sp, sp, #32
 3552              	.LCFI172:
 3553              		.cfi_def_cfa_offset 40
 3554 0004 00AF     		add	r7, sp, #0
 3555              	.LCFI173:
 3556              		.cfi_def_cfa_register 7
 3557 0006 87ED010A 		vstr.32	s0, [r7, #4]
 830:Src/utils.c   **** 	// constants for polynomial fit of lithium ion battery
 831:Src/utils.c   **** 	const float li_p[] = {
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 78


 832:Src/utils.c   **** 		-2.979767, 5.487810, -3.501286, 1.675683, 0.317147};
 833:Src/utils.c   **** 	utils_truncate_number(&norm_v, 0.0, 1.0);
 3558              		.loc 1 833 2
 3559 000a 3B1D     		adds	r3, r7, #4
 3560 000c F7EE000A 		vmov.f32	s1, #1.0e+0
 3561 0010 9FED2C0A 		vldr.32	s0, .L307
 3562 0014 1846     		mov	r0, r3
 3563 0016 FFF7FEFF 		bl	utils_truncate_number
 834:Src/utils.c   **** 	float v2 = norm_v * norm_v;
 3564              		.loc 1 834 20
 3565 001a 97ED017A 		vldr.32	s14, [r7, #4]
 3566 001e D7ED017A 		vldr.32	s15, [r7, #4]
 3567              		.loc 1 834 8
 3568 0022 67EE277A 		vmul.f32	s15, s14, s15
 3569 0026 C7ED077A 		vstr.32	s15, [r7, #28]
 835:Src/utils.c   **** 	float v3 = v2 * norm_v;
 3570              		.loc 1 835 16
 3571 002a D7ED017A 		vldr.32	s15, [r7, #4]
 3572              		.loc 1 835 8
 3573 002e 97ED077A 		vldr.32	s14, [r7, #28]
 3574 0032 67EE277A 		vmul.f32	s15, s14, s15
 3575 0036 C7ED067A 		vstr.32	s15, [r7, #24]
 836:Src/utils.c   **** 	float v4 = v3 * norm_v;
 3576              		.loc 1 836 16
 3577 003a D7ED017A 		vldr.32	s15, [r7, #4]
 3578              		.loc 1 836 8
 3579 003e 97ED067A 		vldr.32	s14, [r7, #24]
 3580 0042 67EE277A 		vmul.f32	s15, s14, s15
 3581 0046 C7ED057A 		vstr.32	s15, [r7, #20]
 837:Src/utils.c   **** 	float v5 = v4 * norm_v;
 3582              		.loc 1 837 16
 3583 004a D7ED017A 		vldr.32	s15, [r7, #4]
 3584              		.loc 1 837 8
 3585 004e 97ED057A 		vldr.32	s14, [r7, #20]
 3586 0052 67EE277A 		vmul.f32	s15, s14, s15
 3587 0056 C7ED047A 		vstr.32	s15, [r7, #16]
 838:Src/utils.c   **** 	float capacity = li_p[0] * v5 + li_p[1] * v4 + li_p[2] * v3 +
 3588              		.loc 1 838 23
 3589 005a 1B4B     		ldr	r3, .L307+4
 3590 005c 93ED007A 		vldr.32	s14, [r3]
 3591              		.loc 1 838 27
 3592 0060 D7ED047A 		vldr.32	s15, [r7, #16]
 3593 0064 27EE277A 		vmul.f32	s14, s14, s15
 3594              		.loc 1 838 38
 3595 0068 174B     		ldr	r3, .L307+4
 3596 006a D3ED016A 		vldr.32	s13, [r3, #4]
 3597              		.loc 1 838 42
 3598 006e D7ED057A 		vldr.32	s15, [r7, #20]
 3599 0072 66EEA77A 		vmul.f32	s15, s13, s15
 3600              		.loc 1 838 32
 3601 0076 37EE277A 		vadd.f32	s14, s14, s15
 3602              		.loc 1 838 53
 3603 007a 134B     		ldr	r3, .L307+4
 3604 007c D3ED026A 		vldr.32	s13, [r3, #8]
 3605              		.loc 1 838 57
 3606 0080 D7ED067A 		vldr.32	s15, [r7, #24]
 3607 0084 66EEA77A 		vmul.f32	s15, s13, s15
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 79


 3608              		.loc 1 838 47
 3609 0088 37EE277A 		vadd.f32	s14, s14, s15
 839:Src/utils.c   **** 					 li_p[3] * v2 + li_p[4] * norm_v;
 3610              		.loc 1 839 11
 3611 008c 0E4B     		ldr	r3, .L307+4
 3612 008e D3ED036A 		vldr.32	s13, [r3, #12]
 3613              		.loc 1 839 15
 3614 0092 D7ED077A 		vldr.32	s15, [r7, #28]
 3615 0096 66EEA77A 		vmul.f32	s15, s13, s15
 838:Src/utils.c   **** 	float capacity = li_p[0] * v5 + li_p[1] * v4 + li_p[2] * v3 +
 3616              		.loc 1 838 62
 3617 009a 37EE277A 		vadd.f32	s14, s14, s15
 3618              		.loc 1 839 26
 3619 009e 0A4B     		ldr	r3, .L307+4
 3620 00a0 D3ED046A 		vldr.32	s13, [r3, #16]
 3621              		.loc 1 839 30
 3622 00a4 D7ED017A 		vldr.32	s15, [r7, #4]
 3623 00a8 66EEA77A 		vmul.f32	s15, s13, s15
 838:Src/utils.c   **** 	float capacity = li_p[0] * v5 + li_p[1] * v4 + li_p[2] * v3 +
 3624              		.loc 1 838 8
 3625 00ac 77EE277A 		vadd.f32	s15, s14, s15
 3626 00b0 C7ED037A 		vstr.32	s15, [r7, #12]
 840:Src/utils.c   **** 	return capacity;
 3627              		.loc 1 840 9
 3628 00b4 FB68     		ldr	r3, [r7, #12]	@ float
 3629 00b6 07EE903A 		vmov	s15, r3
 841:Src/utils.c   **** }
 3630              		.loc 1 841 1
 3631 00ba B0EE670A 		vmov.f32	s0, s15
 3632 00be 2037     		adds	r7, r7, #32
 3633              	.LCFI174:
 3634              		.cfi_def_cfa_offset 8
 3635 00c0 BD46     		mov	sp, r7
 3636              	.LCFI175:
 3637              		.cfi_def_cfa_register 13
 3638              		@ sp needed
 3639 00c2 80BD     		pop	{r7, pc}
 3640              	.L308:
 3641              		.align	2
 3642              	.L307:
 3643 00c4 00000000 		.word	0
 3644 00c8 00000000 		.word	li_p.7246
 3645              		.cfi_endproc
 3646              	.LFE35:
 3648              		.section	.text.uint16_cmp_func,"ax",%progbits
 3649              		.align	1
 3650              		.syntax unified
 3651              		.thumb
 3652              		.thumb_func
 3653              		.fpu fpv4-sp-d16
 3655              	uint16_cmp_func:
 3656              	.LFB36:
 842:Src/utils.c   **** 
 843:Src/utils.c   **** static int uint16_cmp_func(const void *a, const void *b)
 844:Src/utils.c   **** {
 3657              		.loc 1 844 1
 3658              		.cfi_startproc
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 80


 3659              		@ args = 0, pretend = 0, frame = 8
 3660              		@ frame_needed = 1, uses_anonymous_args = 0
 3661              		@ link register save eliminated.
 3662 0000 80B4     		push	{r7}
 3663              	.LCFI176:
 3664              		.cfi_def_cfa_offset 4
 3665              		.cfi_offset 7, -4
 3666 0002 83B0     		sub	sp, sp, #12
 3667              	.LCFI177:
 3668              		.cfi_def_cfa_offset 16
 3669 0004 00AF     		add	r7, sp, #0
 3670              	.LCFI178:
 3671              		.cfi_def_cfa_register 7
 3672 0006 7860     		str	r0, [r7, #4]
 3673 0008 3960     		str	r1, [r7]
 845:Src/utils.c   **** 	return (*(uint16_t *)a - *(uint16_t *)b);
 3674              		.loc 1 845 10
 3675 000a 7B68     		ldr	r3, [r7, #4]
 3676 000c 1B88     		ldrh	r3, [r3]
 3677 000e 1A46     		mov	r2, r3
 3678              		.loc 1 845 27
 3679 0010 3B68     		ldr	r3, [r7]
 3680 0012 1B88     		ldrh	r3, [r3]
 3681              		.loc 1 845 25
 3682 0014 D31A     		subs	r3, r2, r3
 846:Src/utils.c   **** }
 3683              		.loc 1 846 1
 3684 0016 1846     		mov	r0, r3
 3685 0018 0C37     		adds	r7, r7, #12
 3686              	.LCFI179:
 3687              		.cfi_def_cfa_offset 4
 3688 001a BD46     		mov	sp, r7
 3689              	.LCFI180:
 3690              		.cfi_def_cfa_register 13
 3691              		@ sp needed
 3692 001c 5DF8047B 		ldr	r7, [sp], #4
 3693              	.LCFI181:
 3694              		.cfi_restore 7
 3695              		.cfi_def_cfa_offset 0
 3696 0020 7047     		bx	lr
 3697              		.cfi_endproc
 3698              	.LFE36:
 3700              		.section	.text.utils_median_filter_uint16_run,"ax",%progbits
 3701              		.align	1
 3702              		.global	utils_median_filter_uint16_run
 3703              		.syntax unified
 3704              		.thumb
 3705              		.thumb_func
 3706              		.fpu fpv4-sp-d16
 3708              	utils_median_filter_uint16_run:
 3709              	.LFB37:
 847:Src/utils.c   **** 
 848:Src/utils.c   **** uint16_t utils_median_filter_uint16_run(uint16_t *buffer,
 849:Src/utils.c   **** 										unsigned int *buffer_index, unsigned int filter_len, uint16_t sample)
 850:Src/utils.c   **** {
 3710              		.loc 1 850 1
 3711              		.cfi_startproc
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 81


 3712              		@ args = 0, pretend = 0, frame = 24
 3713              		@ frame_needed = 1, uses_anonymous_args = 0
 3714 0000 B0B5     		push	{r4, r5, r7, lr}
 3715              	.LCFI182:
 3716              		.cfi_def_cfa_offset 16
 3717              		.cfi_offset 4, -16
 3718              		.cfi_offset 5, -12
 3719              		.cfi_offset 7, -8
 3720              		.cfi_offset 14, -4
 3721 0002 86B0     		sub	sp, sp, #24
 3722              	.LCFI183:
 3723              		.cfi_def_cfa_offset 40
 3724 0004 00AF     		add	r7, sp, #0
 3725              	.LCFI184:
 3726              		.cfi_def_cfa_register 7
 3727 0006 F860     		str	r0, [r7, #12]
 3728 0008 B960     		str	r1, [r7, #8]
 3729 000a 7A60     		str	r2, [r7, #4]
 3730 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 3731              		.loc 1 850 1
 3732 000e 6B46     		mov	r3, sp
 3733 0010 1D46     		mov	r5, r3
 851:Src/utils.c   **** 	buffer[*buffer_index++] = sample;
 3734              		.loc 1 851 22
 3735 0012 BB68     		ldr	r3, [r7, #8]
 3736 0014 1A1D     		adds	r2, r3, #4
 3737 0016 BA60     		str	r2, [r7, #8]
 3738              		.loc 1 851 9
 3739 0018 1B68     		ldr	r3, [r3]
 3740              		.loc 1 851 8
 3741 001a 5B00     		lsls	r3, r3, #1
 3742 001c FA68     		ldr	r2, [r7, #12]
 3743 001e 1344     		add	r3, r3, r2
 3744              		.loc 1 851 26
 3745 0020 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3746 0022 1A80     		strh	r2, [r3]	@ movhi
 852:Src/utils.c   **** 	*buffer_index %= filter_len;
 3747              		.loc 1 852 16
 3748 0024 BB68     		ldr	r3, [r7, #8]
 3749 0026 1B68     		ldr	r3, [r3]
 3750 0028 7A68     		ldr	r2, [r7, #4]
 3751 002a B3FBF2F2 		udiv	r2, r3, r2
 3752 002e 7968     		ldr	r1, [r7, #4]
 3753 0030 01FB02F2 		mul	r2, r1, r2
 3754 0034 9A1A     		subs	r2, r3, r2
 3755 0036 BB68     		ldr	r3, [r7, #8]
 3756 0038 1A60     		str	r2, [r3]
 853:Src/utils.c   **** 	uint16_t buffer_sorted[filter_len]; // Assume we have enough stack space
 3757              		.loc 1 853 2
 3758 003a 7868     		ldr	r0, [r7, #4]
 3759              		.loc 1 853 11
 3760 003c 0346     		mov	r3, r0
 3761 003e 013B     		subs	r3, r3, #1
 3762 0040 7B61     		str	r3, [r7, #20]
 3763 0042 0146     		mov	r1, r0
 3764 0044 4FF00002 		mov	r2, #0
 3765 0048 4FF00003 		mov	r3, #0
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 82


 3766 004c 4FF00004 		mov	r4, #0
 3767 0050 1401     		lsls	r4, r2, #4
 3768 0052 44EA1174 		orr	r4, r4, r1, lsr #28
 3769 0056 0B01     		lsls	r3, r1, #4
 3770 0058 0146     		mov	r1, r0
 3771 005a 4FF00002 		mov	r2, #0
 3772 005e 4FF00003 		mov	r3, #0
 3773 0062 4FF00004 		mov	r4, #0
 3774 0066 1401     		lsls	r4, r2, #4
 3775 0068 44EA1174 		orr	r4, r4, r1, lsr #28
 3776 006c 0B01     		lsls	r3, r1, #4
 3777 006e 4300     		lsls	r3, r0, #1
 3778 0070 0733     		adds	r3, r3, #7
 3779 0072 DB08     		lsrs	r3, r3, #3
 3780 0074 DB00     		lsls	r3, r3, #3
 3781 0076 ADEB030D 		sub	sp, sp, r3
 3782 007a 6B46     		mov	r3, sp
 3783 007c 0133     		adds	r3, r3, #1
 3784 007e 5B08     		lsrs	r3, r3, #1
 3785 0080 5B00     		lsls	r3, r3, #1
 3786 0082 3B61     		str	r3, [r7, #16]
 854:Src/utils.c   **** 	memcpy(buffer_sorted, buffer, sizeof(uint16_t) * filter_len);
 3787              		.loc 1 854 2
 3788 0084 3869     		ldr	r0, [r7, #16]
 3789 0086 7B68     		ldr	r3, [r7, #4]
 3790 0088 5B00     		lsls	r3, r3, #1
 3791 008a 1A46     		mov	r2, r3
 3792 008c F968     		ldr	r1, [r7, #12]
 3793 008e FFF7FEFF 		bl	memcpy
 855:Src/utils.c   **** 	qsort(buffer_sorted, filter_len, sizeof(uint16_t), uint16_cmp_func);
 3794              		.loc 1 855 2
 3795 0092 3869     		ldr	r0, [r7, #16]
 3796 0094 074B     		ldr	r3, .L313
 3797 0096 0222     		movs	r2, #2
 3798 0098 7968     		ldr	r1, [r7, #4]
 3799 009a FFF7FEFF 		bl	qsort
 856:Src/utils.c   **** 	return buffer_sorted[filter_len / 2];
 3800              		.loc 1 856 34
 3801 009e 7B68     		ldr	r3, [r7, #4]
 3802 00a0 5A08     		lsrs	r2, r3, #1
 3803              		.loc 1 856 22
 3804 00a2 3B69     		ldr	r3, [r7, #16]
 3805 00a4 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3806 00a8 AD46     		mov	sp, r5
 857:Src/utils.c   **** }
 3807              		.loc 1 857 1
 3808 00aa 1846     		mov	r0, r3
 3809 00ac 1837     		adds	r7, r7, #24
 3810              	.LCFI185:
 3811              		.cfi_def_cfa_offset 16
 3812 00ae BD46     		mov	sp, r7
 3813              	.LCFI186:
 3814              		.cfi_def_cfa_register 13
 3815              		@ sp needed
 3816 00b0 B0BD     		pop	{r4, r5, r7, pc}
 3817              	.L314:
 3818 00b2 00BF     		.align	2
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 83


 3819              	.L313:
 3820 00b4 00000000 		.word	uint16_cmp_func
 3821              		.cfi_endproc
 3822              	.LFE37:
 3824              		.global	utils_tab_sin_32_1
 3825              		.section	.rodata.utils_tab_sin_32_1,"a"
 3826              		.align	2
 3829              	utils_tab_sin_32_1:
 3830 0000 00000000 		.word	0
 3831 0004 ACC5473E 		.word	1044891052
 3832 0008 07EFC33E 		.word	1053028103
 3833 000c D6390E3F 		.word	1057896918
 3834 0010 F704353F 		.word	1060439287
 3835 0014 38DB543F 		.word	1062525752
 3836 0018 66836C3F 		.word	1064076134
 3837 001c BA147B3F 		.word	1065030842
 3838 0020 0000803F 		.word	1065353216
 3839 0024 BA147B3F 		.word	1065030842
 3840 0028 66836C3F 		.word	1064076134
 3841 002c 38DB543F 		.word	1062525752
 3842 0030 F704353F 		.word	1060439287
 3843 0034 D6390E3F 		.word	1057896918
 3844 0038 07EFC33E 		.word	1053028103
 3845 003c ACC5473E 		.word	1044891052
 3846 0040 00000000 		.word	0
 3847 0044 ACC547BE 		.word	-1102592596
 3848 0048 07EFC3BE 		.word	-1094455545
 3849 004c D6390EBF 		.word	-1089586730
 3850 0050 F70435BF 		.word	-1087044361
 3851 0054 38DB54BF 		.word	-1084957896
 3852 0058 66836CBF 		.word	-1083407514
 3853 005c BA147BBF 		.word	-1082452806
 3854 0060 000080BF 		.word	-1082130432
 3855 0064 BA147BBF 		.word	-1082452806
 3856 0068 66836CBF 		.word	-1083407514
 3857 006c 38DB54BF 		.word	-1084957896
 3858 0070 F70435BF 		.word	-1087044361
 3859 0074 D6390EBF 		.word	-1089586730
 3860 0078 07EFC3BE 		.word	-1094455545
 3861 007c ACC547BE 		.word	-1102592596
 3862              		.global	utils_tab_sin_32_2
 3863              		.section	.rodata.utils_tab_sin_32_2,"a"
 3864              		.align	2
 3867              	utils_tab_sin_32_2:
 3868 0000 00000000 		.word	0
 3869 0004 07EFC33E 		.word	1053028103
 3870 0008 F704353F 		.word	1060439287
 3871 000c 66836C3F 		.word	1064076134
 3872 0010 0000803F 		.word	1065353216
 3873 0014 66836C3F 		.word	1064076134
 3874 0018 F704353F 		.word	1060439287
 3875 001c 07EFC33E 		.word	1053028103
 3876 0020 00000000 		.word	0
 3877 0024 07EFC3BE 		.word	-1094455545
 3878 0028 F70435BF 		.word	-1087044361
 3879 002c 66836CBF 		.word	-1083407514
 3880 0030 000080BF 		.word	-1082130432
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 84


 3881 0034 66836CBF 		.word	-1083407514
 3882 0038 F70435BF 		.word	-1087044361
 3883 003c 07EFC3BE 		.word	-1094455545
 3884 0040 00000080 		.word	-2147483648
 3885 0044 07EFC33E 		.word	1053028103
 3886 0048 F704353F 		.word	1060439287
 3887 004c 66836C3F 		.word	1064076134
 3888 0050 0000803F 		.word	1065353216
 3889 0054 66836C3F 		.word	1064076134
 3890 0058 F704353F 		.word	1060439287
 3891 005c 07EFC33E 		.word	1053028103
 3892 0060 00000000 		.word	0
 3893 0064 07EFC3BE 		.word	-1094455545
 3894 0068 F70435BF 		.word	-1087044361
 3895 006c 66836CBF 		.word	-1083407514
 3896 0070 000080BF 		.word	-1082130432
 3897 0074 66836CBF 		.word	-1083407514
 3898 0078 F70435BF 		.word	-1087044361
 3899 007c 07EFC3BE 		.word	-1094455545
 3900              		.global	utils_tab_cos_32_1
 3901              		.section	.rodata.utils_tab_cos_32_1,"a"
 3902              		.align	2
 3905              	utils_tab_cos_32_1:
 3906 0000 0000803F 		.word	1065353216
 3907 0004 BA147B3F 		.word	1065030842
 3908 0008 66836C3F 		.word	1064076134
 3909 000c 38DB543F 		.word	1062525752
 3910 0010 F704353F 		.word	1060439287
 3911 0014 D6390E3F 		.word	1057896918
 3912 0018 07EFC33E 		.word	1053028103
 3913 001c ACC5473E 		.word	1044891052
 3914 0020 00000000 		.word	0
 3915 0024 ACC547BE 		.word	-1102592596
 3916 0028 07EFC3BE 		.word	-1094455545
 3917 002c D6390EBF 		.word	-1089586730
 3918 0030 F70435BF 		.word	-1087044361
 3919 0034 38DB54BF 		.word	-1084957896
 3920 0038 66836CBF 		.word	-1083407514
 3921 003c BA147BBF 		.word	-1082452806
 3922 0040 000080BF 		.word	-1082130432
 3923 0044 BA147BBF 		.word	-1082452806
 3924 0048 66836CBF 		.word	-1083407514
 3925 004c 38DB54BF 		.word	-1084957896
 3926 0050 F70435BF 		.word	-1087044361
 3927 0054 D6390EBF 		.word	-1089586730
 3928 0058 07EFC3BE 		.word	-1094455545
 3929 005c ACC547BE 		.word	-1102592596
 3930 0060 00000080 		.word	-2147483648
 3931 0064 ACC5473E 		.word	1044891052
 3932 0068 07EFC33E 		.word	1053028103
 3933 006c D6390E3F 		.word	1057896918
 3934 0070 F704353F 		.word	1060439287
 3935 0074 38DB543F 		.word	1062525752
 3936 0078 66836C3F 		.word	1064076134
 3937 007c BA147B3F 		.word	1065030842
 3938              		.global	utils_tab_cos_32_2
 3939              		.section	.rodata.utils_tab_cos_32_2,"a"
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 85


 3940              		.align	2
 3943              	utils_tab_cos_32_2:
 3944 0000 0000803F 		.word	1065353216
 3945 0004 66836C3F 		.word	1064076134
 3946 0008 F704353F 		.word	1060439287
 3947 000c 07EFC33E 		.word	1053028103
 3948 0010 00000000 		.word	0
 3949 0014 07EFC3BE 		.word	-1094455545
 3950 0018 F70435BF 		.word	-1087044361
 3951 001c 66836CBF 		.word	-1083407514
 3952 0020 000080BF 		.word	-1082130432
 3953 0024 66836CBF 		.word	-1083407514
 3954 0028 F70435BF 		.word	-1087044361
 3955 002c 07EFC3BE 		.word	-1094455545
 3956 0030 00000080 		.word	-2147483648
 3957 0034 07EFC33E 		.word	1053028103
 3958 0038 F704353F 		.word	1060439287
 3959 003c 66836C3F 		.word	1064076134
 3960 0040 0000803F 		.word	1065353216
 3961 0044 66836C3F 		.word	1064076134
 3962 0048 F704353F 		.word	1060439287
 3963 004c 07EFC33E 		.word	1053028103
 3964 0050 00000000 		.word	0
 3965 0054 07EFC3BE 		.word	-1094455545
 3966 0058 F70435BF 		.word	-1087044361
 3967 005c 66836CBF 		.word	-1083407514
 3968 0060 000080BF 		.word	-1082130432
 3969 0064 66836CBF 		.word	-1083407514
 3970 0068 F70435BF 		.word	-1087044361
 3971 006c 07EFC3BE 		.word	-1094455545
 3972 0070 00000080 		.word	-2147483648
 3973 0074 07EFC33E 		.word	1053028103
 3974 0078 F704353F 		.word	1060439287
 3975 007c 66836C3F 		.word	1064076134
 3976              		.section	.rodata.li_p.7246,"a"
 3977              		.align	2
 3980              	li_p.7246:
 3981 0000 81B43EC0 		.word	-1069632383
 3982 0004 249CAF40 		.word	1085250596
 3983 0008 121560C0 		.word	-1067444974
 3984 000c C87CD63F 		.word	1071021256
 3985 0010 1761A23E 		.word	1050829079
 3986              		.text
 3987              	.Letext0:
 3988              		.file 2 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 3989              		.file 3 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 3990              		.file 4 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 3991              		.file 5 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 3992              		.file 6 "d:\\apps\\embedded_gcc\\arm_gcc\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 3993              		.file 7 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 3994              		.file 8 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\math.h"
 3995              		.file 9 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\stdlib.h"
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 86


DEFINED SYMBOLS
                            *ABS*:0000000000000000 utils.c
D:\apps\VSCode\data\tmp\cciTaQJe.s:18     .bss.sys_lock_cnt:0000000000000000 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:21     .bss.sys_lock_cnt:0000000000000000 sys_lock_cnt
D:\apps\VSCode\data\tmp\cciTaQJe.s:24     .text.utils_step_towards:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:32     .text.utils_step_towards:0000000000000000 utils_step_towards
D:\apps\VSCode\data\tmp\cciTaQJe.s:144    .text.utils_calc_ratio:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:151    .text.utils_calc_ratio:0000000000000000 utils_calc_ratio
D:\apps\VSCode\data\tmp\cciTaQJe.s:200    .text.utils_norm_angle:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:207    .text.utils_norm_angle:0000000000000000 utils_norm_angle
D:\apps\VSCode\data\tmp\cciTaQJe.s:266    .text.utils_norm_angle:0000000000000054 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:271    .text.utils_norm_angle_rad:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:278    .text.utils_norm_angle_rad:0000000000000000 utils_norm_angle_rad
D:\apps\VSCode\data\tmp\cciTaQJe.s:351    .text.utils_norm_angle_rad:0000000000000068 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:359    .text.utils_truncate_number:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:366    .text.utils_truncate_number:0000000000000000 utils_truncate_number
D:\apps\VSCode\data\tmp\cciTaQJe.s:442    .text.utils_truncate_number_int:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:449    .text.utils_truncate_number_int:0000000000000000 utils_truncate_number_int
D:\apps\VSCode\data\tmp\cciTaQJe.s:523    .text.utils_truncate_number_abs:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:530    .text.utils_truncate_number_abs:0000000000000000 utils_truncate_number_abs
D:\apps\VSCode\data\tmp\cciTaQJe.s:609    .text.utils_map:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:616    .text.utils_map:0000000000000000 utils_map
D:\apps\VSCode\data\tmp\cciTaQJe.s:675    .text.utils_map_int:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:682    .text.utils_map_int:0000000000000000 utils_map_int
D:\apps\VSCode\data\tmp\cciTaQJe.s:745    .text.utils_deadband:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:752    .text.utils_deadband:0000000000000000 utils_deadband
D:\apps\VSCode\data\tmp\cciTaQJe.s:935    .text.utils_deadband:000000000000013c $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:940    .text.utils_angle_difference:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:947    .text.utils_angle_difference:0000000000000000 utils_angle_difference
D:\apps\VSCode\data\tmp\cciTaQJe.s:1021   .text.utils_angle_difference:000000000000007c $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:1028   .text.utils_angle_difference_rad:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:1035   .text.utils_angle_difference_rad:0000000000000000 utils_angle_difference_rad
D:\apps\VSCode\data\tmp\cciTaQJe.s:1109   .text.utils_angle_difference_rad:000000000000007c $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:1116   .text.utils_avg_angles_rad_fast:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:1123   .text.utils_avg_angles_rad_fast:0000000000000000 utils_avg_angles_rad_fast
D:\apps\VSCode\data\tmp\cciTaQJe.s:2045   .text.utSin:0000000000000000 utSin
D:\apps\VSCode\data\tmp\cciTaQJe.s:2240   .text.utCos:0000000000000000 utCos
D:\apps\VSCode\data\tmp\cciTaQJe.s:1541   .text.utils_fast_atan2:0000000000000000 utils_fast_atan2
D:\apps\VSCode\data\tmp\cciTaQJe.s:1234   .text.utils_middle_of_3:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:1241   .text.utils_middle_of_3:0000000000000000 utils_middle_of_3
D:\apps\VSCode\data\tmp\cciTaQJe.s:1356   .text.utils_middle_of_3_int:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:1363   .text.utils_middle_of_3_int:0000000000000000 utils_middle_of_3_int
D:\apps\VSCode\data\tmp\cciTaQJe.s:1449   .text.utils_fast_inv_sqrt:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:1456   .text.utils_fast_inv_sqrt:0000000000000000 utils_fast_inv_sqrt
D:\apps\VSCode\data\tmp\cciTaQJe.s:1529   .text.utils_fast_inv_sqrt:0000000000000064 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:1534   .text.utils_fast_atan2:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:1669   .text.utils_fast_atan2:000000000000010c $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:1678   .text.utils_saturate_vector_2d:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:1685   .text.utils_saturate_vector_2d:0000000000000000 utils_saturate_vector_2d
D:\apps\VSCode\data\tmp\cciTaQJe.s:1785   .text.utils_saturate_vector_2d:00000000000000bc $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:1793   .text.utils_fast_sincos:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:1800   .text.utils_fast_sincos:0000000000000000 utils_fast_sincos
D:\apps\VSCode\data\tmp\cciTaQJe.s:2024   .text.utils_fast_sincos:00000000000001a8 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:2038   .text.utSin:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:2223   .text.utSin:0000000000000190 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:2233   .text.utCos:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:2435   .text.utCos:00000000000001c0 $d
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 87


D:\apps\VSCode\data\tmp\cciTaQJe.s:2446   .text.utils_min_abs:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:2453   .text.utils_min_abs:0000000000000000 utils_min_abs
D:\apps\VSCode\data\tmp\cciTaQJe.s:2512   .text.utils_max_abs:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:2519   .text.utils_max_abs:0000000000000000 utils_max_abs
D:\apps\VSCode\data\tmp\cciTaQJe.s:2578   .rodata:0000000000000000 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:2585   .text.utils_byte_to_binary:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:2592   .text.utils_byte_to_binary:0000000000000000 utils_byte_to_binary
D:\apps\VSCode\data\tmp\cciTaQJe.s:2662   .text.utils_byte_to_binary:0000000000000044 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:2669   .text.utils_throttle_curve:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:2676   .text.utils_throttle_curve:0000000000000000 utils_throttle_curve
D:\apps\VSCode\data\tmp\cciTaQJe.s:3092   .text.utils_throttle_curve:0000000000000348 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3100   .text.utils_crc32c:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:3107   .text.utils_crc32c:0000000000000000 utils_crc32c
D:\apps\VSCode\data\tmp\cciTaQJe.s:3216   .text.utils_crc32c:0000000000000070 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3221   .text.utils_fft32_bin0:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:3228   .text.utils_fft32_bin0:0000000000000000 utils_fft32_bin0
D:\apps\VSCode\data\tmp\cciTaQJe.s:3310   .text.utils_fft32_bin0:000000000000006c $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3315   .text.utils_fft16_bin0:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:3322   .text.utils_fft16_bin0:0000000000000000 utils_fft16_bin0
D:\apps\VSCode\data\tmp\cciTaQJe.s:3405   .text.utils_fft8_bin0:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:3412   .text.utils_fft8_bin0:0000000000000000 utils_fft8_bin0
D:\apps\VSCode\data\tmp\cciTaQJe.s:3495   .text.utils_second_motor_id:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:3502   .text.utils_second_motor_id:0000000000000000 utils_second_motor_id
D:\apps\VSCode\data\tmp\cciTaQJe.s:3533   .text.utils_batt_liion_norm_v_to_capacity:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:3540   .text.utils_batt_liion_norm_v_to_capacity:0000000000000000 utils_batt_liion_norm_v_to_capacity
D:\apps\VSCode\data\tmp\cciTaQJe.s:3643   .text.utils_batt_liion_norm_v_to_capacity:00000000000000c4 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3980   .rodata.li_p.7246:0000000000000000 li_p.7246
D:\apps\VSCode\data\tmp\cciTaQJe.s:3649   .text.uint16_cmp_func:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:3655   .text.uint16_cmp_func:0000000000000000 uint16_cmp_func
D:\apps\VSCode\data\tmp\cciTaQJe.s:3701   .text.utils_median_filter_uint16_run:0000000000000000 $t
D:\apps\VSCode\data\tmp\cciTaQJe.s:3708   .text.utils_median_filter_uint16_run:0000000000000000 utils_median_filter_uint16_run
D:\apps\VSCode\data\tmp\cciTaQJe.s:3820   .text.utils_median_filter_uint16_run:00000000000000b4 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3829   .rodata.utils_tab_sin_32_1:0000000000000000 utils_tab_sin_32_1
D:\apps\VSCode\data\tmp\cciTaQJe.s:3826   .rodata.utils_tab_sin_32_1:0000000000000000 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3867   .rodata.utils_tab_sin_32_2:0000000000000000 utils_tab_sin_32_2
D:\apps\VSCode\data\tmp\cciTaQJe.s:3864   .rodata.utils_tab_sin_32_2:0000000000000000 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3905   .rodata.utils_tab_cos_32_1:0000000000000000 utils_tab_cos_32_1
D:\apps\VSCode\data\tmp\cciTaQJe.s:3902   .rodata.utils_tab_cos_32_1:0000000000000000 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3943   .rodata.utils_tab_cos_32_2:0000000000000000 utils_tab_cos_32_2
D:\apps\VSCode\data\tmp\cciTaQJe.s:3940   .rodata.utils_tab_cos_32_2:0000000000000000 $d
D:\apps\VSCode\data\tmp\cciTaQJe.s:3977   .rodata.li_p.7246:0000000000000000 $d

UNDEFINED SYMBOLS
fmodf
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
sqrtf
__aeabi_dcmplt
__aeabi_dcmpgt
strcat
__aeabi_ddiv
powf
expf
memcpy
ARM GAS  D:\apps\VSCode\data\tmp\cciTaQJe.s 			page 88


qsort
