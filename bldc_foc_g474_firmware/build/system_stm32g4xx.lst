ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32g4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemInit:
  27              	.LFB130:
  28              		.file 1 "Src/system_stm32g4xx.c"
   1:Src/system_stm32g4xx.c **** /**
   2:Src/system_stm32g4xx.c ****   ******************************************************************************
   3:Src/system_stm32g4xx.c ****   * @file    system_stm32g4xx.c
   4:Src/system_stm32g4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32g4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Src/system_stm32g4xx.c ****   *
   7:Src/system_stm32g4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32g4xx.c ****   *   user application:
   9:Src/system_stm32g4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32g4xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32g4xx.c ****   *                      the "startup_stm32g4xx.s" file.
  12:Src/system_stm32g4xx.c ****   *
  13:Src/system_stm32g4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32g4xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32g4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32g4xx.c ****   *
  17:Src/system_stm32g4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32g4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32g4xx.c ****   *                                 during program execution.
  20:Src/system_stm32g4xx.c ****   *
  21:Src/system_stm32g4xx.c ****   *   After each device reset the HSI (16 MHz) is used as system clock source.
  22:Src/system_stm32g4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32g4xx.s" file, to
  23:Src/system_stm32g4xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32g4xx.c ****   *
  25:Src/system_stm32g4xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32g4xx.c ****   *=============================================================================
  27:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32g4xx.c ****   *        System Clock source                    | HSI
  29:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  30:Src/system_stm32g4xx.c ****   *        SYSCLK(Hz)                             | 16000000
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 2


  31:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  32:Src/system_stm32g4xx.c ****   *        HCLK(Hz)                               | 16000000
  33:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  34:Src/system_stm32g4xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32g4xx.c ****   *        APB1 Prescaler                         | 1
  37:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32g4xx.c ****   *        APB2 Prescaler                         | 1
  39:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32g4xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32g4xx.c ****   *        PLL_N                                  | 16
  43:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32g4xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32g4xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32g4xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32g4xx.c ****   *        Require 48MHz for RNG                  | Disabled
  51:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32g4xx.c ****   *=============================================================================
  53:Src/system_stm32g4xx.c ****   ******************************************************************************
  54:Src/system_stm32g4xx.c ****   * @attention
  55:Src/system_stm32g4xx.c ****   *
  56:Src/system_stm32g4xx.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  57:Src/system_stm32g4xx.c ****   * All rights reserved.</center></h2>
  58:Src/system_stm32g4xx.c ****   *
  59:Src/system_stm32g4xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  60:Src/system_stm32g4xx.c ****   * the "License"; You may not use this file except in compliance with the
  61:Src/system_stm32g4xx.c ****   * License. You may obtain a copy of the License at:
  62:Src/system_stm32g4xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  63:Src/system_stm32g4xx.c ****   *
  64:Src/system_stm32g4xx.c ****   ******************************************************************************
  65:Src/system_stm32g4xx.c ****   */
  66:Src/system_stm32g4xx.c **** 
  67:Src/system_stm32g4xx.c **** /** @addtogroup CMSIS
  68:Src/system_stm32g4xx.c ****   * @{
  69:Src/system_stm32g4xx.c ****   */
  70:Src/system_stm32g4xx.c **** 
  71:Src/system_stm32g4xx.c **** /** @addtogroup stm32g4xx_system
  72:Src/system_stm32g4xx.c ****   * @{
  73:Src/system_stm32g4xx.c ****   */
  74:Src/system_stm32g4xx.c **** 
  75:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Includes
  76:Src/system_stm32g4xx.c ****   * @{
  77:Src/system_stm32g4xx.c ****   */
  78:Src/system_stm32g4xx.c **** 
  79:Src/system_stm32g4xx.c **** #include "stm32g4xx.h"
  80:Src/system_stm32g4xx.c **** 
  81:Src/system_stm32g4xx.c **** #if !defined  (HSE_VALUE)
  82:Src/system_stm32g4xx.c ****   #define HSE_VALUE     10000000U /*!< Value of the External oscillator in Hz */
  83:Src/system_stm32g4xx.c **** #endif /* HSE_VALUE */
  84:Src/system_stm32g4xx.c **** 
  85:Src/system_stm32g4xx.c **** #if !defined  (HSI_VALUE)
  86:Src/system_stm32g4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
  87:Src/system_stm32g4xx.c **** #endif /* HSI_VALUE */
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 3


  88:Src/system_stm32g4xx.c **** /**
  89:Src/system_stm32g4xx.c ****   * @}
  90:Src/system_stm32g4xx.c ****   */
  91:Src/system_stm32g4xx.c **** 
  92:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_TypesDefinitions
  93:Src/system_stm32g4xx.c ****   * @{
  94:Src/system_stm32g4xx.c ****   */
  95:Src/system_stm32g4xx.c **** 
  96:Src/system_stm32g4xx.c **** /**
  97:Src/system_stm32g4xx.c ****   * @}
  98:Src/system_stm32g4xx.c ****   */
  99:Src/system_stm32g4xx.c **** 
 100:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Defines
 101:Src/system_stm32g4xx.c ****   * @{
 102:Src/system_stm32g4xx.c ****   */
 103:Src/system_stm32g4xx.c **** 
 104:Src/system_stm32g4xx.c **** /************************* Miscellaneous Configuration ************************/
 105:Src/system_stm32g4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 106:Src/system_stm32g4xx.c ****      Internal SRAM. */
 107:Src/system_stm32g4xx.c **** /* #define VECT_TAB_SRAM */
 108:Src/system_stm32g4xx.c **** #define VECT_TAB_OFFSET  0x00UL /*!< Vector Table base offset field.
 109:Src/system_stm32g4xx.c ****                                    This value must be a multiple of 0x200. */
 110:Src/system_stm32g4xx.c **** /******************************************************************************/
 111:Src/system_stm32g4xx.c **** /**
 112:Src/system_stm32g4xx.c ****   * @}
 113:Src/system_stm32g4xx.c ****   */
 114:Src/system_stm32g4xx.c **** 
 115:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Macros
 116:Src/system_stm32g4xx.c ****   * @{
 117:Src/system_stm32g4xx.c ****   */
 118:Src/system_stm32g4xx.c **** 
 119:Src/system_stm32g4xx.c **** /**
 120:Src/system_stm32g4xx.c ****   * @}
 121:Src/system_stm32g4xx.c ****   */
 122:Src/system_stm32g4xx.c **** 
 123:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Variables
 124:Src/system_stm32g4xx.c ****   * @{
 125:Src/system_stm32g4xx.c ****   */
 126:Src/system_stm32g4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 127:Src/system_stm32g4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 128:Src/system_stm32g4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 129:Src/system_stm32g4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 130:Src/system_stm32g4xx.c ****          Note: If you use this function to configure the system clock; then there
 131:Src/system_stm32g4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 132:Src/system_stm32g4xx.c ****                variable is updated automatically.
 133:Src/system_stm32g4xx.c ****   */
 134:Src/system_stm32g4xx.c ****   uint32_t SystemCoreClock = HSI_VALUE;
 135:Src/system_stm32g4xx.c **** 
 136:Src/system_stm32g4xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 137:Src/system_stm32g4xx.c ****   const uint8_t APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 138:Src/system_stm32g4xx.c **** 
 139:Src/system_stm32g4xx.c **** /**
 140:Src/system_stm32g4xx.c ****   * @}
 141:Src/system_stm32g4xx.c ****   */
 142:Src/system_stm32g4xx.c **** 
 143:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_FunctionPrototypes
 144:Src/system_stm32g4xx.c ****   * @{
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 4


 145:Src/system_stm32g4xx.c ****   */
 146:Src/system_stm32g4xx.c **** 
 147:Src/system_stm32g4xx.c **** /**
 148:Src/system_stm32g4xx.c ****   * @}
 149:Src/system_stm32g4xx.c ****   */
 150:Src/system_stm32g4xx.c **** 
 151:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Functions
 152:Src/system_stm32g4xx.c ****   * @{
 153:Src/system_stm32g4xx.c ****   */
 154:Src/system_stm32g4xx.c **** 
 155:Src/system_stm32g4xx.c **** /**
 156:Src/system_stm32g4xx.c ****   * @brief  Setup the microcontroller system.
 157:Src/system_stm32g4xx.c ****   * @param  None
 158:Src/system_stm32g4xx.c ****   * @retval None
 159:Src/system_stm32g4xx.c ****   */
 160:Src/system_stm32g4xx.c **** 
 161:Src/system_stm32g4xx.c **** void SystemInit(void)
 162:Src/system_stm32g4xx.c **** {
  29              		.loc 1 162 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 163:Src/system_stm32g4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 164:Src/system_stm32g4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 165:Src/system_stm32g4xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 165 5 view .LVU1
  35              		.loc 1 165 16 is_stmt 0 view .LVU2
  36 0000 054B     		ldr	r3, .L2
  37 0002 D3F88820 		ldr	r2, [r3, #136]
  38 0006 42F47002 		orr	r2, r2, #15728640
  39 000a C3F88820 		str	r2, [r3, #136]
 166:Src/system_stm32g4xx.c ****   #endif
 167:Src/system_stm32g4xx.c **** 
 168:Src/system_stm32g4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 169:Src/system_stm32g4xx.c **** #ifdef VECT_TAB_SRAM
 170:Src/system_stm32g4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 171:Src/system_stm32g4xx.c **** #else
 172:Src/system_stm32g4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  40              		.loc 1 172 3 is_stmt 1 view .LVU3
  41              		.loc 1 172 13 is_stmt 0 view .LVU4
  42 000e 4FF00062 		mov	r2, #134217728
  43 0012 9A60     		str	r2, [r3, #8]
 173:Src/system_stm32g4xx.c **** #endif
 174:Src/system_stm32g4xx.c **** }
  44              		.loc 1 174 1 view .LVU5
  45 0014 7047     		bx	lr
  46              	.L3:
  47 0016 00BF     		.align	2
  48              	.L2:
  49 0018 00ED00E0 		.word	-536810240
  50              		.cfi_endproc
  51              	.LFE130:
  53              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  54              		.align	1
  55              		.global	SystemCoreClockUpdate
  56              		.syntax unified
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 5


  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	SystemCoreClockUpdate:
  62              	.LFB131:
 175:Src/system_stm32g4xx.c **** 
 176:Src/system_stm32g4xx.c **** /**
 177:Src/system_stm32g4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 178:Src/system_stm32g4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 179:Src/system_stm32g4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 180:Src/system_stm32g4xx.c ****   *         other parameters.
 181:Src/system_stm32g4xx.c ****   *
 182:Src/system_stm32g4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 183:Src/system_stm32g4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 184:Src/system_stm32g4xx.c ****   *         based on this variable will be incorrect.
 185:Src/system_stm32g4xx.c ****   *
 186:Src/system_stm32g4xx.c ****   * @note   - The system frequency computed by this function is not the real
 187:Src/system_stm32g4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 188:Src/system_stm32g4xx.c ****   *           constant and the selected clock source:
 189:Src/system_stm32g4xx.c ****   *
 190:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 191:Src/system_stm32g4xx.c ****   *
 192:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 193:Src/system_stm32g4xx.c ****   *
 194:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 195:Src/system_stm32g4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 196:Src/system_stm32g4xx.c ****   *
 197:Src/system_stm32g4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 198:Src/system_stm32g4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 199:Src/system_stm32g4xx.c ****   *              in voltage and temperature.
 200:Src/system_stm32g4xx.c ****   *
 201:Src/system_stm32g4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 202:Src/system_stm32g4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 203:Src/system_stm32g4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 204:Src/system_stm32g4xx.c ****   *              have wrong result.
 205:Src/system_stm32g4xx.c ****   *
 206:Src/system_stm32g4xx.c ****   *         - The result of this function could be not correct when using fractional
 207:Src/system_stm32g4xx.c ****   *           value for HSE crystal.
 208:Src/system_stm32g4xx.c ****   *
 209:Src/system_stm32g4xx.c ****   * @param  None
 210:Src/system_stm32g4xx.c ****   * @retval None
 211:Src/system_stm32g4xx.c ****   */
 212:Src/system_stm32g4xx.c **** void SystemCoreClockUpdate(void)
 213:Src/system_stm32g4xx.c **** {
  63              		.loc 1 213 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 214:Src/system_stm32g4xx.c ****   uint32_t tmp, pllvco, pllr, pllsource, pllm;
  68              		.loc 1 214 3 view .LVU7
 215:Src/system_stm32g4xx.c **** 
 216:Src/system_stm32g4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 217:Src/system_stm32g4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  69              		.loc 1 217 3 view .LVU8
  70              		.loc 1 217 14 is_stmt 0 view .LVU9
  71 0000 1E4B     		ldr	r3, .L12
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 6


  72 0002 9B68     		ldr	r3, [r3, #8]
  73              		.loc 1 217 21 view .LVU10
  74 0004 03F00C03 		and	r3, r3, #12
  75              		.loc 1 217 3 view .LVU11
  76 0008 082B     		cmp	r3, #8
  77 000a 12D0     		beq	.L5
  78 000c 0C2B     		cmp	r3, #12
  79 000e 14D0     		beq	.L6
  80 0010 042B     		cmp	r3, #4
  81 0012 0AD0     		beq	.L10
  82              	.L7:
 218:Src/system_stm32g4xx.c ****   {
 219:Src/system_stm32g4xx.c ****     case 0x04:  /* HSI used as system clock source */
 220:Src/system_stm32g4xx.c ****       SystemCoreClock = HSI_VALUE;
 221:Src/system_stm32g4xx.c ****       break;
 222:Src/system_stm32g4xx.c **** 
 223:Src/system_stm32g4xx.c ****     case 0x08:  /* HSE used as system clock source */
 224:Src/system_stm32g4xx.c ****       SystemCoreClock = HSE_VALUE;
 225:Src/system_stm32g4xx.c ****       break;
 226:Src/system_stm32g4xx.c **** 
 227:Src/system_stm32g4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 228:Src/system_stm32g4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 229:Src/system_stm32g4xx.c ****          SYSCLK = PLL_VCO / PLLR
 230:Src/system_stm32g4xx.c ****          */
 231:Src/system_stm32g4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 232:Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 233:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 234:Src/system_stm32g4xx.c ****       {
 235:Src/system_stm32g4xx.c ****         pllvco = (HSI_VALUE / pllm);
 236:Src/system_stm32g4xx.c ****       }
 237:Src/system_stm32g4xx.c ****       else                   /* HSE used as PLL clock source */
 238:Src/system_stm32g4xx.c ****       {
 239:Src/system_stm32g4xx.c ****         pllvco = (HSE_VALUE / pllm);
 240:Src/system_stm32g4xx.c ****       }
 241:Src/system_stm32g4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8);
 242:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 243:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 244:Src/system_stm32g4xx.c ****       break;
 245:Src/system_stm32g4xx.c **** 
 246:Src/system_stm32g4xx.c ****     default:
 247:Src/system_stm32g4xx.c ****       break;
 248:Src/system_stm32g4xx.c ****   }
 249:Src/system_stm32g4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 250:Src/system_stm32g4xx.c ****   /* Get HCLK prescaler */
 251:Src/system_stm32g4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
  83              		.loc 1 251 3 is_stmt 1 view .LVU12
  84              		.loc 1 251 28 is_stmt 0 view .LVU13
  85 0014 194B     		ldr	r3, .L12
  86 0016 9B68     		ldr	r3, [r3, #8]
  87              		.loc 1 251 52 view .LVU14
  88 0018 C3F30313 		ubfx	r3, r3, #4, #4
  89              		.loc 1 251 22 view .LVU15
  90 001c 184A     		ldr	r2, .L12+4
  91 001e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
  92              	.LVL0:
 252:Src/system_stm32g4xx.c ****   /* HCLK clock frequency */
 253:Src/system_stm32g4xx.c ****   SystemCoreClock >>= tmp;
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 7


  93              		.loc 1 253 3 is_stmt 1 view .LVU16
  94              		.loc 1 253 19 is_stmt 0 view .LVU17
  95 0020 184A     		ldr	r2, .L12+8
  96 0022 1368     		ldr	r3, [r2]
  97 0024 CB40     		lsrs	r3, r3, r1
  98 0026 1360     		str	r3, [r2]
 254:Src/system_stm32g4xx.c **** }
  99              		.loc 1 254 1 view .LVU18
 100 0028 7047     		bx	lr
 101              	.LVL1:
 102              	.L10:
 220:Src/system_stm32g4xx.c ****       break;
 103              		.loc 1 220 7 is_stmt 1 view .LVU19
 220:Src/system_stm32g4xx.c ****       break;
 104              		.loc 1 220 23 is_stmt 0 view .LVU20
 105 002a 164B     		ldr	r3, .L12+8
 106 002c 164A     		ldr	r2, .L12+12
 107 002e 1A60     		str	r2, [r3]
 221:Src/system_stm32g4xx.c **** 
 108              		.loc 1 221 7 is_stmt 1 view .LVU21
 109 0030 F0E7     		b	.L7
 110              	.L5:
 224:Src/system_stm32g4xx.c ****       break;
 111              		.loc 1 224 7 view .LVU22
 224:Src/system_stm32g4xx.c ****       break;
 112              		.loc 1 224 23 is_stmt 0 view .LVU23
 113 0032 144B     		ldr	r3, .L12+8
 114 0034 154A     		ldr	r2, .L12+16
 115 0036 1A60     		str	r2, [r3]
 225:Src/system_stm32g4xx.c **** 
 116              		.loc 1 225 7 is_stmt 1 view .LVU24
 117 0038 ECE7     		b	.L7
 118              	.L6:
 231:Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 119              		.loc 1 231 7 view .LVU25
 231:Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 120              		.loc 1 231 23 is_stmt 0 view .LVU26
 121 003a 104B     		ldr	r3, .L12
 122 003c DA68     		ldr	r2, [r3, #12]
 231:Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 123              		.loc 1 231 17 view .LVU27
 124 003e 02F00302 		and	r2, r2, #3
 125              	.LVL2:
 232:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 126              		.loc 1 232 7 is_stmt 1 view .LVU28
 232:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 127              		.loc 1 232 19 is_stmt 0 view .LVU29
 128 0042 DB68     		ldr	r3, [r3, #12]
 232:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 129              		.loc 1 232 49 view .LVU30
 130 0044 C3F30313 		ubfx	r3, r3, #4, #4
 232:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 131              		.loc 1 232 12 view .LVU31
 132 0048 0133     		adds	r3, r3, #1
 133              	.LVL3:
 233:Src/system_stm32g4xx.c ****       {
 134              		.loc 1 233 7 is_stmt 1 view .LVU32
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 8


 233:Src/system_stm32g4xx.c ****       {
 135              		.loc 1 233 10 is_stmt 0 view .LVU33
 136 004a 022A     		cmp	r2, #2
 137 004c 12D0     		beq	.L11
 239:Src/system_stm32g4xx.c ****       }
 138              		.loc 1 239 9 is_stmt 1 view .LVU34
 239:Src/system_stm32g4xx.c ****       }
 139              		.loc 1 239 16 is_stmt 0 view .LVU35
 140 004e 0F4A     		ldr	r2, .L12+16
 141              	.LVL4:
 239:Src/system_stm32g4xx.c ****       }
 142              		.loc 1 239 16 view .LVU36
 143 0050 B2FBF3F3 		udiv	r3, r2, r3
 144              	.LVL5:
 145              	.L9:
 241:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 146              		.loc 1 241 7 is_stmt 1 view .LVU37
 241:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 147              		.loc 1 241 30 is_stmt 0 view .LVU38
 148 0054 0949     		ldr	r1, .L12
 149 0056 CA68     		ldr	r2, [r1, #12]
 241:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 150              		.loc 1 241 60 view .LVU39
 151 0058 C2F30622 		ubfx	r2, r2, #8, #7
 241:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 152              		.loc 1 241 14 view .LVU40
 153 005c 03FB02F3 		mul	r3, r3, r2
 154              	.LVL6:
 242:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 155              		.loc 1 242 7 is_stmt 1 view .LVU41
 242:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 156              		.loc 1 242 20 is_stmt 0 view .LVU42
 157 0060 CA68     		ldr	r2, [r1, #12]
 242:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 158              		.loc 1 242 50 view .LVU43
 159 0062 C2F34162 		ubfx	r2, r2, #25, #2
 242:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 160              		.loc 1 242 63 view .LVU44
 161 0066 0132     		adds	r2, r2, #1
 242:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 162              		.loc 1 242 12 view .LVU45
 163 0068 5200     		lsls	r2, r2, #1
 164              	.LVL7:
 243:Src/system_stm32g4xx.c ****       break;
 165              		.loc 1 243 7 is_stmt 1 view .LVU46
 243:Src/system_stm32g4xx.c ****       break;
 166              		.loc 1 243 31 is_stmt 0 view .LVU47
 167 006a B3FBF2F3 		udiv	r3, r3, r2
 168              	.LVL8:
 243:Src/system_stm32g4xx.c ****       break;
 169              		.loc 1 243 23 view .LVU48
 170 006e 054A     		ldr	r2, .L12+8
 171              	.LVL9:
 243:Src/system_stm32g4xx.c ****       break;
 172              		.loc 1 243 23 view .LVU49
 173 0070 1360     		str	r3, [r2]
 244:Src/system_stm32g4xx.c **** 
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 9


 174              		.loc 1 244 7 is_stmt 1 view .LVU50
 175 0072 CFE7     		b	.L7
 176              	.LVL10:
 177              	.L11:
 235:Src/system_stm32g4xx.c ****       }
 178              		.loc 1 235 9 view .LVU51
 235:Src/system_stm32g4xx.c ****       }
 179              		.loc 1 235 16 is_stmt 0 view .LVU52
 180 0074 044A     		ldr	r2, .L12+12
 181              	.LVL11:
 235:Src/system_stm32g4xx.c ****       }
 182              		.loc 1 235 16 view .LVU53
 183 0076 B2FBF3F3 		udiv	r3, r2, r3
 184              	.LVL12:
 235:Src/system_stm32g4xx.c ****       }
 185              		.loc 1 235 16 view .LVU54
 186 007a EBE7     		b	.L9
 187              	.L13:
 188              		.align	2
 189              	.L12:
 190 007c 00100240 		.word	1073876992
 191 0080 00000000 		.word	.LANCHOR1
 192 0084 00000000 		.word	.LANCHOR0
 193 0088 0024F400 		.word	16000000
 194 008c 80969800 		.word	10000000
 195              		.cfi_endproc
 196              	.LFE131:
 198              		.global	APBPrescTable
 199              		.global	AHBPrescTable
 200              		.global	SystemCoreClock
 201              		.section	.data.SystemCoreClock,"aw"
 202              		.align	2
 203              		.set	.LANCHOR0,. + 0
 206              	SystemCoreClock:
 207 0000 0024F400 		.word	16000000
 208              		.section	.rodata.AHBPrescTable,"a"
 209              		.align	2
 210              		.set	.LANCHOR1,. + 0
 213              	AHBPrescTable:
 214 0000 00       		.byte	0
 215 0001 00       		.byte	0
 216 0002 00       		.byte	0
 217 0003 00       		.byte	0
 218 0004 00       		.byte	0
 219 0005 00       		.byte	0
 220 0006 00       		.byte	0
 221 0007 00       		.byte	0
 222 0008 01       		.byte	1
 223 0009 02       		.byte	2
 224 000a 03       		.byte	3
 225 000b 04       		.byte	4
 226 000c 06       		.byte	6
 227 000d 07       		.byte	7
 228 000e 08       		.byte	8
 229 000f 09       		.byte	9
 230              		.section	.rodata.APBPrescTable,"a"
 231              		.align	2
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 10


 234              	APBPrescTable:
 235 0000 00       		.byte	0
 236 0001 00       		.byte	0
 237 0002 00       		.byte	0
 238 0003 00       		.byte	0
 239 0004 01       		.byte	1
 240 0005 02       		.byte	2
 241 0006 03       		.byte	3
 242 0007 04       		.byte	4
 243              		.text
 244              	.Letext0:
 245              		.file 2 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 246              		.file 3 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 247              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 248              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 249              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
ARM GAS  D:\apps\VSCode\data\tmp\ccoSPNp8.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32g4xx.c
D:\apps\VSCode\data\tmp\ccoSPNp8.s:18     .text.SystemInit:0000000000000000 $t
D:\apps\VSCode\data\tmp\ccoSPNp8.s:26     .text.SystemInit:0000000000000000 SystemInit
D:\apps\VSCode\data\tmp\ccoSPNp8.s:49     .text.SystemInit:0000000000000018 $d
D:\apps\VSCode\data\tmp\ccoSPNp8.s:54     .text.SystemCoreClockUpdate:0000000000000000 $t
D:\apps\VSCode\data\tmp\ccoSPNp8.s:61     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
D:\apps\VSCode\data\tmp\ccoSPNp8.s:190    .text.SystemCoreClockUpdate:000000000000007c $d
D:\apps\VSCode\data\tmp\ccoSPNp8.s:234    .rodata.APBPrescTable:0000000000000000 APBPrescTable
D:\apps\VSCode\data\tmp\ccoSPNp8.s:213    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
D:\apps\VSCode\data\tmp\ccoSPNp8.s:206    .data.SystemCoreClock:0000000000000000 SystemCoreClock
D:\apps\VSCode\data\tmp\ccoSPNp8.s:202    .data.SystemCoreClock:0000000000000000 $d
D:\apps\VSCode\data\tmp\ccoSPNp8.s:209    .rodata.AHBPrescTable:0000000000000000 $d
D:\apps\VSCode\data\tmp\ccoSPNp8.s:231    .rodata.APBPrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
