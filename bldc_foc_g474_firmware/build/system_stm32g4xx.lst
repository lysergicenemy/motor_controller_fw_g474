ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32g4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw"
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 0024F400 		.word	16000000
  24              		.global	AHBPrescTable
  25              		.section	.rodata.AHBPrescTable,"a"
  26              		.align	2
  29              	AHBPrescTable:
  30 0000 00       		.byte	0
  31 0001 00       		.byte	0
  32 0002 00       		.byte	0
  33 0003 00       		.byte	0
  34 0004 00       		.byte	0
  35 0005 00       		.byte	0
  36 0006 00       		.byte	0
  37 0007 00       		.byte	0
  38 0008 01       		.byte	1
  39 0009 02       		.byte	2
  40 000a 03       		.byte	3
  41 000b 04       		.byte	4
  42 000c 06       		.byte	6
  43 000d 07       		.byte	7
  44 000e 08       		.byte	8
  45 000f 09       		.byte	9
  46              		.global	APBPrescTable
  47              		.section	.rodata.APBPrescTable,"a"
  48              		.align	2
  51              	APBPrescTable:
  52 0000 00       		.byte	0
  53 0001 00       		.byte	0
  54 0002 00       		.byte	0
  55 0003 00       		.byte	0
  56 0004 01       		.byte	1
  57 0005 02       		.byte	2
  58 0006 03       		.byte	3
  59 0007 04       		.byte	4
  60              		.section	.text.SystemInit,"ax",%progbits
  61              		.align	1
  62              		.global	SystemInit
  63              		.arch armv7e-m
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 2


  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	SystemInit:
  70              	.LFB130:
  71              		.file 1 "Src/system_stm32g4xx.c"
   1:Src/system_stm32g4xx.c **** /**
   2:Src/system_stm32g4xx.c ****   ******************************************************************************
   3:Src/system_stm32g4xx.c ****   * @file    system_stm32g4xx.c
   4:Src/system_stm32g4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32g4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Src/system_stm32g4xx.c ****   *
   7:Src/system_stm32g4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32g4xx.c ****   *   user application:
   9:Src/system_stm32g4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32g4xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32g4xx.c ****   *                      the "startup_stm32g4xx.s" file.
  12:Src/system_stm32g4xx.c ****   *
  13:Src/system_stm32g4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32g4xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32g4xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32g4xx.c ****   *
  17:Src/system_stm32g4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32g4xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32g4xx.c ****   *                                 during program execution.
  20:Src/system_stm32g4xx.c ****   *
  21:Src/system_stm32g4xx.c ****   *   After each device reset the HSI (16 MHz) is used as system clock source.
  22:Src/system_stm32g4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32g4xx.s" file, to
  23:Src/system_stm32g4xx.c ****   *   configure the system clock before to branch to main program.
  24:Src/system_stm32g4xx.c ****   *
  25:Src/system_stm32g4xx.c ****   *   This file configures the system clock as follows:
  26:Src/system_stm32g4xx.c ****   *=============================================================================
  27:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  28:Src/system_stm32g4xx.c ****   *        System Clock source                    | HSI
  29:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  30:Src/system_stm32g4xx.c ****   *        SYSCLK(Hz)                             | 16000000
  31:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  32:Src/system_stm32g4xx.c ****   *        HCLK(Hz)                               | 16000000
  33:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  34:Src/system_stm32g4xx.c ****   *        AHB Prescaler                          | 1
  35:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  36:Src/system_stm32g4xx.c ****   *        APB1 Prescaler                         | 1
  37:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  38:Src/system_stm32g4xx.c ****   *        APB2 Prescaler                         | 1
  39:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  40:Src/system_stm32g4xx.c ****   *        PLL_M                                  | 1
  41:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  42:Src/system_stm32g4xx.c ****   *        PLL_N                                  | 16
  43:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  44:Src/system_stm32g4xx.c ****   *        PLL_P                                  | 7
  45:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  46:Src/system_stm32g4xx.c ****   *        PLL_Q                                  | 2
  47:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  48:Src/system_stm32g4xx.c ****   *        PLL_R                                  | 2
  49:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  50:Src/system_stm32g4xx.c ****   *        Require 48MHz for RNG                  | Disabled
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 3


  51:Src/system_stm32g4xx.c ****   *-----------------------------------------------------------------------------
  52:Src/system_stm32g4xx.c ****   *=============================================================================
  53:Src/system_stm32g4xx.c ****   ******************************************************************************
  54:Src/system_stm32g4xx.c ****   * @attention
  55:Src/system_stm32g4xx.c ****   *
  56:Src/system_stm32g4xx.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  57:Src/system_stm32g4xx.c ****   * All rights reserved.</center></h2>
  58:Src/system_stm32g4xx.c ****   *
  59:Src/system_stm32g4xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  60:Src/system_stm32g4xx.c ****   * the "License"; You may not use this file except in compliance with the
  61:Src/system_stm32g4xx.c ****   * License. You may obtain a copy of the License at:
  62:Src/system_stm32g4xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  63:Src/system_stm32g4xx.c ****   *
  64:Src/system_stm32g4xx.c ****   ******************************************************************************
  65:Src/system_stm32g4xx.c ****   */
  66:Src/system_stm32g4xx.c **** 
  67:Src/system_stm32g4xx.c **** /** @addtogroup CMSIS
  68:Src/system_stm32g4xx.c ****   * @{
  69:Src/system_stm32g4xx.c ****   */
  70:Src/system_stm32g4xx.c **** 
  71:Src/system_stm32g4xx.c **** /** @addtogroup stm32g4xx_system
  72:Src/system_stm32g4xx.c ****   * @{
  73:Src/system_stm32g4xx.c ****   */
  74:Src/system_stm32g4xx.c **** 
  75:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Includes
  76:Src/system_stm32g4xx.c ****   * @{
  77:Src/system_stm32g4xx.c ****   */
  78:Src/system_stm32g4xx.c **** 
  79:Src/system_stm32g4xx.c **** #include "stm32g4xx.h"
  80:Src/system_stm32g4xx.c **** 
  81:Src/system_stm32g4xx.c **** #if !defined  (HSE_VALUE)
  82:Src/system_stm32g4xx.c ****   #define HSE_VALUE     10000000U /*!< Value of the External oscillator in Hz */
  83:Src/system_stm32g4xx.c **** #endif /* HSE_VALUE */
  84:Src/system_stm32g4xx.c **** 
  85:Src/system_stm32g4xx.c **** #if !defined  (HSI_VALUE)
  86:Src/system_stm32g4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
  87:Src/system_stm32g4xx.c **** #endif /* HSI_VALUE */
  88:Src/system_stm32g4xx.c **** /**
  89:Src/system_stm32g4xx.c ****   * @}
  90:Src/system_stm32g4xx.c ****   */
  91:Src/system_stm32g4xx.c **** 
  92:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_TypesDefinitions
  93:Src/system_stm32g4xx.c ****   * @{
  94:Src/system_stm32g4xx.c ****   */
  95:Src/system_stm32g4xx.c **** 
  96:Src/system_stm32g4xx.c **** /**
  97:Src/system_stm32g4xx.c ****   * @}
  98:Src/system_stm32g4xx.c ****   */
  99:Src/system_stm32g4xx.c **** 
 100:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Defines
 101:Src/system_stm32g4xx.c ****   * @{
 102:Src/system_stm32g4xx.c ****   */
 103:Src/system_stm32g4xx.c **** 
 104:Src/system_stm32g4xx.c **** /************************* Miscellaneous Configuration ************************/
 105:Src/system_stm32g4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 106:Src/system_stm32g4xx.c ****      Internal SRAM. */
 107:Src/system_stm32g4xx.c **** /* #define VECT_TAB_SRAM */
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 4


 108:Src/system_stm32g4xx.c **** #define VECT_TAB_OFFSET  0x00UL /*!< Vector Table base offset field.
 109:Src/system_stm32g4xx.c ****                                    This value must be a multiple of 0x200. */
 110:Src/system_stm32g4xx.c **** /******************************************************************************/
 111:Src/system_stm32g4xx.c **** /**
 112:Src/system_stm32g4xx.c ****   * @}
 113:Src/system_stm32g4xx.c ****   */
 114:Src/system_stm32g4xx.c **** 
 115:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Macros
 116:Src/system_stm32g4xx.c ****   * @{
 117:Src/system_stm32g4xx.c ****   */
 118:Src/system_stm32g4xx.c **** 
 119:Src/system_stm32g4xx.c **** /**
 120:Src/system_stm32g4xx.c ****   * @}
 121:Src/system_stm32g4xx.c ****   */
 122:Src/system_stm32g4xx.c **** 
 123:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Variables
 124:Src/system_stm32g4xx.c ****   * @{
 125:Src/system_stm32g4xx.c ****   */
 126:Src/system_stm32g4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 127:Src/system_stm32g4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 128:Src/system_stm32g4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 129:Src/system_stm32g4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 130:Src/system_stm32g4xx.c ****          Note: If you use this function to configure the system clock; then there
 131:Src/system_stm32g4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 132:Src/system_stm32g4xx.c ****                variable is updated automatically.
 133:Src/system_stm32g4xx.c ****   */
 134:Src/system_stm32g4xx.c ****   uint32_t SystemCoreClock = HSI_VALUE;
 135:Src/system_stm32g4xx.c **** 
 136:Src/system_stm32g4xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 137:Src/system_stm32g4xx.c ****   const uint8_t APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 138:Src/system_stm32g4xx.c **** 
 139:Src/system_stm32g4xx.c **** /**
 140:Src/system_stm32g4xx.c ****   * @}
 141:Src/system_stm32g4xx.c ****   */
 142:Src/system_stm32g4xx.c **** 
 143:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_FunctionPrototypes
 144:Src/system_stm32g4xx.c ****   * @{
 145:Src/system_stm32g4xx.c ****   */
 146:Src/system_stm32g4xx.c **** 
 147:Src/system_stm32g4xx.c **** /**
 148:Src/system_stm32g4xx.c ****   * @}
 149:Src/system_stm32g4xx.c ****   */
 150:Src/system_stm32g4xx.c **** 
 151:Src/system_stm32g4xx.c **** /** @addtogroup STM32G4xx_System_Private_Functions
 152:Src/system_stm32g4xx.c ****   * @{
 153:Src/system_stm32g4xx.c ****   */
 154:Src/system_stm32g4xx.c **** 
 155:Src/system_stm32g4xx.c **** /**
 156:Src/system_stm32g4xx.c ****   * @brief  Setup the microcontroller system.
 157:Src/system_stm32g4xx.c ****   * @param  None
 158:Src/system_stm32g4xx.c ****   * @retval None
 159:Src/system_stm32g4xx.c ****   */
 160:Src/system_stm32g4xx.c **** 
 161:Src/system_stm32g4xx.c **** void SystemInit(void)
 162:Src/system_stm32g4xx.c **** {
  72              		.loc 1 162 1
  73              		.cfi_startproc
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 5


  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 7, -4
  81 0002 00AF     		add	r7, sp, #0
  82              	.LCFI1:
  83              		.cfi_def_cfa_register 7
 163:Src/system_stm32g4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 164:Src/system_stm32g4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 165:Src/system_stm32g4xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  84              		.loc 1 165 16
  85 0004 084B     		ldr	r3, .L2
  86 0006 D3F88830 		ldr	r3, [r3, #136]
  87 000a 074A     		ldr	r2, .L2
  88 000c 43F47003 		orr	r3, r3, #15728640
  89 0010 C2F88830 		str	r3, [r2, #136]
 166:Src/system_stm32g4xx.c ****   #endif
 167:Src/system_stm32g4xx.c **** 
 168:Src/system_stm32g4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 169:Src/system_stm32g4xx.c **** #ifdef VECT_TAB_SRAM
 170:Src/system_stm32g4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 171:Src/system_stm32g4xx.c **** #else
 172:Src/system_stm32g4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  90              		.loc 1 172 6
  91 0014 044B     		ldr	r3, .L2
  92              		.loc 1 172 13
  93 0016 4FF00062 		mov	r2, #134217728
  94 001a 9A60     		str	r2, [r3, #8]
 173:Src/system_stm32g4xx.c **** #endif
 174:Src/system_stm32g4xx.c **** }
  95              		.loc 1 174 1
  96 001c 00BF     		nop
  97 001e BD46     		mov	sp, r7
  98              	.LCFI2:
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
 101 0020 5DF8047B 		ldr	r7, [sp], #4
 102              	.LCFI3:
 103              		.cfi_restore 7
 104              		.cfi_def_cfa_offset 0
 105 0024 7047     		bx	lr
 106              	.L3:
 107 0026 00BF     		.align	2
 108              	.L2:
 109 0028 00ED00E0 		.word	-536810240
 110              		.cfi_endproc
 111              	.LFE130:
 113              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 114              		.align	1
 115              		.global	SystemCoreClockUpdate
 116              		.syntax unified
 117              		.thumb
 118              		.thumb_func
 119              		.fpu fpv4-sp-d16
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 6


 121              	SystemCoreClockUpdate:
 122              	.LFB131:
 175:Src/system_stm32g4xx.c **** 
 176:Src/system_stm32g4xx.c **** /**
 177:Src/system_stm32g4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 178:Src/system_stm32g4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 179:Src/system_stm32g4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 180:Src/system_stm32g4xx.c ****   *         other parameters.
 181:Src/system_stm32g4xx.c ****   *
 182:Src/system_stm32g4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 183:Src/system_stm32g4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 184:Src/system_stm32g4xx.c ****   *         based on this variable will be incorrect.
 185:Src/system_stm32g4xx.c ****   *
 186:Src/system_stm32g4xx.c ****   * @note   - The system frequency computed by this function is not the real
 187:Src/system_stm32g4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 188:Src/system_stm32g4xx.c ****   *           constant and the selected clock source:
 189:Src/system_stm32g4xx.c ****   *
 190:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 191:Src/system_stm32g4xx.c ****   *
 192:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 193:Src/system_stm32g4xx.c ****   *
 194:Src/system_stm32g4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 195:Src/system_stm32g4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 196:Src/system_stm32g4xx.c ****   *
 197:Src/system_stm32g4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 198:Src/system_stm32g4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 199:Src/system_stm32g4xx.c ****   *              in voltage and temperature.
 200:Src/system_stm32g4xx.c ****   *
 201:Src/system_stm32g4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32g4xx_hal.h file (default value
 202:Src/system_stm32g4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 203:Src/system_stm32g4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 204:Src/system_stm32g4xx.c ****   *              have wrong result.
 205:Src/system_stm32g4xx.c ****   *
 206:Src/system_stm32g4xx.c ****   *         - The result of this function could be not correct when using fractional
 207:Src/system_stm32g4xx.c ****   *           value for HSE crystal.
 208:Src/system_stm32g4xx.c ****   *
 209:Src/system_stm32g4xx.c ****   * @param  None
 210:Src/system_stm32g4xx.c ****   * @retval None
 211:Src/system_stm32g4xx.c ****   */
 212:Src/system_stm32g4xx.c **** void SystemCoreClockUpdate(void)
 213:Src/system_stm32g4xx.c **** {
 123              		.loc 1 213 1
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 24
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0000 80B4     		push	{r7}
 129              	.LCFI4:
 130              		.cfi_def_cfa_offset 4
 131              		.cfi_offset 7, -4
 132 0002 87B0     		sub	sp, sp, #28
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 32
 135 0004 00AF     		add	r7, sp, #0
 136              	.LCFI6:
 137              		.cfi_def_cfa_register 7
 214:Src/system_stm32g4xx.c ****   uint32_t tmp, pllvco, pllr, pllsource, pllm;
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 7


 215:Src/system_stm32g4xx.c **** 
 216:Src/system_stm32g4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 217:Src/system_stm32g4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 138              		.loc 1 217 14
 139 0006 2D4B     		ldr	r3, .L12
 140 0008 9B68     		ldr	r3, [r3, #8]
 141              		.loc 1 217 21
 142 000a 03F00C03 		and	r3, r3, #12
 143              		.loc 1 217 3
 144 000e 082B     		cmp	r3, #8
 145 0010 07D0     		beq	.L5
 146 0012 0C2B     		cmp	r3, #12
 147 0014 09D0     		beq	.L6
 148 0016 042B     		cmp	r3, #4
 149 0018 39D1     		bne	.L11
 218:Src/system_stm32g4xx.c ****   {
 219:Src/system_stm32g4xx.c ****     case 0x04:  /* HSI used as system clock source */
 220:Src/system_stm32g4xx.c ****       SystemCoreClock = HSI_VALUE;
 150              		.loc 1 220 23
 151 001a 294B     		ldr	r3, .L12+4
 152 001c 294A     		ldr	r2, .L12+8
 153 001e 1A60     		str	r2, [r3]
 221:Src/system_stm32g4xx.c ****       break;
 154              		.loc 1 221 7
 155 0020 36E0     		b	.L8
 156              	.L5:
 222:Src/system_stm32g4xx.c **** 
 223:Src/system_stm32g4xx.c ****     case 0x08:  /* HSE used as system clock source */
 224:Src/system_stm32g4xx.c ****       SystemCoreClock = HSE_VALUE;
 157              		.loc 1 224 23
 158 0022 274B     		ldr	r3, .L12+4
 159 0024 284A     		ldr	r2, .L12+12
 160 0026 1A60     		str	r2, [r3]
 225:Src/system_stm32g4xx.c ****       break;
 161              		.loc 1 225 7
 162 0028 32E0     		b	.L8
 163              	.L6:
 226:Src/system_stm32g4xx.c **** 
 227:Src/system_stm32g4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 228:Src/system_stm32g4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 229:Src/system_stm32g4xx.c ****          SYSCLK = PLL_VCO / PLLR
 230:Src/system_stm32g4xx.c ****          */
 231:Src/system_stm32g4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 164              		.loc 1 231 23
 165 002a 244B     		ldr	r3, .L12
 166 002c DB68     		ldr	r3, [r3, #12]
 167              		.loc 1 231 17
 168 002e 03F00303 		and	r3, r3, #3
 169 0032 3B61     		str	r3, [r7, #16]
 232:Src/system_stm32g4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4) + 1U ;
 170              		.loc 1 232 19
 171 0034 214B     		ldr	r3, .L12
 172 0036 DB68     		ldr	r3, [r3, #12]
 173              		.loc 1 232 49
 174 0038 1B09     		lsrs	r3, r3, #4
 175 003a 03F00F03 		and	r3, r3, #15
 176              		.loc 1 232 12
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 8


 177 003e 0133     		adds	r3, r3, #1
 178 0040 FB60     		str	r3, [r7, #12]
 233:Src/system_stm32g4xx.c ****       if (pllsource == 0x02UL) /* HSI used as PLL clock source */
 179              		.loc 1 233 10
 180 0042 3B69     		ldr	r3, [r7, #16]
 181 0044 022B     		cmp	r3, #2
 182 0046 05D1     		bne	.L9
 234:Src/system_stm32g4xx.c ****       {
 235:Src/system_stm32g4xx.c ****         pllvco = (HSI_VALUE / pllm);
 183              		.loc 1 235 16
 184 0048 1E4A     		ldr	r2, .L12+8
 185 004a FB68     		ldr	r3, [r7, #12]
 186 004c B2FBF3F3 		udiv	r3, r2, r3
 187 0050 7B61     		str	r3, [r7, #20]
 188 0052 04E0     		b	.L10
 189              	.L9:
 236:Src/system_stm32g4xx.c ****       }
 237:Src/system_stm32g4xx.c ****       else                   /* HSE used as PLL clock source */
 238:Src/system_stm32g4xx.c ****       {
 239:Src/system_stm32g4xx.c ****         pllvco = (HSE_VALUE / pllm);
 190              		.loc 1 239 16
 191 0054 1C4A     		ldr	r2, .L12+12
 192 0056 FB68     		ldr	r3, [r7, #12]
 193 0058 B2FBF3F3 		udiv	r3, r2, r3
 194 005c 7B61     		str	r3, [r7, #20]
 195              	.L10:
 240:Src/system_stm32g4xx.c ****       }
 241:Src/system_stm32g4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8);
 196              		.loc 1 241 30
 197 005e 174B     		ldr	r3, .L12
 198 0060 DB68     		ldr	r3, [r3, #12]
 199              		.loc 1 241 60
 200 0062 1B0A     		lsrs	r3, r3, #8
 201 0064 03F07F02 		and	r2, r3, #127
 202              		.loc 1 241 14
 203 0068 7B69     		ldr	r3, [r7, #20]
 204 006a 02FB03F3 		mul	r3, r2, r3
 205 006e 7B61     		str	r3, [r7, #20]
 242:Src/system_stm32g4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25) + 1U) * 2U;
 206              		.loc 1 242 20
 207 0070 124B     		ldr	r3, .L12
 208 0072 DB68     		ldr	r3, [r3, #12]
 209              		.loc 1 242 50
 210 0074 5B0E     		lsrs	r3, r3, #25
 211 0076 03F00303 		and	r3, r3, #3
 212              		.loc 1 242 63
 213 007a 0133     		adds	r3, r3, #1
 214              		.loc 1 242 12
 215 007c 5B00     		lsls	r3, r3, #1
 216 007e BB60     		str	r3, [r7, #8]
 243:Src/system_stm32g4xx.c ****       SystemCoreClock = pllvco/pllr;
 217              		.loc 1 243 31
 218 0080 7A69     		ldr	r2, [r7, #20]
 219 0082 BB68     		ldr	r3, [r7, #8]
 220 0084 B2FBF3F3 		udiv	r3, r2, r3
 221              		.loc 1 243 23
 222 0088 0D4A     		ldr	r2, .L12+4
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 9


 223 008a 1360     		str	r3, [r2]
 244:Src/system_stm32g4xx.c ****       break;
 224              		.loc 1 244 7
 225 008c 00E0     		b	.L8
 226              	.L11:
 245:Src/system_stm32g4xx.c **** 
 246:Src/system_stm32g4xx.c ****     default:
 247:Src/system_stm32g4xx.c ****       break;
 227              		.loc 1 247 7
 228 008e 00BF     		nop
 229              	.L8:
 248:Src/system_stm32g4xx.c ****   }
 249:Src/system_stm32g4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 250:Src/system_stm32g4xx.c ****   /* Get HCLK prescaler */
 251:Src/system_stm32g4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 230              		.loc 1 251 28
 231 0090 0A4B     		ldr	r3, .L12
 232 0092 9B68     		ldr	r3, [r3, #8]
 233              		.loc 1 251 52
 234 0094 1B09     		lsrs	r3, r3, #4
 235 0096 03F00F03 		and	r3, r3, #15
 236              		.loc 1 251 22
 237 009a 0C4A     		ldr	r2, .L12+16
 238 009c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 239              		.loc 1 251 7
 240 009e 7B60     		str	r3, [r7, #4]
 252:Src/system_stm32g4xx.c ****   /* HCLK clock frequency */
 253:Src/system_stm32g4xx.c ****   SystemCoreClock >>= tmp;
 241              		.loc 1 253 19
 242 00a0 074B     		ldr	r3, .L12+4
 243 00a2 1A68     		ldr	r2, [r3]
 244 00a4 7B68     		ldr	r3, [r7, #4]
 245 00a6 22FA03F3 		lsr	r3, r2, r3
 246 00aa 054A     		ldr	r2, .L12+4
 247 00ac 1360     		str	r3, [r2]
 254:Src/system_stm32g4xx.c **** }
 248              		.loc 1 254 1
 249 00ae 00BF     		nop
 250 00b0 1C37     		adds	r7, r7, #28
 251              	.LCFI7:
 252              		.cfi_def_cfa_offset 4
 253 00b2 BD46     		mov	sp, r7
 254              	.LCFI8:
 255              		.cfi_def_cfa_register 13
 256              		@ sp needed
 257 00b4 5DF8047B 		ldr	r7, [sp], #4
 258              	.LCFI9:
 259              		.cfi_restore 7
 260              		.cfi_def_cfa_offset 0
 261 00b8 7047     		bx	lr
 262              	.L13:
 263 00ba 00BF     		.align	2
 264              	.L12:
 265 00bc 00100240 		.word	1073876992
 266 00c0 00000000 		.word	SystemCoreClock
 267 00c4 0024F400 		.word	16000000
 268 00c8 80969800 		.word	10000000
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 10


 269 00cc 00000000 		.word	AHBPrescTable
 270              		.cfi_endproc
 271              	.LFE131:
 273              		.text
 274              	.Letext0:
 275              		.file 2 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 276              		.file 3 "d:\\apps\\embedded_gcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 277              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 278              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 279              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
ARM GAS  D:\apps\VSCode\data\tmp\cct0lmym.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32g4xx.c
D:\apps\VSCode\data\tmp\cct0lmym.s:22     .data.SystemCoreClock:0000000000000000 SystemCoreClock
D:\apps\VSCode\data\tmp\cct0lmym.s:19     .data.SystemCoreClock:0000000000000000 $d
D:\apps\VSCode\data\tmp\cct0lmym.s:29     .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
D:\apps\VSCode\data\tmp\cct0lmym.s:26     .rodata.AHBPrescTable:0000000000000000 $d
D:\apps\VSCode\data\tmp\cct0lmym.s:51     .rodata.APBPrescTable:0000000000000000 APBPrescTable
D:\apps\VSCode\data\tmp\cct0lmym.s:48     .rodata.APBPrescTable:0000000000000000 $d
D:\apps\VSCode\data\tmp\cct0lmym.s:61     .text.SystemInit:0000000000000000 $t
D:\apps\VSCode\data\tmp\cct0lmym.s:69     .text.SystemInit:0000000000000000 SystemInit
D:\apps\VSCode\data\tmp\cct0lmym.s:109    .text.SystemInit:0000000000000028 $d
D:\apps\VSCode\data\tmp\cct0lmym.s:114    .text.SystemCoreClockUpdate:0000000000000000 $t
D:\apps\VSCode\data\tmp\cct0lmym.s:121    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
D:\apps\VSCode\data\tmp\cct0lmym.s:265    .text.SystemCoreClockUpdate:00000000000000bc $d

NO UNDEFINED SYMBOLS
